// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.
// {C} Copyright 2022 Pensando Systems Inc. All rights reserved
// Copyright (C) 2023 Intel Corporation

syntax = "proto3";
package opi_api.storage.v1;

option java_package = "opi_api.storage.v1";
option java_multiple_files = true;
option java_outer_classname = "MiddleendEncryptionProto";

option go_package = "github.com/opiproject/opi-api/storage/v1alpha1/gen/go";
import "opicommon.proto";

import "google/api/client.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";

// Middle End (Storage Services) APIs. For example, encryption, compression, raid, QoS, multipath, ...
service MiddleendEncryptionService {
    rpc CreateEncryptedVolume (CreateEncryptedVolumeRequest) returns (EncryptedVolume) {
        option (google.api.http) = {
            post: "/v1/volumes"
            body: "encrypted_volume"
        };
        option (google.api.method_signature) = "encrypted_volume,encrypted_volume_id";
    }
    rpc DeleteEncryptedVolume (DeleteEncryptedVolumeRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{name=EncryptedVolumes/*}"
        };
        option (google.api.method_signature) = "name";
    }
    rpc UpdateEncryptedVolume (UpdateEncryptedVolumeRequest) returns (EncryptedVolume) {
        option (google.api.http) = {
            patch: "/v1/{encrypted_volume.name=subsystems}"
            body: "encrypted_volume"
        };
        option (google.api.method_signature) = "encrypted_volume,update_mask";
    }
    rpc ListEncryptedVolumes   (ListEncryptedVolumesRequest)   returns (ListEncryptedVolumesResponse)   {
        option (google.api.http) = {
            get: "/v1/{parent=volumes}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetEncryptedVolume    (GetEncryptedVolumeRequest)    returns (EncryptedVolume)    {
        option (google.api.http) = {
            get: "/v1/{name=EncryptedVolumes/*}"
        };
        option (google.api.method_signature) = "name";
    }
    rpc EncryptedVolumeStats  (EncryptedVolumeStatsRequest)  returns (EncryptedVolumeStatsResponse)  {}
}

message EncryptedVolume {
    option (google.api.resource) = {
        type: "storage.opiproject.org/EncryptedVolume"
        pattern: "volumes/{volume}"
    };

    // name is an opaque object handle that is not user settable.
    // name will be returned with created object
    // user can only set {resource}_id on the Create request object
    string name = 1 [
        (google.api.field_behavior) = OUTPUT_ONLY,
        (google.api.resource_reference).type = "opi_api.storage.v1/EncryptedVolume"
    ];

    // The back/middle-end volume to back this volume
    string volume_name_ref = 2 [ (google.api.field_behavior) = REQUIRED ];

    // Key to be used for encryption
    bytes key = 3;

    // Cipher to use
    EncryptionType cipher = 4;

}

message CreateEncryptedVolumeRequest {
    EncryptedVolume encrypted_volume = 1 [(google.api.field_behavior) = REQUIRED];
    string encrypted_volume_id = 2;
}

message DeleteEncryptedVolumeRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/EncryptedVolume"
    ];
    // If set to true, and the resource is not found, the request will succeed
    // but no action will be taken on the server
    bool allow_missing = 2;
}

message UpdateEncryptedVolumeRequest {
    // The object's `name` field is used to identify the object to be updated.
    EncryptedVolume encrypted_volume = 1;
    // The list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
    // If set to true, and the object is not found, a new object will be created.
    // In this situation, `update_mask` is ignored.
    bool allow_missing = 3;
}

message ListEncryptedVolumesRequest {
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/EncryptedVolume"
    ];
    int32 page_size = 2;
    string page_token = 3;
}

message ListEncryptedVolumesResponse {
    repeated EncryptedVolume encrypted_volumes = 1;
    string next_page_token = 2;
}

message GetEncryptedVolumeRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/EncryptedVolume"
    ];
}

message EncryptedVolumeStatsRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/EncryptedVolume"
    ];
}

message EncryptedVolumeStatsResponse {
    VolumeStats stats = 1;
}
