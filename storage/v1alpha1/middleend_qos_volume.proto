// SPDX-License-Identifier: Apache-2.0
// Copyright (C) 2023 Intel Corporation

syntax = "proto3";
package opi_api.storage.v1;

option java_package = "opi_api.storage.v1";
option java_multiple_files = true;
option java_outer_classname = "MiddleendQosVolumeProto";

option go_package = "github.com/opiproject/opi-api/storage/v1alpha1/gen/go";
import "opicommon.proto";

import "google/api/client.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";

service MiddleendQosVolumeService {
    rpc CreateQosVolume(CreateQosVolumeRequest) returns (QosVolume) {
        option (google.api.http) = {
            post: "/v1/volumes"
            body : "qos_volume"
        };
        option (google.api.method_signature) = "qos_volume,qos_volume_id";
    }
    rpc DeleteQosVolume(DeleteQosVolumeRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{name=QosVolumes/*}"
        };
        option (google.api.method_signature) = "name";
    }
    rpc UpdateQosVolume(UpdateQosVolumeRequest) returns (QosVolume) {
        option (google.api.http) = {
            patch : "/v1/{qos_volume.name=subsystems}"
            body : "qos_volume"
        };
        option (google.api.method_signature) = "qos_volume,update_mask";
    }
    rpc ListQosVolumes(ListQosVolumesRequest) returns (ListQosVolumesResponse) {
        option (google.api.http) = {
            get : "/v1/{parent=volumes}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetQosVolume(GetQosVolumeRequest) returns (QosVolume) {
        option (google.api.http) = {
            get: "/v1/{name=QosVolumes/*}"
        };
        option (google.api.method_signature) = "name";
    }
    rpc StatsQosVolume(StatsQosVolumeRequest) returns (StatsQosVolumeResponse) {
        option (google.api.http) = {
            get: "/v1/{name=QosVolumes/*}:stats"
        };
        option (google.api.method_signature) = "name";
    }
}

message QosVolume {
    option (google.api.resource) = {
        type: "storage.opiproject.org/QosVolume"
        pattern: "volumes/{volume}"
    };

    // name is an opaque object handle that is not user settable.
    // name will be returned with created object
    // user can only set {resource}_id on the Create request object
    string name = 1 [
        (google.api.field_behavior) = OUTPUT_ONLY,
        (google.api.field_behavior) = IMMUTABLE,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];

    // Middleend/backend volume to apply QoS on
    string volume_name_ref = 2 [ (google.api.field_behavior) = REQUIRED ];

    QosLimit min_limit = 3;
    QosLimit max_limit = 4;
}

message CreateQosVolumeRequest {
    QosVolume qos_volume = 1 [ (google.api.field_behavior) = REQUIRED ];
    string qos_volume_id = 2;
}

message DeleteQosVolumeRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];

    // If set to true, and the resource is not found, the request will succeed
    // but no action will be taken on the server
    bool allow_missing = 2;
}

message UpdateQosVolumeRequest {
    // The object's `name` field is used to identify the object to be updated.
    QosVolume qos_volume = 1;
    // The list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
    // If set to true, and the object is not found, a new object will be created.
    // In this situation, `update_mask` is ignored.
    bool allow_missing = 3;
}

message ListQosVolumesRequest {
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];
    int32 page_size = 2;
    string page_token = 3;
}

message ListQosVolumesResponse {
    repeated QosVolume qos_volumes = 1;
    string next_page_token = 2;
}

message GetQosVolumeRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];
}

message StatsQosVolumeRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];
}

message StatsQosVolumeResponse {
    VolumeStats stats = 1;
}
