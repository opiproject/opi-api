// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: backend_null.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_backend_5fnull_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_backend_5fnull_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "uuid.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_backend_5fnull_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_backend_5fnull_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_backend_5fnull_2eproto;
namespace opi_api {
namespace storage {
namespace v1 {
class NullDebug;
struct NullDebugDefaultTypeInternal;
extern NullDebugDefaultTypeInternal _NullDebug_default_instance_;
class NullDebugCreateRequest;
struct NullDebugCreateRequestDefaultTypeInternal;
extern NullDebugCreateRequestDefaultTypeInternal _NullDebugCreateRequest_default_instance_;
class NullDebugCreateResponse;
struct NullDebugCreateResponseDefaultTypeInternal;
extern NullDebugCreateResponseDefaultTypeInternal _NullDebugCreateResponse_default_instance_;
class NullDebugDeleteRequest;
struct NullDebugDeleteRequestDefaultTypeInternal;
extern NullDebugDeleteRequestDefaultTypeInternal _NullDebugDeleteRequest_default_instance_;
class NullDebugDeleteResponse;
struct NullDebugDeleteResponseDefaultTypeInternal;
extern NullDebugDeleteResponseDefaultTypeInternal _NullDebugDeleteResponse_default_instance_;
class NullDebugGetRequest;
struct NullDebugGetRequestDefaultTypeInternal;
extern NullDebugGetRequestDefaultTypeInternal _NullDebugGetRequest_default_instance_;
class NullDebugGetResponse;
struct NullDebugGetResponseDefaultTypeInternal;
extern NullDebugGetResponseDefaultTypeInternal _NullDebugGetResponse_default_instance_;
class NullDebugListRequest;
struct NullDebugListRequestDefaultTypeInternal;
extern NullDebugListRequestDefaultTypeInternal _NullDebugListRequest_default_instance_;
class NullDebugListResponse;
struct NullDebugListResponseDefaultTypeInternal;
extern NullDebugListResponseDefaultTypeInternal _NullDebugListResponse_default_instance_;
class NullDebugStatsRequest;
struct NullDebugStatsRequestDefaultTypeInternal;
extern NullDebugStatsRequestDefaultTypeInternal _NullDebugStatsRequest_default_instance_;
class NullDebugStatsResponse;
struct NullDebugStatsResponseDefaultTypeInternal;
extern NullDebugStatsResponseDefaultTypeInternal _NullDebugStatsResponse_default_instance_;
class NullDebugUpdateRequest;
struct NullDebugUpdateRequestDefaultTypeInternal;
extern NullDebugUpdateRequestDefaultTypeInternal _NullDebugUpdateRequest_default_instance_;
class NullDebugUpdateResponse;
struct NullDebugUpdateResponseDefaultTypeInternal;
extern NullDebugUpdateResponseDefaultTypeInternal _NullDebugUpdateResponse_default_instance_;
}  // namespace v1
}  // namespace storage
}  // namespace opi_api
PROTOBUF_NAMESPACE_OPEN
template<> ::opi_api::storage::v1::NullDebug* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebug>(Arena*);
template<> ::opi_api::storage::v1::NullDebugCreateRequest* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugCreateRequest>(Arena*);
template<> ::opi_api::storage::v1::NullDebugCreateResponse* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugCreateResponse>(Arena*);
template<> ::opi_api::storage::v1::NullDebugDeleteRequest* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugDeleteRequest>(Arena*);
template<> ::opi_api::storage::v1::NullDebugDeleteResponse* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugDeleteResponse>(Arena*);
template<> ::opi_api::storage::v1::NullDebugGetRequest* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugGetRequest>(Arena*);
template<> ::opi_api::storage::v1::NullDebugGetResponse* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugGetResponse>(Arena*);
template<> ::opi_api::storage::v1::NullDebugListRequest* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugListRequest>(Arena*);
template<> ::opi_api::storage::v1::NullDebugListResponse* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugListResponse>(Arena*);
template<> ::opi_api::storage::v1::NullDebugStatsRequest* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugStatsRequest>(Arena*);
template<> ::opi_api::storage::v1::NullDebugStatsResponse* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugStatsResponse>(Arena*);
template<> ::opi_api::storage::v1::NullDebugUpdateRequest* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugUpdateRequest>(Arena*);
template<> ::opi_api::storage::v1::NullDebugUpdateResponse* Arena::CreateMaybeMessage<::opi_api::storage::v1::NullDebugUpdateResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace opi_api {
namespace storage {
namespace v1 {

// ===================================================================

class NullDebug final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebug) */ {
 public:
  inline NullDebug() : NullDebug(nullptr) {}
  ~NullDebug() override;
  explicit constexpr NullDebug(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebug(const NullDebug& from);
  NullDebug(NullDebug&& from) noexcept
    : NullDebug() {
    *this = ::std::move(from);
  }

  inline NullDebug& operator=(const NullDebug& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebug& operator=(NullDebug&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebug& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebug* internal_default_instance() {
    return reinterpret_cast<const NullDebug*>(
               &_NullDebug_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NullDebug& a, NullDebug& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebug* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebug* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebug* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebug>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebug& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebug& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebug* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebug";
  }
  protected:
  explicit NullDebug(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kUuidFieldNumber = 5,
    kIdFieldNumber = 1,
    kBlockSizeFieldNumber = 3,
    kNumBlocksFieldNumber = 4,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .opi_api.common.v1.Uuid uuid = 5;
  bool has_uuid() const;
  private:
  bool _internal_has_uuid() const;
  public:
  void clear_uuid();
  const ::opi_api::common::v1::Uuid& uuid() const;
  PROTOBUF_NODISCARD ::opi_api::common::v1::Uuid* release_uuid();
  ::opi_api::common::v1::Uuid* mutable_uuid();
  void set_allocated_uuid(::opi_api::common::v1::Uuid* uuid);
  private:
  const ::opi_api::common::v1::Uuid& _internal_uuid() const;
  ::opi_api::common::v1::Uuid* _internal_mutable_uuid();
  public:
  void unsafe_arena_set_allocated_uuid(
      ::opi_api::common::v1::Uuid* uuid);
  ::opi_api::common::v1::Uuid* unsafe_arena_release_uuid();

  // int64 id = 1;
  void clear_id();
  int64_t id() const;
  void set_id(int64_t value);
  private:
  int64_t _internal_id() const;
  void _internal_set_id(int64_t value);
  public:

  // int64 block_size = 3;
  void clear_block_size();
  int64_t block_size() const;
  void set_block_size(int64_t value);
  private:
  int64_t _internal_block_size() const;
  void _internal_set_block_size(int64_t value);
  public:

  // int64 num_blocks = 4;
  void clear_num_blocks();
  int64_t num_blocks() const;
  void set_num_blocks(int64_t value);
  private:
  int64_t _internal_num_blocks() const;
  void _internal_set_num_blocks(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebug)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::opi_api::common::v1::Uuid* uuid_;
  int64_t id_;
  int64_t block_size_;
  int64_t num_blocks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugCreateRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugCreateRequest) */ {
 public:
  inline NullDebugCreateRequest() : NullDebugCreateRequest(nullptr) {}
  ~NullDebugCreateRequest() override;
  explicit constexpr NullDebugCreateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugCreateRequest(const NullDebugCreateRequest& from);
  NullDebugCreateRequest(NullDebugCreateRequest&& from) noexcept
    : NullDebugCreateRequest() {
    *this = ::std::move(from);
  }

  inline NullDebugCreateRequest& operator=(const NullDebugCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugCreateRequest& operator=(NullDebugCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugCreateRequest* internal_default_instance() {
    return reinterpret_cast<const NullDebugCreateRequest*>(
               &_NullDebugCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NullDebugCreateRequest& a, NullDebugCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugCreateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugCreateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugCreateRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugCreateRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugCreateRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugCreateRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugCreateRequest";
  }
  protected:
  explicit NullDebugCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .opi_api.storage.v1.NullDebug device = 1;
  bool has_device() const;
  private:
  bool _internal_has_device() const;
  public:
  void clear_device();
  const ::opi_api::storage::v1::NullDebug& device() const;
  PROTOBUF_NODISCARD ::opi_api::storage::v1::NullDebug* release_device();
  ::opi_api::storage::v1::NullDebug* mutable_device();
  void set_allocated_device(::opi_api::storage::v1::NullDebug* device);
  private:
  const ::opi_api::storage::v1::NullDebug& _internal_device() const;
  ::opi_api::storage::v1::NullDebug* _internal_mutable_device();
  public:
  void unsafe_arena_set_allocated_device(
      ::opi_api::storage::v1::NullDebug* device);
  ::opi_api::storage::v1::NullDebug* unsafe_arena_release_device();

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugCreateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::opi_api::storage::v1::NullDebug* device_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugCreateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugCreateResponse) */ {
 public:
  inline NullDebugCreateResponse() : NullDebugCreateResponse(nullptr) {}
  explicit constexpr NullDebugCreateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugCreateResponse(const NullDebugCreateResponse& from);
  NullDebugCreateResponse(NullDebugCreateResponse&& from) noexcept
    : NullDebugCreateResponse() {
    *this = ::std::move(from);
  }

  inline NullDebugCreateResponse& operator=(const NullDebugCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugCreateResponse& operator=(NullDebugCreateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugCreateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugCreateResponse* internal_default_instance() {
    return reinterpret_cast<const NullDebugCreateResponse*>(
               &_NullDebugCreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(NullDebugCreateResponse& a, NullDebugCreateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugCreateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugCreateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugCreateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugCreateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NullDebugCreateResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NullDebugCreateResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugCreateResponse";
  }
  protected:
  explicit NullDebugCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugCreateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugDeleteRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugDeleteRequest) */ {
 public:
  inline NullDebugDeleteRequest() : NullDebugDeleteRequest(nullptr) {}
  ~NullDebugDeleteRequest() override;
  explicit constexpr NullDebugDeleteRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugDeleteRequest(const NullDebugDeleteRequest& from);
  NullDebugDeleteRequest(NullDebugDeleteRequest&& from) noexcept
    : NullDebugDeleteRequest() {
    *this = ::std::move(from);
  }

  inline NullDebugDeleteRequest& operator=(const NullDebugDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugDeleteRequest& operator=(NullDebugDeleteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugDeleteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugDeleteRequest* internal_default_instance() {
    return reinterpret_cast<const NullDebugDeleteRequest*>(
               &_NullDebugDeleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(NullDebugDeleteRequest& a, NullDebugDeleteRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugDeleteRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugDeleteRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugDeleteRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugDeleteRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugDeleteRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugDeleteRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugDeleteRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugDeleteRequest";
  }
  protected:
  explicit NullDebugDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id();
  int64_t id() const;
  void set_id(int64_t value);
  private:
  int64_t _internal_id() const;
  void _internal_set_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugDeleteRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugDeleteResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugDeleteResponse) */ {
 public:
  inline NullDebugDeleteResponse() : NullDebugDeleteResponse(nullptr) {}
  explicit constexpr NullDebugDeleteResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugDeleteResponse(const NullDebugDeleteResponse& from);
  NullDebugDeleteResponse(NullDebugDeleteResponse&& from) noexcept
    : NullDebugDeleteResponse() {
    *this = ::std::move(from);
  }

  inline NullDebugDeleteResponse& operator=(const NullDebugDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugDeleteResponse& operator=(NullDebugDeleteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugDeleteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugDeleteResponse* internal_default_instance() {
    return reinterpret_cast<const NullDebugDeleteResponse*>(
               &_NullDebugDeleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(NullDebugDeleteResponse& a, NullDebugDeleteResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugDeleteResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugDeleteResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugDeleteResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugDeleteResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NullDebugDeleteResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NullDebugDeleteResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugDeleteResponse";
  }
  protected:
  explicit NullDebugDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugDeleteResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugUpdateRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugUpdateRequest) */ {
 public:
  inline NullDebugUpdateRequest() : NullDebugUpdateRequest(nullptr) {}
  ~NullDebugUpdateRequest() override;
  explicit constexpr NullDebugUpdateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugUpdateRequest(const NullDebugUpdateRequest& from);
  NullDebugUpdateRequest(NullDebugUpdateRequest&& from) noexcept
    : NullDebugUpdateRequest() {
    *this = ::std::move(from);
  }

  inline NullDebugUpdateRequest& operator=(const NullDebugUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugUpdateRequest& operator=(NullDebugUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const NullDebugUpdateRequest*>(
               &_NullDebugUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(NullDebugUpdateRequest& a, NullDebugUpdateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugUpdateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugUpdateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugUpdateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugUpdateRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugUpdateRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugUpdateRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugUpdateRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugUpdateRequest";
  }
  protected:
  explicit NullDebugUpdateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .opi_api.storage.v1.NullDebug device = 1;
  bool has_device() const;
  private:
  bool _internal_has_device() const;
  public:
  void clear_device();
  const ::opi_api::storage::v1::NullDebug& device() const;
  PROTOBUF_NODISCARD ::opi_api::storage::v1::NullDebug* release_device();
  ::opi_api::storage::v1::NullDebug* mutable_device();
  void set_allocated_device(::opi_api::storage::v1::NullDebug* device);
  private:
  const ::opi_api::storage::v1::NullDebug& _internal_device() const;
  ::opi_api::storage::v1::NullDebug* _internal_mutable_device();
  public:
  void unsafe_arena_set_allocated_device(
      ::opi_api::storage::v1::NullDebug* device);
  ::opi_api::storage::v1::NullDebug* unsafe_arena_release_device();

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugUpdateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::opi_api::storage::v1::NullDebug* device_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugUpdateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugUpdateResponse) */ {
 public:
  inline NullDebugUpdateResponse() : NullDebugUpdateResponse(nullptr) {}
  explicit constexpr NullDebugUpdateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugUpdateResponse(const NullDebugUpdateResponse& from);
  NullDebugUpdateResponse(NullDebugUpdateResponse&& from) noexcept
    : NullDebugUpdateResponse() {
    *this = ::std::move(from);
  }

  inline NullDebugUpdateResponse& operator=(const NullDebugUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugUpdateResponse& operator=(NullDebugUpdateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugUpdateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const NullDebugUpdateResponse*>(
               &_NullDebugUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(NullDebugUpdateResponse& a, NullDebugUpdateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugUpdateResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugUpdateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugUpdateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugUpdateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NullDebugUpdateResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NullDebugUpdateResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugUpdateResponse";
  }
  protected:
  explicit NullDebugUpdateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugUpdateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugListRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugListRequest) */ {
 public:
  inline NullDebugListRequest() : NullDebugListRequest(nullptr) {}
  explicit constexpr NullDebugListRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugListRequest(const NullDebugListRequest& from);
  NullDebugListRequest(NullDebugListRequest&& from) noexcept
    : NullDebugListRequest() {
    *this = ::std::move(from);
  }

  inline NullDebugListRequest& operator=(const NullDebugListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugListRequest& operator=(NullDebugListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugListRequest* internal_default_instance() {
    return reinterpret_cast<const NullDebugListRequest*>(
               &_NullDebugListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(NullDebugListRequest& a, NullDebugListRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugListRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugListRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugListRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugListRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NullDebugListRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NullDebugListRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugListRequest";
  }
  protected:
  explicit NullDebugListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugListRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugListResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugListResponse) */ {
 public:
  inline NullDebugListResponse() : NullDebugListResponse(nullptr) {}
  ~NullDebugListResponse() override;
  explicit constexpr NullDebugListResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugListResponse(const NullDebugListResponse& from);
  NullDebugListResponse(NullDebugListResponse&& from) noexcept
    : NullDebugListResponse() {
    *this = ::std::move(from);
  }

  inline NullDebugListResponse& operator=(const NullDebugListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugListResponse& operator=(NullDebugListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugListResponse* internal_default_instance() {
    return reinterpret_cast<const NullDebugListResponse*>(
               &_NullDebugListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(NullDebugListResponse& a, NullDebugListResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugListResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugListResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugListResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugListResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugListResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugListResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugListResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugListResponse";
  }
  protected:
  explicit NullDebugListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceFieldNumber = 1,
  };
  // repeated .opi_api.storage.v1.NullDebug device = 1;
  int device_size() const;
  private:
  int _internal_device_size() const;
  public:
  void clear_device();
  ::opi_api::storage::v1::NullDebug* mutable_device(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opi_api::storage::v1::NullDebug >*
      mutable_device();
  private:
  const ::opi_api::storage::v1::NullDebug& _internal_device(int index) const;
  ::opi_api::storage::v1::NullDebug* _internal_add_device();
  public:
  const ::opi_api::storage::v1::NullDebug& device(int index) const;
  ::opi_api::storage::v1::NullDebug* add_device();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opi_api::storage::v1::NullDebug >&
      device() const;

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugListResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opi_api::storage::v1::NullDebug > device_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugGetRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugGetRequest) */ {
 public:
  inline NullDebugGetRequest() : NullDebugGetRequest(nullptr) {}
  ~NullDebugGetRequest() override;
  explicit constexpr NullDebugGetRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugGetRequest(const NullDebugGetRequest& from);
  NullDebugGetRequest(NullDebugGetRequest&& from) noexcept
    : NullDebugGetRequest() {
    *this = ::std::move(from);
  }

  inline NullDebugGetRequest& operator=(const NullDebugGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugGetRequest& operator=(NullDebugGetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugGetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugGetRequest* internal_default_instance() {
    return reinterpret_cast<const NullDebugGetRequest*>(
               &_NullDebugGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(NullDebugGetRequest& a, NullDebugGetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugGetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugGetRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugGetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugGetRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugGetRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugGetRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugGetRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugGetRequest";
  }
  protected:
  explicit NullDebugGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id();
  int64_t id() const;
  void set_id(int64_t value);
  private:
  int64_t _internal_id() const;
  void _internal_set_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugGetRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugGetResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugGetResponse) */ {
 public:
  inline NullDebugGetResponse() : NullDebugGetResponse(nullptr) {}
  ~NullDebugGetResponse() override;
  explicit constexpr NullDebugGetResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugGetResponse(const NullDebugGetResponse& from);
  NullDebugGetResponse(NullDebugGetResponse&& from) noexcept
    : NullDebugGetResponse() {
    *this = ::std::move(from);
  }

  inline NullDebugGetResponse& operator=(const NullDebugGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugGetResponse& operator=(NullDebugGetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugGetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugGetResponse* internal_default_instance() {
    return reinterpret_cast<const NullDebugGetResponse*>(
               &_NullDebugGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(NullDebugGetResponse& a, NullDebugGetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugGetResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugGetResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugGetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugGetResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugGetResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugGetResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugGetResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugGetResponse";
  }
  protected:
  explicit NullDebugGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .opi_api.storage.v1.NullDebug device = 1;
  bool has_device() const;
  private:
  bool _internal_has_device() const;
  public:
  void clear_device();
  const ::opi_api::storage::v1::NullDebug& device() const;
  PROTOBUF_NODISCARD ::opi_api::storage::v1::NullDebug* release_device();
  ::opi_api::storage::v1::NullDebug* mutable_device();
  void set_allocated_device(::opi_api::storage::v1::NullDebug* device);
  private:
  const ::opi_api::storage::v1::NullDebug& _internal_device() const;
  ::opi_api::storage::v1::NullDebug* _internal_mutable_device();
  public:
  void unsafe_arena_set_allocated_device(
      ::opi_api::storage::v1::NullDebug* device);
  ::opi_api::storage::v1::NullDebug* unsafe_arena_release_device();

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugGetResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::opi_api::storage::v1::NullDebug* device_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugStatsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugStatsRequest) */ {
 public:
  inline NullDebugStatsRequest() : NullDebugStatsRequest(nullptr) {}
  ~NullDebugStatsRequest() override;
  explicit constexpr NullDebugStatsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugStatsRequest(const NullDebugStatsRequest& from);
  NullDebugStatsRequest(NullDebugStatsRequest&& from) noexcept
    : NullDebugStatsRequest() {
    *this = ::std::move(from);
  }

  inline NullDebugStatsRequest& operator=(const NullDebugStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugStatsRequest& operator=(NullDebugStatsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugStatsRequest* internal_default_instance() {
    return reinterpret_cast<const NullDebugStatsRequest*>(
               &_NullDebugStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(NullDebugStatsRequest& a, NullDebugStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugStatsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugStatsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugStatsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugStatsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugStatsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugStatsRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugStatsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugStatsRequest";
  }
  protected:
  explicit NullDebugStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id();
  int64_t id() const;
  void set_id(int64_t value);
  private:
  int64_t _internal_id() const;
  void _internal_set_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugStatsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// -------------------------------------------------------------------

class NullDebugStatsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:opi_api.storage.v1.NullDebugStatsResponse) */ {
 public:
  inline NullDebugStatsResponse() : NullDebugStatsResponse(nullptr) {}
  ~NullDebugStatsResponse() override;
  explicit constexpr NullDebugStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullDebugStatsResponse(const NullDebugStatsResponse& from);
  NullDebugStatsResponse(NullDebugStatsResponse&& from) noexcept
    : NullDebugStatsResponse() {
    *this = ::std::move(from);
  }

  inline NullDebugStatsResponse& operator=(const NullDebugStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullDebugStatsResponse& operator=(NullDebugStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullDebugStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullDebugStatsResponse* internal_default_instance() {
    return reinterpret_cast<const NullDebugStatsResponse*>(
               &_NullDebugStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(NullDebugStatsResponse& a, NullDebugStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NullDebugStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullDebugStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullDebugStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullDebugStatsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NullDebugStatsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NullDebugStatsResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullDebugStatsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "opi_api.storage.v1.NullDebugStatsResponse";
  }
  protected:
  explicit NullDebugStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string stats = 2;
  void clear_stats();
  const std::string& stats() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_stats(ArgT0&& arg0, ArgT... args);
  std::string* mutable_stats();
  PROTOBUF_NODISCARD std::string* release_stats();
  void set_allocated_stats(std::string* stats);
  private:
  const std::string& _internal_stats() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stats(const std::string& value);
  std::string* _internal_mutable_stats();
  public:

  // int64 id = 1;
  void clear_id();
  int64_t id() const;
  void set_id(int64_t value);
  private:
  int64_t _internal_id() const;
  void _internal_set_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NullDebugStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stats_;
  int64_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_backend_5fnull_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NullDebug

// int64 id = 1;
inline void NullDebug::clear_id() {
  id_ = int64_t{0};
}
inline int64_t NullDebug::_internal_id() const {
  return id_;
}
inline int64_t NullDebug::id() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebug.id)
  return _internal_id();
}
inline void NullDebug::_internal_set_id(int64_t value) {
  
  id_ = value;
}
inline void NullDebug::set_id(int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebug.id)
}

// string name = 2;
inline void NullDebug::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& NullDebug::name() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebug.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void NullDebug::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebug.name)
}
inline std::string* NullDebug::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:opi_api.storage.v1.NullDebug.name)
  return _s;
}
inline const std::string& NullDebug::_internal_name() const {
  return name_.Get();
}
inline void NullDebug::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* NullDebug::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* NullDebug::release_name() {
  // @@protoc_insertion_point(field_release:opi_api.storage.v1.NullDebug.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void NullDebug::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:opi_api.storage.v1.NullDebug.name)
}

// int64 block_size = 3;
inline void NullDebug::clear_block_size() {
  block_size_ = int64_t{0};
}
inline int64_t NullDebug::_internal_block_size() const {
  return block_size_;
}
inline int64_t NullDebug::block_size() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebug.block_size)
  return _internal_block_size();
}
inline void NullDebug::_internal_set_block_size(int64_t value) {
  
  block_size_ = value;
}
inline void NullDebug::set_block_size(int64_t value) {
  _internal_set_block_size(value);
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebug.block_size)
}

// int64 num_blocks = 4;
inline void NullDebug::clear_num_blocks() {
  num_blocks_ = int64_t{0};
}
inline int64_t NullDebug::_internal_num_blocks() const {
  return num_blocks_;
}
inline int64_t NullDebug::num_blocks() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebug.num_blocks)
  return _internal_num_blocks();
}
inline void NullDebug::_internal_set_num_blocks(int64_t value) {
  
  num_blocks_ = value;
}
inline void NullDebug::set_num_blocks(int64_t value) {
  _internal_set_num_blocks(value);
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebug.num_blocks)
}

// .opi_api.common.v1.Uuid uuid = 5;
inline bool NullDebug::_internal_has_uuid() const {
  return this != internal_default_instance() && uuid_ != nullptr;
}
inline bool NullDebug::has_uuid() const {
  return _internal_has_uuid();
}
inline const ::opi_api::common::v1::Uuid& NullDebug::_internal_uuid() const {
  const ::opi_api::common::v1::Uuid* p = uuid_;
  return p != nullptr ? *p : reinterpret_cast<const ::opi_api::common::v1::Uuid&>(
      ::opi_api::common::v1::_Uuid_default_instance_);
}
inline const ::opi_api::common::v1::Uuid& NullDebug::uuid() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebug.uuid)
  return _internal_uuid();
}
inline void NullDebug::unsafe_arena_set_allocated_uuid(
    ::opi_api::common::v1::Uuid* uuid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uuid_);
  }
  uuid_ = uuid;
  if (uuid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:opi_api.storage.v1.NullDebug.uuid)
}
inline ::opi_api::common::v1::Uuid* NullDebug::release_uuid() {
  
  ::opi_api::common::v1::Uuid* temp = uuid_;
  uuid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::opi_api::common::v1::Uuid* NullDebug::unsafe_arena_release_uuid() {
  // @@protoc_insertion_point(field_release:opi_api.storage.v1.NullDebug.uuid)
  
  ::opi_api::common::v1::Uuid* temp = uuid_;
  uuid_ = nullptr;
  return temp;
}
inline ::opi_api::common::v1::Uuid* NullDebug::_internal_mutable_uuid() {
  
  if (uuid_ == nullptr) {
    auto* p = CreateMaybeMessage<::opi_api::common::v1::Uuid>(GetArenaForAllocation());
    uuid_ = p;
  }
  return uuid_;
}
inline ::opi_api::common::v1::Uuid* NullDebug::mutable_uuid() {
  ::opi_api::common::v1::Uuid* _msg = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:opi_api.storage.v1.NullDebug.uuid)
  return _msg;
}
inline void NullDebug::set_allocated_uuid(::opi_api::common::v1::Uuid* uuid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(uuid_);
  }
  if (uuid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uuid));
    if (message_arena != submessage_arena) {
      uuid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uuid, submessage_arena);
    }
    
  } else {
    
  }
  uuid_ = uuid;
  // @@protoc_insertion_point(field_set_allocated:opi_api.storage.v1.NullDebug.uuid)
}

// -------------------------------------------------------------------

// NullDebugCreateRequest

// .opi_api.storage.v1.NullDebug device = 1;
inline bool NullDebugCreateRequest::_internal_has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline bool NullDebugCreateRequest::has_device() const {
  return _internal_has_device();
}
inline void NullDebugCreateRequest::clear_device() {
  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugCreateRequest::_internal_device() const {
  const ::opi_api::storage::v1::NullDebug* p = device_;
  return p != nullptr ? *p : reinterpret_cast<const ::opi_api::storage::v1::NullDebug&>(
      ::opi_api::storage::v1::_NullDebug_default_instance_);
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugCreateRequest::device() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugCreateRequest.device)
  return _internal_device();
}
inline void NullDebugCreateRequest::unsafe_arena_set_allocated_device(
    ::opi_api::storage::v1::NullDebug* device) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(device_);
  }
  device_ = device;
  if (device) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:opi_api.storage.v1.NullDebugCreateRequest.device)
}
inline ::opi_api::storage::v1::NullDebug* NullDebugCreateRequest::release_device() {
  
  ::opi_api::storage::v1::NullDebug* temp = device_;
  device_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugCreateRequest::unsafe_arena_release_device() {
  // @@protoc_insertion_point(field_release:opi_api.storage.v1.NullDebugCreateRequest.device)
  
  ::opi_api::storage::v1::NullDebug* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugCreateRequest::_internal_mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::opi_api::storage::v1::NullDebug>(GetArenaForAllocation());
    device_ = p;
  }
  return device_;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugCreateRequest::mutable_device() {
  ::opi_api::storage::v1::NullDebug* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:opi_api.storage.v1.NullDebugCreateRequest.device)
  return _msg;
}
inline void NullDebugCreateRequest::set_allocated_device(::opi_api::storage::v1::NullDebug* device) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete device_;
  }
  if (device) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::opi_api::storage::v1::NullDebug>::GetOwningArena(device);
    if (message_arena != submessage_arena) {
      device = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:opi_api.storage.v1.NullDebugCreateRequest.device)
}

// -------------------------------------------------------------------

// NullDebugCreateResponse

// -------------------------------------------------------------------

// NullDebugDeleteRequest

// int64 id = 1;
inline void NullDebugDeleteRequest::clear_id() {
  id_ = int64_t{0};
}
inline int64_t NullDebugDeleteRequest::_internal_id() const {
  return id_;
}
inline int64_t NullDebugDeleteRequest::id() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugDeleteRequest.id)
  return _internal_id();
}
inline void NullDebugDeleteRequest::_internal_set_id(int64_t value) {
  
  id_ = value;
}
inline void NullDebugDeleteRequest::set_id(int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebugDeleteRequest.id)
}

// -------------------------------------------------------------------

// NullDebugDeleteResponse

// -------------------------------------------------------------------

// NullDebugUpdateRequest

// .opi_api.storage.v1.NullDebug device = 1;
inline bool NullDebugUpdateRequest::_internal_has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline bool NullDebugUpdateRequest::has_device() const {
  return _internal_has_device();
}
inline void NullDebugUpdateRequest::clear_device() {
  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugUpdateRequest::_internal_device() const {
  const ::opi_api::storage::v1::NullDebug* p = device_;
  return p != nullptr ? *p : reinterpret_cast<const ::opi_api::storage::v1::NullDebug&>(
      ::opi_api::storage::v1::_NullDebug_default_instance_);
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugUpdateRequest::device() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugUpdateRequest.device)
  return _internal_device();
}
inline void NullDebugUpdateRequest::unsafe_arena_set_allocated_device(
    ::opi_api::storage::v1::NullDebug* device) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(device_);
  }
  device_ = device;
  if (device) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:opi_api.storage.v1.NullDebugUpdateRequest.device)
}
inline ::opi_api::storage::v1::NullDebug* NullDebugUpdateRequest::release_device() {
  
  ::opi_api::storage::v1::NullDebug* temp = device_;
  device_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugUpdateRequest::unsafe_arena_release_device() {
  // @@protoc_insertion_point(field_release:opi_api.storage.v1.NullDebugUpdateRequest.device)
  
  ::opi_api::storage::v1::NullDebug* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugUpdateRequest::_internal_mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::opi_api::storage::v1::NullDebug>(GetArenaForAllocation());
    device_ = p;
  }
  return device_;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugUpdateRequest::mutable_device() {
  ::opi_api::storage::v1::NullDebug* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:opi_api.storage.v1.NullDebugUpdateRequest.device)
  return _msg;
}
inline void NullDebugUpdateRequest::set_allocated_device(::opi_api::storage::v1::NullDebug* device) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete device_;
  }
  if (device) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::opi_api::storage::v1::NullDebug>::GetOwningArena(device);
    if (message_arena != submessage_arena) {
      device = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:opi_api.storage.v1.NullDebugUpdateRequest.device)
}

// -------------------------------------------------------------------

// NullDebugUpdateResponse

// -------------------------------------------------------------------

// NullDebugListRequest

// -------------------------------------------------------------------

// NullDebugListResponse

// repeated .opi_api.storage.v1.NullDebug device = 1;
inline int NullDebugListResponse::_internal_device_size() const {
  return device_.size();
}
inline int NullDebugListResponse::device_size() const {
  return _internal_device_size();
}
inline void NullDebugListResponse::clear_device() {
  device_.Clear();
}
inline ::opi_api::storage::v1::NullDebug* NullDebugListResponse::mutable_device(int index) {
  // @@protoc_insertion_point(field_mutable:opi_api.storage.v1.NullDebugListResponse.device)
  return device_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opi_api::storage::v1::NullDebug >*
NullDebugListResponse::mutable_device() {
  // @@protoc_insertion_point(field_mutable_list:opi_api.storage.v1.NullDebugListResponse.device)
  return &device_;
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugListResponse::_internal_device(int index) const {
  return device_.Get(index);
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugListResponse::device(int index) const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugListResponse.device)
  return _internal_device(index);
}
inline ::opi_api::storage::v1::NullDebug* NullDebugListResponse::_internal_add_device() {
  return device_.Add();
}
inline ::opi_api::storage::v1::NullDebug* NullDebugListResponse::add_device() {
  ::opi_api::storage::v1::NullDebug* _add = _internal_add_device();
  // @@protoc_insertion_point(field_add:opi_api.storage.v1.NullDebugListResponse.device)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opi_api::storage::v1::NullDebug >&
NullDebugListResponse::device() const {
  // @@protoc_insertion_point(field_list:opi_api.storage.v1.NullDebugListResponse.device)
  return device_;
}

// -------------------------------------------------------------------

// NullDebugGetRequest

// int64 id = 1;
inline void NullDebugGetRequest::clear_id() {
  id_ = int64_t{0};
}
inline int64_t NullDebugGetRequest::_internal_id() const {
  return id_;
}
inline int64_t NullDebugGetRequest::id() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugGetRequest.id)
  return _internal_id();
}
inline void NullDebugGetRequest::_internal_set_id(int64_t value) {
  
  id_ = value;
}
inline void NullDebugGetRequest::set_id(int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebugGetRequest.id)
}

// -------------------------------------------------------------------

// NullDebugGetResponse

// .opi_api.storage.v1.NullDebug device = 1;
inline bool NullDebugGetResponse::_internal_has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline bool NullDebugGetResponse::has_device() const {
  return _internal_has_device();
}
inline void NullDebugGetResponse::clear_device() {
  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugGetResponse::_internal_device() const {
  const ::opi_api::storage::v1::NullDebug* p = device_;
  return p != nullptr ? *p : reinterpret_cast<const ::opi_api::storage::v1::NullDebug&>(
      ::opi_api::storage::v1::_NullDebug_default_instance_);
}
inline const ::opi_api::storage::v1::NullDebug& NullDebugGetResponse::device() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugGetResponse.device)
  return _internal_device();
}
inline void NullDebugGetResponse::unsafe_arena_set_allocated_device(
    ::opi_api::storage::v1::NullDebug* device) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(device_);
  }
  device_ = device;
  if (device) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:opi_api.storage.v1.NullDebugGetResponse.device)
}
inline ::opi_api::storage::v1::NullDebug* NullDebugGetResponse::release_device() {
  
  ::opi_api::storage::v1::NullDebug* temp = device_;
  device_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugGetResponse::unsafe_arena_release_device() {
  // @@protoc_insertion_point(field_release:opi_api.storage.v1.NullDebugGetResponse.device)
  
  ::opi_api::storage::v1::NullDebug* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugGetResponse::_internal_mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::opi_api::storage::v1::NullDebug>(GetArenaForAllocation());
    device_ = p;
  }
  return device_;
}
inline ::opi_api::storage::v1::NullDebug* NullDebugGetResponse::mutable_device() {
  ::opi_api::storage::v1::NullDebug* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:opi_api.storage.v1.NullDebugGetResponse.device)
  return _msg;
}
inline void NullDebugGetResponse::set_allocated_device(::opi_api::storage::v1::NullDebug* device) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete device_;
  }
  if (device) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::opi_api::storage::v1::NullDebug>::GetOwningArena(device);
    if (message_arena != submessage_arena) {
      device = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:opi_api.storage.v1.NullDebugGetResponse.device)
}

// -------------------------------------------------------------------

// NullDebugStatsRequest

// int64 id = 1;
inline void NullDebugStatsRequest::clear_id() {
  id_ = int64_t{0};
}
inline int64_t NullDebugStatsRequest::_internal_id() const {
  return id_;
}
inline int64_t NullDebugStatsRequest::id() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugStatsRequest.id)
  return _internal_id();
}
inline void NullDebugStatsRequest::_internal_set_id(int64_t value) {
  
  id_ = value;
}
inline void NullDebugStatsRequest::set_id(int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebugStatsRequest.id)
}

// -------------------------------------------------------------------

// NullDebugStatsResponse

// int64 id = 1;
inline void NullDebugStatsResponse::clear_id() {
  id_ = int64_t{0};
}
inline int64_t NullDebugStatsResponse::_internal_id() const {
  return id_;
}
inline int64_t NullDebugStatsResponse::id() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugStatsResponse.id)
  return _internal_id();
}
inline void NullDebugStatsResponse::_internal_set_id(int64_t value) {
  
  id_ = value;
}
inline void NullDebugStatsResponse::set_id(int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebugStatsResponse.id)
}

// string stats = 2;
inline void NullDebugStatsResponse::clear_stats() {
  stats_.ClearToEmpty();
}
inline const std::string& NullDebugStatsResponse::stats() const {
  // @@protoc_insertion_point(field_get:opi_api.storage.v1.NullDebugStatsResponse.stats)
  return _internal_stats();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void NullDebugStatsResponse::set_stats(ArgT0&& arg0, ArgT... args) {
 
 stats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:opi_api.storage.v1.NullDebugStatsResponse.stats)
}
inline std::string* NullDebugStatsResponse::mutable_stats() {
  std::string* _s = _internal_mutable_stats();
  // @@protoc_insertion_point(field_mutable:opi_api.storage.v1.NullDebugStatsResponse.stats)
  return _s;
}
inline const std::string& NullDebugStatsResponse::_internal_stats() const {
  return stats_.Get();
}
inline void NullDebugStatsResponse::_internal_set_stats(const std::string& value) {
  
  stats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* NullDebugStatsResponse::_internal_mutable_stats() {
  
  return stats_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* NullDebugStatsResponse::release_stats() {
  // @@protoc_insertion_point(field_release:opi_api.storage.v1.NullDebugStatsResponse.stats)
  return stats_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void NullDebugStatsResponse::set_allocated_stats(std::string* stats) {
  if (stats != nullptr) {
    
  } else {
    
  }
  stats_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stats,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (stats_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    stats_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:opi_api.storage.v1.NullDebugStatsResponse.stats)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace storage
}  // namespace opi_api

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_backend_5fnull_2eproto
