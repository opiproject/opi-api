// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: transactions.proto
// Original file comments:
// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Intel Corporation
//
#ifndef GRPC_transactions_2eproto__INCLUDED
#define GRPC_transactions_2eproto__INCLUDED

#include "transactions.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace opi_api {
namespace storage {
namespace v1 {

class TransactionService final {
 public:
  static constexpr char const* service_full_name() {
    return "opi_api.storage.v1.TransactionService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::opi_api::storage::v1::Transaction* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::Transaction>> AsyncCreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::Transaction>>(AsyncCreateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::Transaction>> PrepareAsyncCreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::Transaction>>(PrepareAsyncCreateTransactionRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteTransactionRaw(context, request, cq));
    }
    virtual ::grpc::Status ExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncExecuteTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncExecuteTransactionRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest* request, ::opi_api::storage::v1::Transaction* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest* request, ::opi_api::storage::v1::Transaction* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::Transaction>* AsyncCreateTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::Transaction>* PrepareAsyncCreateTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncExecuteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncExecuteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::opi_api::storage::v1::Transaction* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::Transaction>> AsyncCreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::Transaction>>(AsyncCreateTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::Transaction>> PrepareAsyncCreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::Transaction>>(PrepareAsyncCreateTransactionRaw(context, request, cq));
    }
    ::grpc::Status DeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteTransactionRaw(context, request, cq));
    }
    ::grpc::Status ExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncExecuteTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncExecuteTransactionRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest* request, ::opi_api::storage::v1::Transaction* response, std::function<void(::grpc::Status)>) override;
      void CreateTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest* request, ::opi_api::storage::v1::Transaction* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ExecuteTransaction(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::Transaction>* AsyncCreateTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::Transaction>* PrepareAsyncCreateTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncExecuteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncExecuteTransactionRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateTransaction_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteTransaction_;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteTransaction_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateTransaction(::grpc::ServerContext* context, const ::opi_api::storage::v1::CreateTransactionRequest* request, ::opi_api::storage::v1::Transaction* response);
    virtual ::grpc::Status DeleteTransaction(::grpc::ServerContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ExecuteTransaction(::grpc::ServerContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateTransaction() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateTransactionRequest* /*request*/, ::opi_api::storage::v1::Transaction* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTransaction(::grpc::ServerContext* context, ::opi_api::storage::v1::CreateTransactionRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::Transaction>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteTransaction() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTransaction(::grpc::ServerContext* context, ::opi_api::storage::v1::DeleteTransactionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteTransaction() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ExecuteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ExecuteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteTransaction(::grpc::ServerContext* context, ::opi_api::storage::v1::ExecuteTransactionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateTransaction<WithAsyncMethod_DeleteTransaction<WithAsyncMethod_ExecuteTransaction<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateTransaction() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateTransactionRequest, ::opi_api::storage::v1::Transaction>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::CreateTransactionRequest* request, ::opi_api::storage::v1::Transaction* response) { return this->CreateTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_CreateTransaction(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::CreateTransactionRequest, ::opi_api::storage::v1::Transaction>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateTransactionRequest, ::opi_api::storage::v1::Transaction>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateTransactionRequest* /*request*/, ::opi_api::storage::v1::Transaction* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::CreateTransactionRequest* /*request*/, ::opi_api::storage::v1::Transaction* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteTransaction() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteTransactionRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::DeleteTransactionRequest* request, ::google::protobuf::Empty* response) { return this->DeleteTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteTransaction(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::DeleteTransactionRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteTransactionRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::DeleteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExecuteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteTransaction() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ExecuteTransactionRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::ExecuteTransactionRequest* request, ::google::protobuf::Empty* response) { return this->ExecuteTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteTransaction(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::ExecuteTransactionRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ExecuteTransactionRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ExecuteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::ExecuteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateTransaction<WithCallbackMethod_DeleteTransaction<WithCallbackMethod_ExecuteTransaction<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateTransaction() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateTransactionRequest* /*request*/, ::opi_api::storage::v1::Transaction* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteTransaction() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExecuteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteTransaction() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ExecuteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ExecuteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateTransaction() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateTransactionRequest* /*request*/, ::opi_api::storage::v1::Transaction* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteTransaction() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteTransaction() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ExecuteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ExecuteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateTransaction() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateTransaction(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateTransactionRequest* /*request*/, ::opi_api::storage::v1::Transaction* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteTransaction() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteTransaction(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteTransaction() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteTransaction(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ExecuteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateTransaction() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::CreateTransactionRequest, ::opi_api::storage::v1::Transaction>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::CreateTransactionRequest, ::opi_api::storage::v1::Transaction>* streamer) {
                       return this->StreamedCreateTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateTransactionRequest* /*request*/, ::opi_api::storage::v1::Transaction* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::CreateTransactionRequest,::opi_api::storage::v1::Transaction>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteTransaction() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::DeleteTransactionRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::DeleteTransactionRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::DeleteTransactionRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteTransaction() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::ExecuteTransactionRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::ExecuteTransactionRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedExecuteTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteTransaction(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ExecuteTransactionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::ExecuteTransactionRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateTransaction<WithStreamedUnaryMethod_DeleteTransaction<WithStreamedUnaryMethod_ExecuteTransaction<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateTransaction<WithStreamedUnaryMethod_DeleteTransaction<WithStreamedUnaryMethod_ExecuteTransaction<Service > > > StreamedService;
};

}  // namespace v1
}  // namespace storage
}  // namespace opi_api


#endif  // GRPC_transactions_2eproto__INCLUDED
