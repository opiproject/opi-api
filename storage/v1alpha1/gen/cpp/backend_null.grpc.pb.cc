// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: backend_null.proto

#include "backend_null.pb.h"
#include "backend_null.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace opi_api {
namespace storage {
namespace v1 {

static const char* NullDebugService_method_names[] = {
  "/opi_api.storage.v1.NullDebugService/NullDebugCreate",
  "/opi_api.storage.v1.NullDebugService/NullDebugDelete",
  "/opi_api.storage.v1.NullDebugService/NullDebugUpdate",
  "/opi_api.storage.v1.NullDebugService/NullDebugList",
  "/opi_api.storage.v1.NullDebugService/NullDebugGet",
  "/opi_api.storage.v1.NullDebugService/NullDebugStats",
};

std::unique_ptr< NullDebugService::Stub> NullDebugService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< NullDebugService::Stub> stub(new NullDebugService::Stub(channel, options));
  return stub;
}

NullDebugService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_NullDebugCreate_(NullDebugService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_NullDebugDelete_(NullDebugService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_NullDebugUpdate_(NullDebugService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_NullDebugList_(NullDebugService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_NullDebugGet_(NullDebugService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_NullDebugStats_(NullDebugService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status NullDebugService::Stub::NullDebugCreate(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugCreateRequest& request, ::opi_api::storage::v1::NullDebug* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::NullDebugCreateRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NullDebugCreate_, context, request, response);
}

void NullDebugService::Stub::async::NullDebugCreate(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugCreateRequest* request, ::opi_api::storage::v1::NullDebug* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::NullDebugCreateRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugCreate_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::NullDebugCreate(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugCreateRequest* request, ::opi_api::storage::v1::NullDebug* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugCreate_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::PrepareAsyncNullDebugCreateRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugCreateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebug, ::opi_api::storage::v1::NullDebugCreateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NullDebugCreate_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::AsyncNullDebugCreateRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugCreateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNullDebugCreateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::NullDebugDelete(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugDeleteRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::NullDebugDeleteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NullDebugDelete_, context, request, response);
}

void NullDebugService::Stub::async::NullDebugDelete(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugDeleteRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::NullDebugDeleteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugDelete_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::NullDebugDelete(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugDeleteRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugDelete_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* NullDebugService::Stub::PrepareAsyncNullDebugDeleteRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugDeleteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::storage::v1::NullDebugDeleteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NullDebugDelete_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* NullDebugService::Stub::AsyncNullDebugDeleteRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugDeleteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNullDebugDeleteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::NullDebugUpdate(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugUpdateRequest& request, ::opi_api::storage::v1::NullDebug* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::NullDebugUpdateRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NullDebugUpdate_, context, request, response);
}

void NullDebugService::Stub::async::NullDebugUpdate(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugUpdateRequest* request, ::opi_api::storage::v1::NullDebug* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::NullDebugUpdateRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugUpdate_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::NullDebugUpdate(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugUpdateRequest* request, ::opi_api::storage::v1::NullDebug* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugUpdate_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::PrepareAsyncNullDebugUpdateRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugUpdateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebug, ::opi_api::storage::v1::NullDebugUpdateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NullDebugUpdate_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::AsyncNullDebugUpdateRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugUpdateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNullDebugUpdateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::NullDebugList(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugListRequest& request, ::opi_api::storage::v1::NullDebugListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::NullDebugListRequest, ::opi_api::storage::v1::NullDebugListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NullDebugList_, context, request, response);
}

void NullDebugService::Stub::async::NullDebugList(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugListRequest* request, ::opi_api::storage::v1::NullDebugListResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::NullDebugListRequest, ::opi_api::storage::v1::NullDebugListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugList_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::NullDebugList(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugListRequest* request, ::opi_api::storage::v1::NullDebugListResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugList_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebugListResponse>* NullDebugService::Stub::PrepareAsyncNullDebugListRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebugListResponse, ::opi_api::storage::v1::NullDebugListRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NullDebugList_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebugListResponse>* NullDebugService::Stub::AsyncNullDebugListRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugListRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNullDebugListRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::NullDebugGet(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugGetRequest& request, ::opi_api::storage::v1::NullDebug* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::NullDebugGetRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NullDebugGet_, context, request, response);
}

void NullDebugService::Stub::async::NullDebugGet(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugGetRequest* request, ::opi_api::storage::v1::NullDebug* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::NullDebugGetRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugGet_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::NullDebugGet(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugGetRequest* request, ::opi_api::storage::v1::NullDebug* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugGet_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::PrepareAsyncNullDebugGetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugGetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebug, ::opi_api::storage::v1::NullDebugGetRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NullDebugGet_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::AsyncNullDebugGetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugGetRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNullDebugGetRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::NullDebugStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest& request, ::opi_api::storage::v1::NullDebugStatsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::NullDebugStatsRequest, ::opi_api::storage::v1::NullDebugStatsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NullDebugStats_, context, request, response);
}

void NullDebugService::Stub::async::NullDebugStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest* request, ::opi_api::storage::v1::NullDebugStatsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::NullDebugStatsRequest, ::opi_api::storage::v1::NullDebugStatsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugStats_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::NullDebugStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest* request, ::opi_api::storage::v1::NullDebugStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugStats_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebugStatsResponse>* NullDebugService::Stub::PrepareAsyncNullDebugStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebugStatsResponse, ::opi_api::storage::v1::NullDebugStatsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NullDebugStats_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebugStatsResponse>* NullDebugService::Stub::AsyncNullDebugStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNullDebugStatsRaw(context, request, cq);
  result->StartCall();
  return result;
}

NullDebugService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::NullDebugCreateRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::NullDebugCreateRequest* req,
             ::opi_api::storage::v1::NullDebug* resp) {
               return service->NullDebugCreate(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::NullDebugDeleteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::NullDebugDeleteRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->NullDebugDelete(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::NullDebugUpdateRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::NullDebugUpdateRequest* req,
             ::opi_api::storage::v1::NullDebug* resp) {
               return service->NullDebugUpdate(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::NullDebugListRequest, ::opi_api::storage::v1::NullDebugListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::NullDebugListRequest* req,
             ::opi_api::storage::v1::NullDebugListResponse* resp) {
               return service->NullDebugList(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::NullDebugGetRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::NullDebugGetRequest* req,
             ::opi_api::storage::v1::NullDebug* resp) {
               return service->NullDebugGet(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::NullDebugStatsRequest, ::opi_api::storage::v1::NullDebugStatsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::NullDebugStatsRequest* req,
             ::opi_api::storage::v1::NullDebugStatsResponse* resp) {
               return service->NullDebugStats(ctx, req, resp);
             }, this)));
}

NullDebugService::Service::~Service() {
}

::grpc::Status NullDebugService::Service::NullDebugCreate(::grpc::ServerContext* context, const ::opi_api::storage::v1::NullDebugCreateRequest* request, ::opi_api::storage::v1::NullDebug* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::NullDebugDelete(::grpc::ServerContext* context, const ::opi_api::storage::v1::NullDebugDeleteRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::NullDebugUpdate(::grpc::ServerContext* context, const ::opi_api::storage::v1::NullDebugUpdateRequest* request, ::opi_api::storage::v1::NullDebug* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::NullDebugList(::grpc::ServerContext* context, const ::opi_api::storage::v1::NullDebugListRequest* request, ::opi_api::storage::v1::NullDebugListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::NullDebugGet(::grpc::ServerContext* context, const ::opi_api::storage::v1::NullDebugGetRequest* request, ::opi_api::storage::v1::NullDebug* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::NullDebugStats(::grpc::ServerContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest* request, ::opi_api::storage::v1::NullDebugStatsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace opi_api
}  // namespace storage
}  // namespace v1

