// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: backend_null.proto

#include "backend_null.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace opi_api {
namespace storage {
namespace v1 {
constexpr NullDebug::NullDebug(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr)
  , uuid_(nullptr)
  , block_size_(int64_t{0})
  , blocks_count_(int64_t{0}){}
struct NullDebugDefaultTypeInternal {
  constexpr NullDebugDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugDefaultTypeInternal() {}
  union {
    NullDebug _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugDefaultTypeInternal _NullDebug_default_instance_;
constexpr NullDebugCreateRequest::NullDebugCreateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr){}
struct NullDebugCreateRequestDefaultTypeInternal {
  constexpr NullDebugCreateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugCreateRequestDefaultTypeInternal() {}
  union {
    NullDebugCreateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugCreateRequestDefaultTypeInternal _NullDebugCreateRequest_default_instance_;
constexpr NullDebugDeleteRequest::NullDebugDeleteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr){}
struct NullDebugDeleteRequestDefaultTypeInternal {
  constexpr NullDebugDeleteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugDeleteRequestDefaultTypeInternal() {}
  union {
    NullDebugDeleteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugDeleteRequestDefaultTypeInternal _NullDebugDeleteRequest_default_instance_;
constexpr NullDebugUpdateRequest::NullDebugUpdateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr){}
struct NullDebugUpdateRequestDefaultTypeInternal {
  constexpr NullDebugUpdateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugUpdateRequestDefaultTypeInternal() {}
  union {
    NullDebugUpdateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugUpdateRequestDefaultTypeInternal _NullDebugUpdateRequest_default_instance_;
constexpr NullDebugListRequest::NullDebugListRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NullDebugListRequestDefaultTypeInternal {
  constexpr NullDebugListRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugListRequestDefaultTypeInternal() {}
  union {
    NullDebugListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugListRequestDefaultTypeInternal _NullDebugListRequest_default_instance_;
constexpr NullDebugListResponse::NullDebugListResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(){}
struct NullDebugListResponseDefaultTypeInternal {
  constexpr NullDebugListResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugListResponseDefaultTypeInternal() {}
  union {
    NullDebugListResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugListResponseDefaultTypeInternal _NullDebugListResponse_default_instance_;
constexpr NullDebugGetRequest::NullDebugGetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr){}
struct NullDebugGetRequestDefaultTypeInternal {
  constexpr NullDebugGetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugGetRequestDefaultTypeInternal() {}
  union {
    NullDebugGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugGetRequestDefaultTypeInternal _NullDebugGetRequest_default_instance_;
constexpr NullDebugStatsRequest::NullDebugStatsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr){}
struct NullDebugStatsRequestDefaultTypeInternal {
  constexpr NullDebugStatsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugStatsRequestDefaultTypeInternal() {}
  union {
    NullDebugStatsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugStatsRequestDefaultTypeInternal _NullDebugStatsRequest_default_instance_;
constexpr NullDebugStatsResponse::NullDebugStatsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : stats_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , handle_(nullptr){}
struct NullDebugStatsResponseDefaultTypeInternal {
  constexpr NullDebugStatsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugStatsResponseDefaultTypeInternal() {}
  union {
    NullDebugStatsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugStatsResponseDefaultTypeInternal _NullDebugStatsResponse_default_instance_;
}  // namespace v1
}  // namespace storage
}  // namespace opi_api
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_backend_5fnull_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_backend_5fnull_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_backend_5fnull_2eproto = nullptr;

const uint32_t TableStruct_backend_5fnull_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, handle_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, block_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, blocks_count_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugCreateRequest, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugDeleteRequest, handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugUpdateRequest, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugListResponse, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugGetRequest, handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsRequest, handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsResponse, handle_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsResponse, stats_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::opi_api::storage::v1::NullDebug)},
  { 10, -1, -1, sizeof(::opi_api::storage::v1::NullDebugCreateRequest)},
  { 17, -1, -1, sizeof(::opi_api::storage::v1::NullDebugDeleteRequest)},
  { 24, -1, -1, sizeof(::opi_api::storage::v1::NullDebugUpdateRequest)},
  { 31, -1, -1, sizeof(::opi_api::storage::v1::NullDebugListRequest)},
  { 37, -1, -1, sizeof(::opi_api::storage::v1::NullDebugListResponse)},
  { 44, -1, -1, sizeof(::opi_api::storage::v1::NullDebugGetRequest)},
  { 51, -1, -1, sizeof(::opi_api::storage::v1::NullDebugStatsRequest)},
  { 58, -1, -1, sizeof(::opi_api::storage::v1::NullDebugStatsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebug_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugUpdateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugStatsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugStatsResponse_default_instance_),
};

const char descriptor_table_protodef_backend_5fnull_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022backend_null.proto\022\022opi_api.storage.v1"
  "\032\033google/protobuf/empty.proto\032\020object_ke"
  "y.proto\032\nuuid.proto\"\212\001\n\tNullDebug\022,\n\006han"
  "dle\030\001 \001(\0132\034.opi_api.common.v1.ObjectKey\022"
  "\022\n\nblock_size\030\002 \001(\003\022\024\n\014blocks_count\030\003 \001("
  "\003\022%\n\004uuid\030\004 \001(\0132\027.opi_api.common.v1.Uuid"
  "\"G\n\026NullDebugCreateRequest\022-\n\006device\030\001 \001"
  "(\0132\035.opi_api.storage.v1.NullDebug\"F\n\026Nul"
  "lDebugDeleteRequest\022,\n\006handle\030\001 \001(\0132\034.op"
  "i_api.common.v1.ObjectKey\"G\n\026NullDebugUp"
  "dateRequest\022-\n\006device\030\001 \001(\0132\035.opi_api.st"
  "orage.v1.NullDebug\"\026\n\024NullDebugListReque"
  "st\"F\n\025NullDebugListResponse\022-\n\006device\030\001 "
  "\003(\0132\035.opi_api.storage.v1.NullDebug\"C\n\023Nu"
  "llDebugGetRequest\022,\n\006handle\030\001 \001(\0132\034.opi_"
  "api.common.v1.ObjectKey\"E\n\025NullDebugStat"
  "sRequest\022,\n\006handle\030\001 \001(\0132\034.opi_api.commo"
  "n.v1.ObjectKey\"U\n\026NullDebugStatsResponse"
  "\022,\n\006handle\030\001 \001(\0132\034.opi_api.common.v1.Obj"
  "ectKey\022\r\n\005stats\030\002 \001(\t2\330\004\n\020NullDebugServi"
  "ce\022^\n\017NullDebugCreate\022*.opi_api.storage."
  "v1.NullDebugCreateRequest\032\035.opi_api.stor"
  "age.v1.NullDebug\"\000\022W\n\017NullDebugDelete\022*."
  "opi_api.storage.v1.NullDebugDeleteReques"
  "t\032\026.google.protobuf.Empty\"\000\022^\n\017NullDebug"
  "Update\022*.opi_api.storage.v1.NullDebugUpd"
  "ateRequest\032\035.opi_api.storage.v1.NullDebu"
  "g\"\000\022f\n\rNullDebugList\022(.opi_api.storage.v"
  "1.NullDebugListRequest\032).opi_api.storage"
  ".v1.NullDebugListResponse\"\000\022X\n\014NullDebug"
  "Get\022\'.opi_api.storage.v1.NullDebugGetReq"
  "uest\032\035.opi_api.storage.v1.NullDebug\"\000\022i\n"
  "\016NullDebugStats\022).opi_api.storage.v1.Nul"
  "lDebugStatsRequest\032*.opi_api.storage.v1."
  "NullDebugStatsResponse\"\000B_\n\022opi_api.stor"
  "age.v1B\020BackendNullProtoP\001Z5github.com/o"
  "piproject/opi-api/storage/v1alpha1/gen/g"
  "ob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_backend_5fnull_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_object_5fkey_2eproto,
  &::descriptor_table_uuid_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_backend_5fnull_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_backend_5fnull_2eproto = {
  false, false, 1489, descriptor_table_protodef_backend_5fnull_2eproto, "backend_null.proto", 
  &descriptor_table_backend_5fnull_2eproto_once, descriptor_table_backend_5fnull_2eproto_deps, 3, 9,
  schemas, file_default_instances, TableStruct_backend_5fnull_2eproto::offsets,
  file_level_metadata_backend_5fnull_2eproto, file_level_enum_descriptors_backend_5fnull_2eproto, file_level_service_descriptors_backend_5fnull_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_backend_5fnull_2eproto_getter() {
  return &descriptor_table_backend_5fnull_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_backend_5fnull_2eproto(&descriptor_table_backend_5fnull_2eproto);
namespace opi_api {
namespace storage {
namespace v1 {

// ===================================================================

class NullDebug::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebug* msg);
  static const ::opi_api::common::v1::Uuid& uuid(const NullDebug* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebug::_Internal::handle(const NullDebug* msg) {
  return *msg->handle_;
}
const ::opi_api::common::v1::Uuid&
NullDebug::_Internal::uuid(const NullDebug* msg) {
  return *msg->uuid_;
}
void NullDebug::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
void NullDebug::clear_uuid() {
  if (GetArenaForAllocation() == nullptr && uuid_ != nullptr) {
    delete uuid_;
  }
  uuid_ = nullptr;
}
NullDebug::NullDebug(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebug)
}
NullDebug::NullDebug(const NullDebug& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  if (from._internal_has_uuid()) {
    uuid_ = new ::opi_api::common::v1::Uuid(*from.uuid_);
  } else {
    uuid_ = nullptr;
  }
  ::memcpy(&block_size_, &from.block_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&blocks_count_) -
    reinterpret_cast<char*>(&block_size_)) + sizeof(blocks_count_));
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebug)
}

inline void NullDebug::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&handle_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&blocks_count_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(blocks_count_));
}

NullDebug::~NullDebug() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebug)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebug::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
  if (this != internal_default_instance()) delete uuid_;
}

void NullDebug::ArenaDtor(void* object) {
  NullDebug* _this = reinterpret_cast< NullDebug* >(object);
  (void)_this;
}
void NullDebug::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebug)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  if (GetArenaForAllocation() == nullptr && uuid_ != nullptr) {
    delete uuid_;
  }
  uuid_ = nullptr;
  ::memset(&block_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocks_count_) -
      reinterpret_cast<char*>(&block_size_)) + sizeof(blocks_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebug::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 block_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          block_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 blocks_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          blocks_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.common.v1.Uuid uuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_uuid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebug::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebug)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  // int64 block_size = 2;
  if (this->_internal_block_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_block_size(), target);
  }

  // int64 blocks_count = 3;
  if (this->_internal_blocks_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_blocks_count(), target);
  }

  // .opi_api.common.v1.Uuid uuid = 4;
  if (this->_internal_has_uuid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::uuid(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebug)
  return target;
}

size_t NullDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebug)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  // .opi_api.common.v1.Uuid uuid = 4;
  if (this->_internal_has_uuid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uuid_);
  }

  // int64 block_size = 2;
  if (this->_internal_block_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_block_size());
  }

  // int64 blocks_count = 3;
  if (this->_internal_blocks_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_blocks_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebug::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebug::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebug::GetClassData() const { return &_class_data_; }

void NullDebug::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebug *>(to)->MergeFrom(
      static_cast<const NullDebug &>(from));
}


void NullDebug::MergeFrom(const NullDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebug)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  if (from._internal_has_uuid()) {
    _internal_mutable_uuid()->::opi_api::common::v1::Uuid::MergeFrom(from._internal_uuid());
  }
  if (from._internal_block_size() != 0) {
    _internal_set_block_size(from._internal_block_size());
  }
  if (from._internal_blocks_count() != 0) {
    _internal_set_blocks_count(from._internal_blocks_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebug::CopyFrom(const NullDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebug::IsInitialized() const {
  return true;
}

void NullDebug::InternalSwap(NullDebug* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NullDebug, blocks_count_)
      + sizeof(NullDebug::blocks_count_)
      - PROTOBUF_FIELD_OFFSET(NullDebug, handle_)>(
          reinterpret_cast<char*>(&handle_),
          reinterpret_cast<char*>(&other->handle_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebug::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[0]);
}

// ===================================================================

class NullDebugCreateRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::NullDebug& device(const NullDebugCreateRequest* msg);
};

const ::opi_api::storage::v1::NullDebug&
NullDebugCreateRequest::_Internal::device(const NullDebugCreateRequest* msg) {
  return *msg->device_;
}
NullDebugCreateRequest::NullDebugCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugCreateRequest)
}
NullDebugCreateRequest::NullDebugCreateRequest(const NullDebugCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::opi_api::storage::v1::NullDebug(*from.device_);
  } else {
    device_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugCreateRequest)
}

inline void NullDebugCreateRequest::SharedCtor() {
device_ = nullptr;
}

NullDebugCreateRequest::~NullDebugCreateRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugCreateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
}

void NullDebugCreateRequest::ArenaDtor(void* object) {
  NullDebugCreateRequest* _this = reinterpret_cast< NullDebugCreateRequest* >(object);
  (void)_this;
}
void NullDebugCreateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugCreateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.NullDebug device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugCreateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugCreateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugCreateRequest)
  return target;
}

size_t NullDebugCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugCreateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugCreateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugCreateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugCreateRequest::GetClassData() const { return &_class_data_; }

void NullDebugCreateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugCreateRequest *>(to)->MergeFrom(
      static_cast<const NullDebugCreateRequest &>(from));
}


void NullDebugCreateRequest::MergeFrom(const NullDebugCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::opi_api::storage::v1::NullDebug::MergeFrom(from._internal_device());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugCreateRequest::CopyFrom(const NullDebugCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugCreateRequest::IsInitialized() const {
  return true;
}

void NullDebugCreateRequest::InternalSwap(NullDebugCreateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(device_, other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugCreateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[1]);
}

// ===================================================================

class NullDebugDeleteRequest::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebugDeleteRequest* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebugDeleteRequest::_Internal::handle(const NullDebugDeleteRequest* msg) {
  return *msg->handle_;
}
void NullDebugDeleteRequest::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
NullDebugDeleteRequest::NullDebugDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugDeleteRequest)
}
NullDebugDeleteRequest::NullDebugDeleteRequest(const NullDebugDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugDeleteRequest)
}

inline void NullDebugDeleteRequest::SharedCtor() {
handle_ = nullptr;
}

NullDebugDeleteRequest::~NullDebugDeleteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugDeleteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
}

void NullDebugDeleteRequest::ArenaDtor(void* object) {
  NullDebugDeleteRequest* _this = reinterpret_cast< NullDebugDeleteRequest* >(object);
  (void)_this;
}
void NullDebugDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugDeleteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugDeleteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugDeleteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugDeleteRequest)
  return target;
}

size_t NullDebugDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugDeleteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugDeleteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugDeleteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugDeleteRequest::GetClassData() const { return &_class_data_; }

void NullDebugDeleteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugDeleteRequest *>(to)->MergeFrom(
      static_cast<const NullDebugDeleteRequest &>(from));
}


void NullDebugDeleteRequest::MergeFrom(const NullDebugDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugDeleteRequest::CopyFrom(const NullDebugDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugDeleteRequest::IsInitialized() const {
  return true;
}

void NullDebugDeleteRequest::InternalSwap(NullDebugDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugDeleteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[2]);
}

// ===================================================================

class NullDebugUpdateRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::NullDebug& device(const NullDebugUpdateRequest* msg);
};

const ::opi_api::storage::v1::NullDebug&
NullDebugUpdateRequest::_Internal::device(const NullDebugUpdateRequest* msg) {
  return *msg->device_;
}
NullDebugUpdateRequest::NullDebugUpdateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugUpdateRequest)
}
NullDebugUpdateRequest::NullDebugUpdateRequest(const NullDebugUpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::opi_api::storage::v1::NullDebug(*from.device_);
  } else {
    device_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugUpdateRequest)
}

inline void NullDebugUpdateRequest::SharedCtor() {
device_ = nullptr;
}

NullDebugUpdateRequest::~NullDebugUpdateRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugUpdateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugUpdateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
}

void NullDebugUpdateRequest::ArenaDtor(void* object) {
  NullDebugUpdateRequest* _this = reinterpret_cast< NullDebugUpdateRequest* >(object);
  (void)_this;
}
void NullDebugUpdateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugUpdateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugUpdateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.NullDebug device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugUpdateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugUpdateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugUpdateRequest)
  return target;
}

size_t NullDebugUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugUpdateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugUpdateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugUpdateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugUpdateRequest::GetClassData() const { return &_class_data_; }

void NullDebugUpdateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugUpdateRequest *>(to)->MergeFrom(
      static_cast<const NullDebugUpdateRequest &>(from));
}


void NullDebugUpdateRequest::MergeFrom(const NullDebugUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::opi_api::storage::v1::NullDebug::MergeFrom(from._internal_device());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugUpdateRequest::CopyFrom(const NullDebugUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugUpdateRequest::IsInitialized() const {
  return true;
}

void NullDebugUpdateRequest::InternalSwap(NullDebugUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(device_, other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugUpdateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[3]);
}

// ===================================================================

class NullDebugListRequest::_Internal {
 public:
};

NullDebugListRequest::NullDebugListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugListRequest)
}
NullDebugListRequest::NullDebugListRequest(const NullDebugListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugListRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugListRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugListRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NullDebugListRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[4]);
}

// ===================================================================

class NullDebugListResponse::_Internal {
 public:
};

NullDebugListResponse::NullDebugListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  device_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugListResponse)
}
NullDebugListResponse::NullDebugListResponse(const NullDebugListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      device_(from.device_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugListResponse)
}

inline void NullDebugListResponse::SharedCtor() {
}

NullDebugListResponse::~NullDebugListResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugListResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NullDebugListResponse::ArenaDtor(void* object) {
  NullDebugListResponse* _this = reinterpret_cast< NullDebugListResponse* >(object);
  (void)_this;
}
void NullDebugListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugListResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.storage.v1.NullDebug device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_device(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugListResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugListResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.NullDebug device = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_device_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_device(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugListResponse)
  return target;
}

size_t NullDebugListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugListResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.NullDebug device = 1;
  total_size += 1UL * this->_internal_device_size();
  for (const auto& msg : this->device_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugListResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugListResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugListResponse::GetClassData() const { return &_class_data_; }

void NullDebugListResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugListResponse *>(to)->MergeFrom(
      static_cast<const NullDebugListResponse &>(from));
}


void NullDebugListResponse::MergeFrom(const NullDebugListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  device_.MergeFrom(from.device_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugListResponse::CopyFrom(const NullDebugListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugListResponse::IsInitialized() const {
  return true;
}

void NullDebugListResponse::InternalSwap(NullDebugListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  device_.InternalSwap(&other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugListResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[5]);
}

// ===================================================================

class NullDebugGetRequest::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebugGetRequest* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebugGetRequest::_Internal::handle(const NullDebugGetRequest* msg) {
  return *msg->handle_;
}
void NullDebugGetRequest::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
NullDebugGetRequest::NullDebugGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugGetRequest)
}
NullDebugGetRequest::NullDebugGetRequest(const NullDebugGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugGetRequest)
}

inline void NullDebugGetRequest::SharedCtor() {
handle_ = nullptr;
}

NullDebugGetRequest::~NullDebugGetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugGetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
}

void NullDebugGetRequest::ArenaDtor(void* object) {
  NullDebugGetRequest* _this = reinterpret_cast< NullDebugGetRequest* >(object);
  (void)_this;
}
void NullDebugGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugGetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugGetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugGetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugGetRequest)
  return target;
}

size_t NullDebugGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugGetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugGetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugGetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugGetRequest::GetClassData() const { return &_class_data_; }

void NullDebugGetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugGetRequest *>(to)->MergeFrom(
      static_cast<const NullDebugGetRequest &>(from));
}


void NullDebugGetRequest::MergeFrom(const NullDebugGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugGetRequest::CopyFrom(const NullDebugGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugGetRequest::IsInitialized() const {
  return true;
}

void NullDebugGetRequest::InternalSwap(NullDebugGetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugGetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[6]);
}

// ===================================================================

class NullDebugStatsRequest::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebugStatsRequest* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebugStatsRequest::_Internal::handle(const NullDebugStatsRequest* msg) {
  return *msg->handle_;
}
void NullDebugStatsRequest::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
NullDebugStatsRequest::NullDebugStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugStatsRequest)
}
NullDebugStatsRequest::NullDebugStatsRequest(const NullDebugStatsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugStatsRequest)
}

inline void NullDebugStatsRequest::SharedCtor() {
handle_ = nullptr;
}

NullDebugStatsRequest::~NullDebugStatsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugStatsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugStatsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
}

void NullDebugStatsRequest::ArenaDtor(void* object) {
  NullDebugStatsRequest* _this = reinterpret_cast< NullDebugStatsRequest* >(object);
  (void)_this;
}
void NullDebugStatsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugStatsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugStatsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugStatsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugStatsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugStatsRequest)
  return target;
}

size_t NullDebugStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugStatsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugStatsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugStatsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugStatsRequest::GetClassData() const { return &_class_data_; }

void NullDebugStatsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugStatsRequest *>(to)->MergeFrom(
      static_cast<const NullDebugStatsRequest &>(from));
}


void NullDebugStatsRequest::MergeFrom(const NullDebugStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugStatsRequest::CopyFrom(const NullDebugStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugStatsRequest::IsInitialized() const {
  return true;
}

void NullDebugStatsRequest::InternalSwap(NullDebugStatsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugStatsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[7]);
}

// ===================================================================

class NullDebugStatsResponse::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebugStatsResponse* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebugStatsResponse::_Internal::handle(const NullDebugStatsResponse* msg) {
  return *msg->handle_;
}
void NullDebugStatsResponse::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
NullDebugStatsResponse::NullDebugStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugStatsResponse)
}
NullDebugStatsResponse::NullDebugStatsResponse(const NullDebugStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stats_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stats_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stats().empty()) {
    stats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stats(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugStatsResponse)
}

inline void NullDebugStatsResponse::SharedCtor() {
stats_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stats_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
handle_ = nullptr;
}

NullDebugStatsResponse::~NullDebugStatsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugStatsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  stats_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete handle_;
}

void NullDebugStatsResponse::ArenaDtor(void* object) {
  NullDebugStatsResponse* _this = reinterpret_cast< NullDebugStatsResponse* >(object);
  (void)_this;
}
void NullDebugStatsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugStatsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugStatsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stats = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_stats();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.storage.v1.NullDebugStatsResponse.stats"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugStatsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugStatsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  // string stats = 2;
  if (!this->_internal_stats().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stats().data(), static_cast<int>(this->_internal_stats().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.NullDebugStatsResponse.stats");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_stats(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugStatsResponse)
  return target;
}

size_t NullDebugStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugStatsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stats = 2;
  if (!this->_internal_stats().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stats());
  }

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugStatsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugStatsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugStatsResponse::GetClassData() const { return &_class_data_; }

void NullDebugStatsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugStatsResponse *>(to)->MergeFrom(
      static_cast<const NullDebugStatsResponse &>(from));
}


void NullDebugStatsResponse::MergeFrom(const NullDebugStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stats().empty()) {
    _internal_set_stats(from._internal_stats());
  }
  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugStatsResponse::CopyFrom(const NullDebugStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugStatsResponse::IsInitialized() const {
  return true;
}

void NullDebugStatsResponse::InternalSwap(NullDebugStatsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &stats_, lhs_arena,
      &other->stats_, rhs_arena
  );
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugStatsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace storage
}  // namespace opi_api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebug* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebug >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebug >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugCreateRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugDeleteRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugUpdateRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugUpdateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugListRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugListResponse* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugGetRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugStatsRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugStatsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugStatsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugStatsResponse* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugStatsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
