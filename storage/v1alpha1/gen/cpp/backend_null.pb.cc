// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: backend_null.proto

#include "backend_null.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace opi_api {
namespace storage {
namespace v1 {
constexpr NullDebug::NullDebug(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr)
  , uuid_(nullptr)
  , block_size_(int64_t{0})
  , blocks_count_(int64_t{0}){}
struct NullDebugDefaultTypeInternal {
  constexpr NullDebugDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugDefaultTypeInternal() {}
  union {
    NullDebug _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugDefaultTypeInternal _NullDebug_default_instance_;
constexpr CreateNullDebugRequest::CreateNullDebugRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr){}
struct CreateNullDebugRequestDefaultTypeInternal {
  constexpr CreateNullDebugRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateNullDebugRequestDefaultTypeInternal() {}
  union {
    CreateNullDebugRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateNullDebugRequestDefaultTypeInternal _CreateNullDebugRequest_default_instance_;
constexpr DeleteNullDebugRequest::DeleteNullDebugRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr){}
struct DeleteNullDebugRequestDefaultTypeInternal {
  constexpr DeleteNullDebugRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteNullDebugRequestDefaultTypeInternal() {}
  union {
    DeleteNullDebugRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteNullDebugRequestDefaultTypeInternal _DeleteNullDebugRequest_default_instance_;
constexpr UpdateNullDebugRequest::UpdateNullDebugRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr){}
struct UpdateNullDebugRequestDefaultTypeInternal {
  constexpr UpdateNullDebugRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateNullDebugRequestDefaultTypeInternal() {}
  union {
    UpdateNullDebugRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateNullDebugRequestDefaultTypeInternal _UpdateNullDebugRequest_default_instance_;
constexpr ListNullDebugRequest::ListNullDebugRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListNullDebugRequestDefaultTypeInternal {
  constexpr ListNullDebugRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNullDebugRequestDefaultTypeInternal() {}
  union {
    ListNullDebugRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNullDebugRequestDefaultTypeInternal _ListNullDebugRequest_default_instance_;
constexpr ListNullDebugResponse::ListNullDebugResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devices_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListNullDebugResponseDefaultTypeInternal {
  constexpr ListNullDebugResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNullDebugResponseDefaultTypeInternal() {}
  union {
    ListNullDebugResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNullDebugResponseDefaultTypeInternal _ListNullDebugResponse_default_instance_;
constexpr GetNullDebugRequest::GetNullDebugRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr){}
struct GetNullDebugRequestDefaultTypeInternal {
  constexpr GetNullDebugRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNullDebugRequestDefaultTypeInternal() {}
  union {
    GetNullDebugRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNullDebugRequestDefaultTypeInternal _GetNullDebugRequest_default_instance_;
constexpr NullDebugStatsRequest::NullDebugStatsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : handle_(nullptr){}
struct NullDebugStatsRequestDefaultTypeInternal {
  constexpr NullDebugStatsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugStatsRequestDefaultTypeInternal() {}
  union {
    NullDebugStatsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugStatsRequestDefaultTypeInternal _NullDebugStatsRequest_default_instance_;
constexpr NullDebugStatsResponse::NullDebugStatsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : stats_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , handle_(nullptr){}
struct NullDebugStatsResponseDefaultTypeInternal {
  constexpr NullDebugStatsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NullDebugStatsResponseDefaultTypeInternal() {}
  union {
    NullDebugStatsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NullDebugStatsResponseDefaultTypeInternal _NullDebugStatsResponse_default_instance_;
}  // namespace v1
}  // namespace storage
}  // namespace opi_api
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_backend_5fnull_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_backend_5fnull_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_backend_5fnull_2eproto = nullptr;

const uint32_t TableStruct_backend_5fnull_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, handle_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, block_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, blocks_count_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebug, uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateNullDebugRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateNullDebugRequest, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteNullDebugRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteNullDebugRequest, handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateNullDebugRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateNullDebugRequest, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListNullDebugRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListNullDebugRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListNullDebugRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListNullDebugResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListNullDebugResponse, devices_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListNullDebugResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetNullDebugRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetNullDebugRequest, handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsRequest, handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsResponse, handle_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::NullDebugStatsResponse, stats_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::opi_api::storage::v1::NullDebug)},
  { 10, -1, -1, sizeof(::opi_api::storage::v1::CreateNullDebugRequest)},
  { 17, -1, -1, sizeof(::opi_api::storage::v1::DeleteNullDebugRequest)},
  { 24, -1, -1, sizeof(::opi_api::storage::v1::UpdateNullDebugRequest)},
  { 31, -1, -1, sizeof(::opi_api::storage::v1::ListNullDebugRequest)},
  { 39, -1, -1, sizeof(::opi_api::storage::v1::ListNullDebugResponse)},
  { 47, -1, -1, sizeof(::opi_api::storage::v1::GetNullDebugRequest)},
  { 54, -1, -1, sizeof(::opi_api::storage::v1::NullDebugStatsRequest)},
  { 61, -1, -1, sizeof(::opi_api::storage::v1::NullDebugStatsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebug_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_CreateNullDebugRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_DeleteNullDebugRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_UpdateNullDebugRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_ListNullDebugRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_ListNullDebugResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_GetNullDebugRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugStatsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::storage::v1::_NullDebugStatsResponse_default_instance_),
};

const char descriptor_table_protodef_backend_5fnull_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022backend_null.proto\022\022opi_api.storage.v1"
  "\032\033google/protobuf/empty.proto\032\034google/ap"
  "i/annotations.proto\032\020object_key.proto\032\nu"
  "uid.proto\"\212\001\n\tNullDebug\022,\n\006handle\030\001 \001(\0132"
  "\034.opi_api.common.v1.ObjectKey\022\022\n\nblock_s"
  "ize\030\002 \001(\003\022\024\n\014blocks_count\030\003 \001(\003\022%\n\004uuid\030"
  "\004 \001(\0132\027.opi_api.common.v1.Uuid\"G\n\026Create"
  "NullDebugRequest\022-\n\006device\030\001 \001(\0132\035.opi_a"
  "pi.storage.v1.NullDebug\"F\n\026DeleteNullDeb"
  "ugRequest\022,\n\006handle\030\001 \001(\0132\034.opi_api.comm"
  "on.v1.ObjectKey\"G\n\026UpdateNullDebugReques"
  "t\022-\n\006device\030\001 \001(\0132\035.opi_api.storage.v1.N"
  "ullDebug\"=\n\024ListNullDebugRequest\022\021\n\tpage"
  "_size\030\001 \001(\005\022\022\n\npage_token\030\002 \001(\t\"`\n\025ListN"
  "ullDebugResponse\022.\n\007devices\030\001 \003(\0132\035.opi_"
  "api.storage.v1.NullDebug\022\027\n\017next_page_to"
  "ken\030\002 \001(\t\"C\n\023GetNullDebugRequest\022,\n\006hand"
  "le\030\001 \001(\0132\034.opi_api.common.v1.ObjectKey\"E"
  "\n\025NullDebugStatsRequest\022,\n\006handle\030\001 \001(\0132"
  "\034.opi_api.common.v1.ObjectKey\"U\n\026NullDeb"
  "ugStatsResponse\022,\n\006handle\030\001 \001(\0132\034.opi_ap"
  "i.common.v1.ObjectKey\022\r\n\005stats\030\002 \001(\t2\364\005\n"
  "\020NullDebugService\022\177\n\017CreateNullDebug\022*.o"
  "pi_api.storage.v1.CreateNullDebugRequest"
  "\032\035.opi_api.storage.v1.NullDebug\"!\202\323\344\223\002\033\""
  "\016/v1/subsystems:\tsubsystem\022y\n\017DeleteNull"
  "Debug\022*.opi_api.storage.v1.DeleteNullDeb"
  "ugRequest\032\026.google.protobuf.Empty\"\"\202\323\344\223\002"
  "\034*\032/v1/subsystems/{subsystem}\022\177\n\017UpdateN"
  "ullDebug\022*.opi_api.storage.v1.UpdateNull"
  "DebugRequest\032\035.opi_api.storage.v1.NullDe"
  "bug\"!\202\323\344\223\002\0332\016/v1/subsystems:\tsubsystem\022|"
  "\n\rListNullDebug\022(.opi_api.storage.v1.Lis"
  "tNullDebugRequest\032).opi_api.storage.v1.L"
  "istNullDebugResponse\"\026\202\323\344\223\002\020\022\016/v1/subsys"
  "tems\022z\n\014GetNullDebug\022\'.opi_api.storage.v"
  "1.GetNullDebugRequest\032\035.opi_api.storage."
  "v1.NullDebug\"\"\202\323\344\223\002\034\022\032/v1/subsystems/{su"
  "bsystem}\022i\n\016NullDebugStats\022).opi_api.sto"
  "rage.v1.NullDebugStatsRequest\032*.opi_api."
  "storage.v1.NullDebugStatsResponse\"\000B_\n\022o"
  "pi_api.storage.v1B\020BackendNullProtoP\001Z5g"
  "ithub.com/opiproject/opi-api/storage/v1a"
  "lpha1/gen/gob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_backend_5fnull_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_object_5fkey_2eproto,
  &::descriptor_table_uuid_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_backend_5fnull_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_backend_5fnull_2eproto = {
  false, false, 1740, descriptor_table_protodef_backend_5fnull_2eproto, "backend_null.proto", 
  &descriptor_table_backend_5fnull_2eproto_once, descriptor_table_backend_5fnull_2eproto_deps, 4, 9,
  schemas, file_default_instances, TableStruct_backend_5fnull_2eproto::offsets,
  file_level_metadata_backend_5fnull_2eproto, file_level_enum_descriptors_backend_5fnull_2eproto, file_level_service_descriptors_backend_5fnull_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_backend_5fnull_2eproto_getter() {
  return &descriptor_table_backend_5fnull_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_backend_5fnull_2eproto(&descriptor_table_backend_5fnull_2eproto);
namespace opi_api {
namespace storage {
namespace v1 {

// ===================================================================

class NullDebug::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebug* msg);
  static const ::opi_api::common::v1::Uuid& uuid(const NullDebug* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebug::_Internal::handle(const NullDebug* msg) {
  return *msg->handle_;
}
const ::opi_api::common::v1::Uuid&
NullDebug::_Internal::uuid(const NullDebug* msg) {
  return *msg->uuid_;
}
void NullDebug::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
void NullDebug::clear_uuid() {
  if (GetArenaForAllocation() == nullptr && uuid_ != nullptr) {
    delete uuid_;
  }
  uuid_ = nullptr;
}
NullDebug::NullDebug(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebug)
}
NullDebug::NullDebug(const NullDebug& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  if (from._internal_has_uuid()) {
    uuid_ = new ::opi_api::common::v1::Uuid(*from.uuid_);
  } else {
    uuid_ = nullptr;
  }
  ::memcpy(&block_size_, &from.block_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&blocks_count_) -
    reinterpret_cast<char*>(&block_size_)) + sizeof(blocks_count_));
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebug)
}

inline void NullDebug::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&handle_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&blocks_count_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(blocks_count_));
}

NullDebug::~NullDebug() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebug)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebug::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
  if (this != internal_default_instance()) delete uuid_;
}

void NullDebug::ArenaDtor(void* object) {
  NullDebug* _this = reinterpret_cast< NullDebug* >(object);
  (void)_this;
}
void NullDebug::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebug)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  if (GetArenaForAllocation() == nullptr && uuid_ != nullptr) {
    delete uuid_;
  }
  uuid_ = nullptr;
  ::memset(&block_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocks_count_) -
      reinterpret_cast<char*>(&block_size_)) + sizeof(blocks_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebug::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 block_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          block_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 blocks_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          blocks_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.common.v1.Uuid uuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_uuid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebug::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebug)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  // int64 block_size = 2;
  if (this->_internal_block_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_block_size(), target);
  }

  // int64 blocks_count = 3;
  if (this->_internal_blocks_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_blocks_count(), target);
  }

  // .opi_api.common.v1.Uuid uuid = 4;
  if (this->_internal_has_uuid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::uuid(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebug)
  return target;
}

size_t NullDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebug)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  // .opi_api.common.v1.Uuid uuid = 4;
  if (this->_internal_has_uuid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uuid_);
  }

  // int64 block_size = 2;
  if (this->_internal_block_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_block_size());
  }

  // int64 blocks_count = 3;
  if (this->_internal_blocks_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_blocks_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebug::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebug::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebug::GetClassData() const { return &_class_data_; }

void NullDebug::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebug *>(to)->MergeFrom(
      static_cast<const NullDebug &>(from));
}


void NullDebug::MergeFrom(const NullDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebug)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  if (from._internal_has_uuid()) {
    _internal_mutable_uuid()->::opi_api::common::v1::Uuid::MergeFrom(from._internal_uuid());
  }
  if (from._internal_block_size() != 0) {
    _internal_set_block_size(from._internal_block_size());
  }
  if (from._internal_blocks_count() != 0) {
    _internal_set_blocks_count(from._internal_blocks_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebug::CopyFrom(const NullDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebug::IsInitialized() const {
  return true;
}

void NullDebug::InternalSwap(NullDebug* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NullDebug, blocks_count_)
      + sizeof(NullDebug::blocks_count_)
      - PROTOBUF_FIELD_OFFSET(NullDebug, handle_)>(
          reinterpret_cast<char*>(&handle_),
          reinterpret_cast<char*>(&other->handle_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebug::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[0]);
}

// ===================================================================

class CreateNullDebugRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::NullDebug& device(const CreateNullDebugRequest* msg);
};

const ::opi_api::storage::v1::NullDebug&
CreateNullDebugRequest::_Internal::device(const CreateNullDebugRequest* msg) {
  return *msg->device_;
}
CreateNullDebugRequest::CreateNullDebugRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.CreateNullDebugRequest)
}
CreateNullDebugRequest::CreateNullDebugRequest(const CreateNullDebugRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::opi_api::storage::v1::NullDebug(*from.device_);
  } else {
    device_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.CreateNullDebugRequest)
}

inline void CreateNullDebugRequest::SharedCtor() {
device_ = nullptr;
}

CreateNullDebugRequest::~CreateNullDebugRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.CreateNullDebugRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateNullDebugRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
}

void CreateNullDebugRequest::ArenaDtor(void* object) {
  CreateNullDebugRequest* _this = reinterpret_cast< CreateNullDebugRequest* >(object);
  (void)_this;
}
void CreateNullDebugRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNullDebugRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateNullDebugRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.CreateNullDebugRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNullDebugRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.NullDebug device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateNullDebugRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.CreateNullDebugRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.CreateNullDebugRequest)
  return target;
}

size_t CreateNullDebugRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.CreateNullDebugRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateNullDebugRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateNullDebugRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateNullDebugRequest::GetClassData() const { return &_class_data_; }

void CreateNullDebugRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateNullDebugRequest *>(to)->MergeFrom(
      static_cast<const CreateNullDebugRequest &>(from));
}


void CreateNullDebugRequest::MergeFrom(const CreateNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.CreateNullDebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::opi_api::storage::v1::NullDebug::MergeFrom(from._internal_device());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateNullDebugRequest::CopyFrom(const CreateNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.CreateNullDebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNullDebugRequest::IsInitialized() const {
  return true;
}

void CreateNullDebugRequest::InternalSwap(CreateNullDebugRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(device_, other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNullDebugRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[1]);
}

// ===================================================================

class DeleteNullDebugRequest::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const DeleteNullDebugRequest* msg);
};

const ::opi_api::common::v1::ObjectKey&
DeleteNullDebugRequest::_Internal::handle(const DeleteNullDebugRequest* msg) {
  return *msg->handle_;
}
void DeleteNullDebugRequest::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
DeleteNullDebugRequest::DeleteNullDebugRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.DeleteNullDebugRequest)
}
DeleteNullDebugRequest::DeleteNullDebugRequest(const DeleteNullDebugRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.DeleteNullDebugRequest)
}

inline void DeleteNullDebugRequest::SharedCtor() {
handle_ = nullptr;
}

DeleteNullDebugRequest::~DeleteNullDebugRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.DeleteNullDebugRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteNullDebugRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
}

void DeleteNullDebugRequest::ArenaDtor(void* object) {
  DeleteNullDebugRequest* _this = reinterpret_cast< DeleteNullDebugRequest* >(object);
  (void)_this;
}
void DeleteNullDebugRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteNullDebugRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteNullDebugRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.DeleteNullDebugRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNullDebugRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteNullDebugRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.DeleteNullDebugRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.DeleteNullDebugRequest)
  return target;
}

size_t DeleteNullDebugRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.DeleteNullDebugRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteNullDebugRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteNullDebugRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteNullDebugRequest::GetClassData() const { return &_class_data_; }

void DeleteNullDebugRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteNullDebugRequest *>(to)->MergeFrom(
      static_cast<const DeleteNullDebugRequest &>(from));
}


void DeleteNullDebugRequest::MergeFrom(const DeleteNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.DeleteNullDebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteNullDebugRequest::CopyFrom(const DeleteNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.DeleteNullDebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNullDebugRequest::IsInitialized() const {
  return true;
}

void DeleteNullDebugRequest::InternalSwap(DeleteNullDebugRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNullDebugRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[2]);
}

// ===================================================================

class UpdateNullDebugRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::NullDebug& device(const UpdateNullDebugRequest* msg);
};

const ::opi_api::storage::v1::NullDebug&
UpdateNullDebugRequest::_Internal::device(const UpdateNullDebugRequest* msg) {
  return *msg->device_;
}
UpdateNullDebugRequest::UpdateNullDebugRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.UpdateNullDebugRequest)
}
UpdateNullDebugRequest::UpdateNullDebugRequest(const UpdateNullDebugRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::opi_api::storage::v1::NullDebug(*from.device_);
  } else {
    device_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.UpdateNullDebugRequest)
}

inline void UpdateNullDebugRequest::SharedCtor() {
device_ = nullptr;
}

UpdateNullDebugRequest::~UpdateNullDebugRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.UpdateNullDebugRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateNullDebugRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
}

void UpdateNullDebugRequest::ArenaDtor(void* object) {
  UpdateNullDebugRequest* _this = reinterpret_cast< UpdateNullDebugRequest* >(object);
  (void)_this;
}
void UpdateNullDebugRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateNullDebugRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateNullDebugRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.UpdateNullDebugRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateNullDebugRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.NullDebug device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateNullDebugRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.UpdateNullDebugRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.UpdateNullDebugRequest)
  return target;
}

size_t UpdateNullDebugRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.UpdateNullDebugRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.NullDebug device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateNullDebugRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateNullDebugRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateNullDebugRequest::GetClassData() const { return &_class_data_; }

void UpdateNullDebugRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateNullDebugRequest *>(to)->MergeFrom(
      static_cast<const UpdateNullDebugRequest &>(from));
}


void UpdateNullDebugRequest::MergeFrom(const UpdateNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.UpdateNullDebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::opi_api::storage::v1::NullDebug::MergeFrom(from._internal_device());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateNullDebugRequest::CopyFrom(const UpdateNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.UpdateNullDebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNullDebugRequest::IsInitialized() const {
  return true;
}

void UpdateNullDebugRequest::InternalSwap(UpdateNullDebugRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(device_, other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateNullDebugRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[3]);
}

// ===================================================================

class ListNullDebugRequest::_Internal {
 public:
};

ListNullDebugRequest::ListNullDebugRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListNullDebugRequest)
}
ListNullDebugRequest::ListNullDebugRequest(const ListNullDebugRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListNullDebugRequest)
}

inline void ListNullDebugRequest::SharedCtor() {
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListNullDebugRequest::~ListNullDebugRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListNullDebugRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListNullDebugRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNullDebugRequest::ArenaDtor(void* object) {
  ListNullDebugRequest* _this = reinterpret_cast< ListNullDebugRequest* >(object);
  (void)_this;
}
void ListNullDebugRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNullDebugRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNullDebugRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListNullDebugRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNullDebugRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 page_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.storage.v1.ListNullDebugRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListNullDebugRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListNullDebugRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_page_size(), target);
  }

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListNullDebugRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListNullDebugRequest)
  return target;
}

size_t ListNullDebugRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListNullDebugRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 1;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNullDebugRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListNullDebugRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNullDebugRequest::GetClassData() const { return &_class_data_; }

void ListNullDebugRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListNullDebugRequest *>(to)->MergeFrom(
      static_cast<const ListNullDebugRequest &>(from));
}


void ListNullDebugRequest::MergeFrom(const ListNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListNullDebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListNullDebugRequest::CopyFrom(const ListNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListNullDebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNullDebugRequest::IsInitialized() const {
  return true;
}

void ListNullDebugRequest::InternalSwap(ListNullDebugRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNullDebugRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[4]);
}

// ===================================================================

class ListNullDebugResponse::_Internal {
 public:
};

ListNullDebugResponse::ListNullDebugResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  devices_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListNullDebugResponse)
}
ListNullDebugResponse::ListNullDebugResponse(const ListNullDebugResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListNullDebugResponse)
}

inline void ListNullDebugResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListNullDebugResponse::~ListNullDebugResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListNullDebugResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListNullDebugResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNullDebugResponse::ArenaDtor(void* object) {
  ListNullDebugResponse* _this = reinterpret_cast< ListNullDebugResponse* >(object);
  (void)_this;
}
void ListNullDebugResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNullDebugResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNullDebugResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListNullDebugResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNullDebugResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.storage.v1.NullDebug devices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_devices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.storage.v1.ListNullDebugResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListNullDebugResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListNullDebugResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.NullDebug devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_devices_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_devices(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListNullDebugResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListNullDebugResponse)
  return target;
}

size_t ListNullDebugResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListNullDebugResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.NullDebug devices = 1;
  total_size += 1UL * this->_internal_devices_size();
  for (const auto& msg : this->devices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNullDebugResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListNullDebugResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNullDebugResponse::GetClassData() const { return &_class_data_; }

void ListNullDebugResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListNullDebugResponse *>(to)->MergeFrom(
      static_cast<const ListNullDebugResponse &>(from));
}


void ListNullDebugResponse::MergeFrom(const ListNullDebugResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListNullDebugResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListNullDebugResponse::CopyFrom(const ListNullDebugResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListNullDebugResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNullDebugResponse::IsInitialized() const {
  return true;
}

void ListNullDebugResponse::InternalSwap(ListNullDebugResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  devices_.InternalSwap(&other->devices_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNullDebugResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[5]);
}

// ===================================================================

class GetNullDebugRequest::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const GetNullDebugRequest* msg);
};

const ::opi_api::common::v1::ObjectKey&
GetNullDebugRequest::_Internal::handle(const GetNullDebugRequest* msg) {
  return *msg->handle_;
}
void GetNullDebugRequest::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
GetNullDebugRequest::GetNullDebugRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.GetNullDebugRequest)
}
GetNullDebugRequest::GetNullDebugRequest(const GetNullDebugRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.GetNullDebugRequest)
}

inline void GetNullDebugRequest::SharedCtor() {
handle_ = nullptr;
}

GetNullDebugRequest::~GetNullDebugRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.GetNullDebugRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetNullDebugRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
}

void GetNullDebugRequest::ArenaDtor(void* object) {
  GetNullDebugRequest* _this = reinterpret_cast< GetNullDebugRequest* >(object);
  (void)_this;
}
void GetNullDebugRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNullDebugRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetNullDebugRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.GetNullDebugRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNullDebugRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNullDebugRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.GetNullDebugRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.GetNullDebugRequest)
  return target;
}

size_t GetNullDebugRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.GetNullDebugRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNullDebugRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetNullDebugRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNullDebugRequest::GetClassData() const { return &_class_data_; }

void GetNullDebugRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetNullDebugRequest *>(to)->MergeFrom(
      static_cast<const GetNullDebugRequest &>(from));
}


void GetNullDebugRequest::MergeFrom(const GetNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.GetNullDebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNullDebugRequest::CopyFrom(const GetNullDebugRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.GetNullDebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNullDebugRequest::IsInitialized() const {
  return true;
}

void GetNullDebugRequest::InternalSwap(GetNullDebugRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNullDebugRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[6]);
}

// ===================================================================

class NullDebugStatsRequest::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebugStatsRequest* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebugStatsRequest::_Internal::handle(const NullDebugStatsRequest* msg) {
  return *msg->handle_;
}
void NullDebugStatsRequest::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
NullDebugStatsRequest::NullDebugStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugStatsRequest)
}
NullDebugStatsRequest::NullDebugStatsRequest(const NullDebugStatsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugStatsRequest)
}

inline void NullDebugStatsRequest::SharedCtor() {
handle_ = nullptr;
}

NullDebugStatsRequest::~NullDebugStatsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugStatsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugStatsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete handle_;
}

void NullDebugStatsRequest::ArenaDtor(void* object) {
  NullDebugStatsRequest* _this = reinterpret_cast< NullDebugStatsRequest* >(object);
  (void)_this;
}
void NullDebugStatsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugStatsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugStatsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugStatsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugStatsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugStatsRequest)
  return target;
}

size_t NullDebugStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugStatsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugStatsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugStatsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugStatsRequest::GetClassData() const { return &_class_data_; }

void NullDebugStatsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugStatsRequest *>(to)->MergeFrom(
      static_cast<const NullDebugStatsRequest &>(from));
}


void NullDebugStatsRequest::MergeFrom(const NullDebugStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugStatsRequest::CopyFrom(const NullDebugStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugStatsRequest::IsInitialized() const {
  return true;
}

void NullDebugStatsRequest::InternalSwap(NullDebugStatsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugStatsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[7]);
}

// ===================================================================

class NullDebugStatsResponse::_Internal {
 public:
  static const ::opi_api::common::v1::ObjectKey& handle(const NullDebugStatsResponse* msg);
};

const ::opi_api::common::v1::ObjectKey&
NullDebugStatsResponse::_Internal::handle(const NullDebugStatsResponse* msg) {
  return *msg->handle_;
}
void NullDebugStatsResponse::clear_handle() {
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
}
NullDebugStatsResponse::NullDebugStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.NullDebugStatsResponse)
}
NullDebugStatsResponse::NullDebugStatsResponse(const NullDebugStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stats_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stats_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stats().empty()) {
    stats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stats(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_handle()) {
    handle_ = new ::opi_api::common::v1::ObjectKey(*from.handle_);
  } else {
    handle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.NullDebugStatsResponse)
}

inline void NullDebugStatsResponse::SharedCtor() {
stats_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stats_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
handle_ = nullptr;
}

NullDebugStatsResponse::~NullDebugStatsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.NullDebugStatsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NullDebugStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  stats_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete handle_;
}

void NullDebugStatsResponse::ArenaDtor(void* object) {
  NullDebugStatsResponse* _this = reinterpret_cast< NullDebugStatsResponse* >(object);
  (void)_this;
}
void NullDebugStatsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NullDebugStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NullDebugStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.NullDebugStatsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && handle_ != nullptr) {
    delete handle_;
  }
  handle_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NullDebugStatsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.common.v1.ObjectKey handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_handle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stats = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_stats();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.storage.v1.NullDebugStatsResponse.stats"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NullDebugStatsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.NullDebugStatsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::handle(this), target, stream);
  }

  // string stats = 2;
  if (!this->_internal_stats().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stats().data(), static_cast<int>(this->_internal_stats().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.NullDebugStatsResponse.stats");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_stats(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.NullDebugStatsResponse)
  return target;
}

size_t NullDebugStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.NullDebugStatsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stats = 2;
  if (!this->_internal_stats().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stats());
  }

  // .opi_api.common.v1.ObjectKey handle = 1;
  if (this->_internal_has_handle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handle_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullDebugStatsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NullDebugStatsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullDebugStatsResponse::GetClassData() const { return &_class_data_; }

void NullDebugStatsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NullDebugStatsResponse *>(to)->MergeFrom(
      static_cast<const NullDebugStatsResponse &>(from));
}


void NullDebugStatsResponse::MergeFrom(const NullDebugStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.NullDebugStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stats().empty()) {
    _internal_set_stats(from._internal_stats());
  }
  if (from._internal_has_handle()) {
    _internal_mutable_handle()->::opi_api::common::v1::ObjectKey::MergeFrom(from._internal_handle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NullDebugStatsResponse::CopyFrom(const NullDebugStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.NullDebugStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullDebugStatsResponse::IsInitialized() const {
  return true;
}

void NullDebugStatsResponse::InternalSwap(NullDebugStatsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &stats_, lhs_arena,
      &other->stats_, rhs_arena
  );
  swap(handle_, other->handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullDebugStatsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_backend_5fnull_2eproto_getter, &descriptor_table_backend_5fnull_2eproto_once,
      file_level_metadata_backend_5fnull_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace storage
}  // namespace opi_api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebug* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebug >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebug >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::CreateNullDebugRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::CreateNullDebugRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::CreateNullDebugRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::DeleteNullDebugRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::DeleteNullDebugRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::DeleteNullDebugRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::UpdateNullDebugRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::UpdateNullDebugRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::UpdateNullDebugRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListNullDebugRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListNullDebugRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListNullDebugRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListNullDebugResponse* Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListNullDebugResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListNullDebugResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::GetNullDebugRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::GetNullDebugRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::GetNullDebugRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugStatsRequest* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugStatsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugStatsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::NullDebugStatsResponse* Arena::CreateMaybeMessage< ::opi_api::storage::v1::NullDebugStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::NullDebugStatsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
