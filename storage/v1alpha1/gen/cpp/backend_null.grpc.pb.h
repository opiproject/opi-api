// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: backend_null.proto
// Original file comments:
// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.
//
#ifndef GRPC_backend_5fnull_2eproto__INCLUDED
#define GRPC_backend_5fnull_2eproto__INCLUDED

#include "backend_null.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace opi_api {
namespace storage {
namespace v1 {

// Back End (network-facing) APIs. This is debug interface for null block devices.
class NullVolumeService final {
 public:
  static constexpr char const* service_full_name() {
    return "opi_api.storage.v1.NullVolumeService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::opi_api::storage::v1::NullVolume* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>> AsyncCreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>>(AsyncCreateNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>> PrepareAsyncCreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>>(PrepareAsyncCreateNullVolumeRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteNullVolumeRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::opi_api::storage::v1::NullVolume* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>> AsyncUpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>>(AsyncUpdateNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>> PrepareAsyncUpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>>(PrepareAsyncUpdateNullVolumeRaw(context, request, cq));
    }
    virtual ::grpc::Status ListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::opi_api::storage::v1::ListNullVolumesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListNullVolumesResponse>> AsyncListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListNullVolumesResponse>>(AsyncListNullVolumesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListNullVolumesResponse>> PrepareAsyncListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListNullVolumesResponse>>(PrepareAsyncListNullVolumesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::opi_api::storage::v1::NullVolume* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>> AsyncGetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>>(AsyncGetNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>> PrepareAsyncGetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>>(PrepareAsyncGetNullVolumeRaw(context, request, cq));
    }
    virtual ::grpc::Status StatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::opi_api::storage::v1::StatsNullVolumeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::StatsNullVolumeResponse>> AsyncStatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::StatsNullVolumeResponse>>(AsyncStatsNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::StatsNullVolumeResponse>> PrepareAsyncStatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::StatsNullVolumeResponse>>(PrepareAsyncStatsNullVolumeRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest* request, ::opi_api::storage::v1::ListNullVolumesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest* request, ::opi_api::storage::v1::ListNullVolumesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest* request, ::opi_api::storage::v1::StatsNullVolumeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest* request, ::opi_api::storage::v1::StatsNullVolumeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>* AsyncCreateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>* PrepareAsyncCreateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>* AsyncUpdateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>* PrepareAsyncUpdateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListNullVolumesResponse>* AsyncListNullVolumesRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListNullVolumesResponse>* PrepareAsyncListNullVolumesRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>* AsyncGetNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::NullVolume>* PrepareAsyncGetNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::StatsNullVolumeResponse>* AsyncStatsNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::StatsNullVolumeResponse>* PrepareAsyncStatsNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::opi_api::storage::v1::NullVolume* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>> AsyncCreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>>(AsyncCreateNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>> PrepareAsyncCreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>>(PrepareAsyncCreateNullVolumeRaw(context, request, cq));
    }
    ::grpc::Status DeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteNullVolumeRaw(context, request, cq));
    }
    ::grpc::Status UpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::opi_api::storage::v1::NullVolume* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>> AsyncUpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>>(AsyncUpdateNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>> PrepareAsyncUpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>>(PrepareAsyncUpdateNullVolumeRaw(context, request, cq));
    }
    ::grpc::Status ListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::opi_api::storage::v1::ListNullVolumesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullVolumesResponse>> AsyncListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullVolumesResponse>>(AsyncListNullVolumesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullVolumesResponse>> PrepareAsyncListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullVolumesResponse>>(PrepareAsyncListNullVolumesRaw(context, request, cq));
    }
    ::grpc::Status GetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::opi_api::storage::v1::NullVolume* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>> AsyncGetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>>(AsyncGetNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>> PrepareAsyncGetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>>(PrepareAsyncGetNullVolumeRaw(context, request, cq));
    }
    ::grpc::Status StatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::opi_api::storage::v1::StatsNullVolumeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::StatsNullVolumeResponse>> AsyncStatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::StatsNullVolumeResponse>>(AsyncStatsNullVolumeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::StatsNullVolumeResponse>> PrepareAsyncStatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::StatsNullVolumeResponse>>(PrepareAsyncStatsNullVolumeRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, std::function<void(::grpc::Status)>) override;
      void CreateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, std::function<void(::grpc::Status)>) override;
      void UpdateNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest* request, ::opi_api::storage::v1::ListNullVolumesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListNullVolumes(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest* request, ::opi_api::storage::v1::ListNullVolumesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, std::function<void(::grpc::Status)>) override;
      void GetNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest* request, ::opi_api::storage::v1::StatsNullVolumeResponse* response, std::function<void(::grpc::Status)>) override;
      void StatsNullVolume(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest* request, ::opi_api::storage::v1::StatsNullVolumeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>* AsyncCreateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>* PrepareAsyncCreateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>* AsyncUpdateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>* PrepareAsyncUpdateNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullVolumesResponse>* AsyncListNullVolumesRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullVolumesResponse>* PrepareAsyncListNullVolumesRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>* AsyncGetNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullVolume>* PrepareAsyncGetNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::StatsNullVolumeResponse>* AsyncStatsNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::StatsNullVolumeResponse>* PrepareAsyncStatsNullVolumeRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateNullVolume_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteNullVolume_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateNullVolume_;
    const ::grpc::internal::RpcMethod rpcmethod_ListNullVolumes_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNullVolume_;
    const ::grpc::internal::RpcMethod rpcmethod_StatsNullVolume_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateNullVolume(::grpc::ServerContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response);
    virtual ::grpc::Status DeleteNullVolume(::grpc::ServerContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UpdateNullVolume(::grpc::ServerContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response);
    virtual ::grpc::Status ListNullVolumes(::grpc::ServerContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest* request, ::opi_api::storage::v1::ListNullVolumesResponse* response);
    virtual ::grpc::Status GetNullVolume(::grpc::ServerContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response);
    virtual ::grpc::Status StatsNullVolume(::grpc::ServerContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest* request, ::opi_api::storage::v1::StatsNullVolumeResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateNullVolume() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateNullVolume(::grpc::ServerContext* context, ::opi_api::storage::v1::CreateNullVolumeRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::NullVolume>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteNullVolume() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteNullVolumeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNullVolume(::grpc::ServerContext* context, ::opi_api::storage::v1::DeleteNullVolumeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateNullVolume() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNullVolume(::grpc::ServerContext* context, ::opi_api::storage::v1::UpdateNullVolumeRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::NullVolume>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListNullVolumes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListNullVolumes() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListNullVolumes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNullVolumes(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListNullVolumesRequest* /*request*/, ::opi_api::storage::v1::ListNullVolumesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNullVolumes(::grpc::ServerContext* context, ::opi_api::storage::v1::ListNullVolumesRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::ListNullVolumesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNullVolume() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNullVolume(::grpc::ServerContext* context, ::opi_api::storage::v1::GetNullVolumeRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::NullVolume>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StatsNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StatsNullVolume() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_StatsNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StatsNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::StatsNullVolumeRequest* /*request*/, ::opi_api::storage::v1::StatsNullVolumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStatsNullVolume(::grpc::ServerContext* context, ::opi_api::storage::v1::StatsNullVolumeRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::StatsNullVolumeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateNullVolume<WithAsyncMethod_DeleteNullVolume<WithAsyncMethod_UpdateNullVolume<WithAsyncMethod_ListNullVolumes<WithAsyncMethod_GetNullVolume<WithAsyncMethod_StatsNullVolume<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateNullVolume() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::CreateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response) { return this->CreateNullVolume(context, request, response); }));}
    void SetMessageAllocatorFor_CreateNullVolume(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::CreateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::CreateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteNullVolume() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteNullVolumeRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::DeleteNullVolumeRequest* request, ::google::protobuf::Empty* response) { return this->DeleteNullVolume(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteNullVolume(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::DeleteNullVolumeRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteNullVolumeRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteNullVolumeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::DeleteNullVolumeRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateNullVolume() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::UpdateNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response) { return this->UpdateNullVolume(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateNullVolume(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::UpdateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::UpdateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListNullVolumes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListNullVolumes() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListNullVolumesRequest, ::opi_api::storage::v1::ListNullVolumesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::ListNullVolumesRequest* request, ::opi_api::storage::v1::ListNullVolumesResponse* response) { return this->ListNullVolumes(context, request, response); }));}
    void SetMessageAllocatorFor_ListNullVolumes(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::ListNullVolumesRequest, ::opi_api::storage::v1::ListNullVolumesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListNullVolumesRequest, ::opi_api::storage::v1::ListNullVolumesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListNullVolumes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNullVolumes(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListNullVolumesRequest* /*request*/, ::opi_api::storage::v1::ListNullVolumesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListNullVolumes(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::ListNullVolumesRequest* /*request*/, ::opi_api::storage::v1::ListNullVolumesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNullVolume() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetNullVolumeRequest, ::opi_api::storage::v1::NullVolume>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::GetNullVolumeRequest* request, ::opi_api::storage::v1::NullVolume* response) { return this->GetNullVolume(context, request, response); }));}
    void SetMessageAllocatorFor_GetNullVolume(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::GetNullVolumeRequest, ::opi_api::storage::v1::NullVolume>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetNullVolumeRequest, ::opi_api::storage::v1::NullVolume>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::GetNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StatsNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StatsNullVolume() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::StatsNullVolumeRequest, ::opi_api::storage::v1::StatsNullVolumeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::StatsNullVolumeRequest* request, ::opi_api::storage::v1::StatsNullVolumeResponse* response) { return this->StatsNullVolume(context, request, response); }));}
    void SetMessageAllocatorFor_StatsNullVolume(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::StatsNullVolumeRequest, ::opi_api::storage::v1::StatsNullVolumeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::StatsNullVolumeRequest, ::opi_api::storage::v1::StatsNullVolumeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StatsNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StatsNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::StatsNullVolumeRequest* /*request*/, ::opi_api::storage::v1::StatsNullVolumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StatsNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::StatsNullVolumeRequest* /*request*/, ::opi_api::storage::v1::StatsNullVolumeResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateNullVolume<WithCallbackMethod_DeleteNullVolume<WithCallbackMethod_UpdateNullVolume<WithCallbackMethod_ListNullVolumes<WithCallbackMethod_GetNullVolume<WithCallbackMethod_StatsNullVolume<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateNullVolume() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteNullVolume() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteNullVolumeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateNullVolume() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListNullVolumes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListNullVolumes() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListNullVolumes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNullVolumes(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListNullVolumesRequest* /*request*/, ::opi_api::storage::v1::ListNullVolumesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNullVolume() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StatsNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StatsNullVolume() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_StatsNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StatsNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::StatsNullVolumeRequest* /*request*/, ::opi_api::storage::v1::StatsNullVolumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateNullVolume() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateNullVolume(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteNullVolume() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteNullVolumeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNullVolume(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateNullVolume() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNullVolume(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListNullVolumes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListNullVolumes() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListNullVolumes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNullVolumes(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListNullVolumesRequest* /*request*/, ::opi_api::storage::v1::ListNullVolumesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNullVolumes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNullVolume() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNullVolume(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StatsNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StatsNullVolume() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_StatsNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StatsNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::StatsNullVolumeRequest* /*request*/, ::opi_api::storage::v1::StatsNullVolumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStatsNullVolume(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateNullVolume() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateNullVolume(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteNullVolume() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteNullVolume(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteNullVolumeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateNullVolume() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateNullVolume(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListNullVolumes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListNullVolumes() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListNullVolumes(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListNullVolumes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNullVolumes(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListNullVolumesRequest* /*request*/, ::opi_api::storage::v1::ListNullVolumesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListNullVolumes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNullVolume() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNullVolume(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StatsNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StatsNullVolume() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StatsNullVolume(context, request, response); }));
    }
    ~WithRawCallbackMethod_StatsNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StatsNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::StatsNullVolumeRequest* /*request*/, ::opi_api::storage::v1::StatsNullVolumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StatsNullVolume(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateNullVolume() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::CreateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::CreateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>* streamer) {
                       return this->StreamedCreateNullVolume(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateNullVolume(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::CreateNullVolumeRequest,::opi_api::storage::v1::NullVolume>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteNullVolume() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::DeleteNullVolumeRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::DeleteNullVolumeRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteNullVolume(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteNullVolumeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteNullVolume(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::DeleteNullVolumeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateNullVolume() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::UpdateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::UpdateNullVolumeRequest, ::opi_api::storage::v1::NullVolume>* streamer) {
                       return this->StreamedUpdateNullVolume(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateNullVolume(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::UpdateNullVolumeRequest,::opi_api::storage::v1::NullVolume>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListNullVolumes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListNullVolumes() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::ListNullVolumesRequest, ::opi_api::storage::v1::ListNullVolumesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::ListNullVolumesRequest, ::opi_api::storage::v1::ListNullVolumesResponse>* streamer) {
                       return this->StreamedListNullVolumes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListNullVolumes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListNullVolumes(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListNullVolumesRequest* /*request*/, ::opi_api::storage::v1::ListNullVolumesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListNullVolumes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::ListNullVolumesRequest,::opi_api::storage::v1::ListNullVolumesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNullVolume() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::GetNullVolumeRequest, ::opi_api::storage::v1::NullVolume>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::GetNullVolumeRequest, ::opi_api::storage::v1::NullVolume>* streamer) {
                       return this->StreamedGetNullVolume(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetNullVolumeRequest* /*request*/, ::opi_api::storage::v1::NullVolume* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNullVolume(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::GetNullVolumeRequest,::opi_api::storage::v1::NullVolume>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StatsNullVolume : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StatsNullVolume() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::StatsNullVolumeRequest, ::opi_api::storage::v1::StatsNullVolumeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::StatsNullVolumeRequest, ::opi_api::storage::v1::StatsNullVolumeResponse>* streamer) {
                       return this->StreamedStatsNullVolume(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StatsNullVolume() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StatsNullVolume(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::StatsNullVolumeRequest* /*request*/, ::opi_api::storage::v1::StatsNullVolumeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStatsNullVolume(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::StatsNullVolumeRequest,::opi_api::storage::v1::StatsNullVolumeResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateNullVolume<WithStreamedUnaryMethod_DeleteNullVolume<WithStreamedUnaryMethod_UpdateNullVolume<WithStreamedUnaryMethod_ListNullVolumes<WithStreamedUnaryMethod_GetNullVolume<WithStreamedUnaryMethod_StatsNullVolume<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateNullVolume<WithStreamedUnaryMethod_DeleteNullVolume<WithStreamedUnaryMethod_UpdateNullVolume<WithStreamedUnaryMethod_ListNullVolumes<WithStreamedUnaryMethod_GetNullVolume<WithStreamedUnaryMethod_StatsNullVolume<Service > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace storage
}  // namespace opi_api


#endif  // GRPC_backend_5fnull_2eproto__INCLUDED
