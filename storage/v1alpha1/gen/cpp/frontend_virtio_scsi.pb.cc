// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend_virtio_scsi.proto

#include "frontend_virtio_scsi.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace opi_api {
namespace storage {
namespace v1 {
PROTOBUF_CONSTEXPR VirtioScsiTarget::VirtioScsiTarget(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.max_luns_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VirtioScsiTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VirtioScsiTargetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VirtioScsiTargetDefaultTypeInternal() {}
  union {
    VirtioScsiTarget _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VirtioScsiTargetDefaultTypeInternal _VirtioScsiTarget_default_instance_;
PROTOBUF_CONSTEXPR VirtioScsiController::VirtioScsiController(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pcie_id_)*/nullptr
  , /*decltype(_impl_.min_limit_)*/nullptr
  , /*decltype(_impl_.max_limit_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VirtioScsiControllerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VirtioScsiControllerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VirtioScsiControllerDefaultTypeInternal() {}
  union {
    VirtioScsiController _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VirtioScsiControllerDefaultTypeInternal _VirtioScsiController_default_instance_;
PROTOBUF_CONSTEXPR VirtioScsiLun::VirtioScsiLun(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.target_name_ref_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.volume_name_ref_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VirtioScsiLunDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VirtioScsiLunDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VirtioScsiLunDefaultTypeInternal() {}
  union {
    VirtioScsiLun _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VirtioScsiLunDefaultTypeInternal _VirtioScsiLun_default_instance_;
PROTOBUF_CONSTEXPR CreateVirtioScsiTargetRequest::CreateVirtioScsiTargetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_target_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.virtio_scsi_target_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateVirtioScsiTargetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVirtioScsiTargetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVirtioScsiTargetRequestDefaultTypeInternal() {}
  union {
    CreateVirtioScsiTargetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVirtioScsiTargetRequestDefaultTypeInternal _CreateVirtioScsiTargetRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteVirtioScsiTargetRequest::DeleteVirtioScsiTargetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.allow_missing_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteVirtioScsiTargetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVirtioScsiTargetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVirtioScsiTargetRequestDefaultTypeInternal() {}
  union {
    DeleteVirtioScsiTargetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVirtioScsiTargetRequestDefaultTypeInternal _DeleteVirtioScsiTargetRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateVirtioScsiTargetRequest::UpdateVirtioScsiTargetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_target_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr
  , /*decltype(_impl_.allow_missing_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateVirtioScsiTargetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateVirtioScsiTargetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateVirtioScsiTargetRequestDefaultTypeInternal() {}
  union {
    UpdateVirtioScsiTargetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateVirtioScsiTargetRequestDefaultTypeInternal _UpdateVirtioScsiTargetRequest_default_instance_;
PROTOBUF_CONSTEXPR ListVirtioScsiTargetsRequest::ListVirtioScsiTargetsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListVirtioScsiTargetsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVirtioScsiTargetsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVirtioScsiTargetsRequestDefaultTypeInternal() {}
  union {
    ListVirtioScsiTargetsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVirtioScsiTargetsRequestDefaultTypeInternal _ListVirtioScsiTargetsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListVirtioScsiTargetsResponse::ListVirtioScsiTargetsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_targets_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListVirtioScsiTargetsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVirtioScsiTargetsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVirtioScsiTargetsResponseDefaultTypeInternal() {}
  union {
    ListVirtioScsiTargetsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVirtioScsiTargetsResponseDefaultTypeInternal _ListVirtioScsiTargetsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetVirtioScsiTargetRequest::GetVirtioScsiTargetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVirtioScsiTargetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVirtioScsiTargetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVirtioScsiTargetRequestDefaultTypeInternal() {}
  union {
    GetVirtioScsiTargetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVirtioScsiTargetRequestDefaultTypeInternal _GetVirtioScsiTargetRequest_default_instance_;
PROTOBUF_CONSTEXPR StatsVirtioScsiTargetRequest::StatsVirtioScsiTargetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatsVirtioScsiTargetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsVirtioScsiTargetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsVirtioScsiTargetRequestDefaultTypeInternal() {}
  union {
    StatsVirtioScsiTargetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsVirtioScsiTargetRequestDefaultTypeInternal _StatsVirtioScsiTargetRequest_default_instance_;
PROTOBUF_CONSTEXPR StatsVirtioScsiTargetResponse::StatsVirtioScsiTargetResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stats_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatsVirtioScsiTargetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsVirtioScsiTargetResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsVirtioScsiTargetResponseDefaultTypeInternal() {}
  union {
    StatsVirtioScsiTargetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsVirtioScsiTargetResponseDefaultTypeInternal _StatsVirtioScsiTargetResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateVirtioScsiControllerRequest::CreateVirtioScsiControllerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_controller_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.virtio_scsi_controller_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateVirtioScsiControllerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVirtioScsiControllerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVirtioScsiControllerRequestDefaultTypeInternal() {}
  union {
    CreateVirtioScsiControllerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVirtioScsiControllerRequestDefaultTypeInternal _CreateVirtioScsiControllerRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteVirtioScsiControllerRequest::DeleteVirtioScsiControllerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.allow_missing_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteVirtioScsiControllerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVirtioScsiControllerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVirtioScsiControllerRequestDefaultTypeInternal() {}
  union {
    DeleteVirtioScsiControllerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVirtioScsiControllerRequestDefaultTypeInternal _DeleteVirtioScsiControllerRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateVirtioScsiControllerRequest::UpdateVirtioScsiControllerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_controller_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr
  , /*decltype(_impl_.allow_missing_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateVirtioScsiControllerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateVirtioScsiControllerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateVirtioScsiControllerRequestDefaultTypeInternal() {}
  union {
    UpdateVirtioScsiControllerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateVirtioScsiControllerRequestDefaultTypeInternal _UpdateVirtioScsiControllerRequest_default_instance_;
PROTOBUF_CONSTEXPR ListVirtioScsiControllersRequest::ListVirtioScsiControllersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListVirtioScsiControllersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVirtioScsiControllersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVirtioScsiControllersRequestDefaultTypeInternal() {}
  union {
    ListVirtioScsiControllersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVirtioScsiControllersRequestDefaultTypeInternal _ListVirtioScsiControllersRequest_default_instance_;
PROTOBUF_CONSTEXPR ListVirtioScsiControllersResponse::ListVirtioScsiControllersResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_controllers_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListVirtioScsiControllersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVirtioScsiControllersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVirtioScsiControllersResponseDefaultTypeInternal() {}
  union {
    ListVirtioScsiControllersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVirtioScsiControllersResponseDefaultTypeInternal _ListVirtioScsiControllersResponse_default_instance_;
PROTOBUF_CONSTEXPR GetVirtioScsiControllerRequest::GetVirtioScsiControllerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVirtioScsiControllerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVirtioScsiControllerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVirtioScsiControllerRequestDefaultTypeInternal() {}
  union {
    GetVirtioScsiControllerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVirtioScsiControllerRequestDefaultTypeInternal _GetVirtioScsiControllerRequest_default_instance_;
PROTOBUF_CONSTEXPR StatsVirtioScsiControllerRequest::StatsVirtioScsiControllerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatsVirtioScsiControllerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsVirtioScsiControllerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsVirtioScsiControllerRequestDefaultTypeInternal() {}
  union {
    StatsVirtioScsiControllerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsVirtioScsiControllerRequestDefaultTypeInternal _StatsVirtioScsiControllerRequest_default_instance_;
PROTOBUF_CONSTEXPR StatsVirtioScsiControllerResponse::StatsVirtioScsiControllerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stats_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatsVirtioScsiControllerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsVirtioScsiControllerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsVirtioScsiControllerResponseDefaultTypeInternal() {}
  union {
    StatsVirtioScsiControllerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsVirtioScsiControllerResponseDefaultTypeInternal _StatsVirtioScsiControllerResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateVirtioScsiLunRequest::CreateVirtioScsiLunRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_lun_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.virtio_scsi_lun_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateVirtioScsiLunRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateVirtioScsiLunRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateVirtioScsiLunRequestDefaultTypeInternal() {}
  union {
    CreateVirtioScsiLunRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateVirtioScsiLunRequestDefaultTypeInternal _CreateVirtioScsiLunRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteVirtioScsiLunRequest::DeleteVirtioScsiLunRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.allow_missing_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteVirtioScsiLunRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteVirtioScsiLunRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteVirtioScsiLunRequestDefaultTypeInternal() {}
  union {
    DeleteVirtioScsiLunRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteVirtioScsiLunRequestDefaultTypeInternal _DeleteVirtioScsiLunRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateVirtioScsiLunRequest::UpdateVirtioScsiLunRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_lun_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr
  , /*decltype(_impl_.allow_missing_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateVirtioScsiLunRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateVirtioScsiLunRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateVirtioScsiLunRequestDefaultTypeInternal() {}
  union {
    UpdateVirtioScsiLunRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateVirtioScsiLunRequestDefaultTypeInternal _UpdateVirtioScsiLunRequest_default_instance_;
PROTOBUF_CONSTEXPR ListVirtioScsiLunsRequest::ListVirtioScsiLunsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListVirtioScsiLunsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVirtioScsiLunsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVirtioScsiLunsRequestDefaultTypeInternal() {}
  union {
    ListVirtioScsiLunsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVirtioScsiLunsRequestDefaultTypeInternal _ListVirtioScsiLunsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListVirtioScsiLunsResponse::ListVirtioScsiLunsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.virtio_scsi_luns_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListVirtioScsiLunsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListVirtioScsiLunsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListVirtioScsiLunsResponseDefaultTypeInternal() {}
  union {
    ListVirtioScsiLunsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListVirtioScsiLunsResponseDefaultTypeInternal _ListVirtioScsiLunsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetVirtioScsiLunRequest::GetVirtioScsiLunRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVirtioScsiLunRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVirtioScsiLunRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVirtioScsiLunRequestDefaultTypeInternal() {}
  union {
    GetVirtioScsiLunRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVirtioScsiLunRequestDefaultTypeInternal _GetVirtioScsiLunRequest_default_instance_;
PROTOBUF_CONSTEXPR StatsVirtioScsiLunRequest::StatsVirtioScsiLunRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.controller_name_ref_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatsVirtioScsiLunRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsVirtioScsiLunRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsVirtioScsiLunRequestDefaultTypeInternal() {}
  union {
    StatsVirtioScsiLunRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsVirtioScsiLunRequestDefaultTypeInternal _StatsVirtioScsiLunRequest_default_instance_;
PROTOBUF_CONSTEXPR StatsVirtioScsiLunResponse::StatsVirtioScsiLunResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stats_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatsVirtioScsiLunResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsVirtioScsiLunResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsVirtioScsiLunResponseDefaultTypeInternal() {}
  union {
    StatsVirtioScsiLunResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsVirtioScsiLunResponseDefaultTypeInternal _StatsVirtioScsiLunResponse_default_instance_;
}  // namespace v1
}  // namespace storage
}  // namespace opi_api
static ::_pb::Metadata file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[27];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_frontend_5fvirtio_5fscsi_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_frontend_5fvirtio_5fscsi_2eproto = nullptr;

const uint32_t TableStruct_frontend_5fvirtio_5fscsi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiTarget, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiTarget, _impl_.max_luns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiController, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiController, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiController, _impl_.pcie_id_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiController, _impl_.min_limit_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiController, _impl_.max_limit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiLun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiLun, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiLun, _impl_.target_name_ref_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::VirtioScsiLun, _impl_.volume_name_ref_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiTargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiTargetRequest, _impl_.virtio_scsi_target_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiTargetRequest, _impl_.virtio_scsi_target_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, _impl_.allow_missing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, _impl_.virtio_scsi_target_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, _impl_.update_mask_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, _impl_.allow_missing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiTargetsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiTargetsRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiTargetsRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiTargetsRequest, _impl_.page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiTargetsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiTargetsResponse, _impl_.virtio_scsi_targets_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiTargetsResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetVirtioScsiTargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetVirtioScsiTargetRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiTargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiTargetRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiTargetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiTargetResponse, _impl_.stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiControllerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiControllerRequest, _impl_.virtio_scsi_controller_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiControllerRequest, _impl_.virtio_scsi_controller_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, _impl_.allow_missing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, _impl_.virtio_scsi_controller_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, _impl_.update_mask_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, _impl_.allow_missing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiControllersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiControllersRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiControllersRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiControllersRequest, _impl_.page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiControllersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiControllersResponse, _impl_.virtio_scsi_controllers_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiControllersResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetVirtioScsiControllerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetVirtioScsiControllerRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiControllerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiControllerRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiControllerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiControllerResponse, _impl_.stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiLunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiLunRequest, _impl_.virtio_scsi_lun_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::CreateVirtioScsiLunRequest, _impl_.virtio_scsi_lun_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiLunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiLunRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::DeleteVirtioScsiLunRequest, _impl_.allow_missing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiLunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiLunRequest, _impl_.virtio_scsi_lun_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiLunRequest, _impl_.update_mask_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::UpdateVirtioScsiLunRequest, _impl_.allow_missing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiLunsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiLunsRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiLunsRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiLunsRequest, _impl_.page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiLunsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiLunsResponse, _impl_.virtio_scsi_luns_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::ListVirtioScsiLunsResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetVirtioScsiLunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::GetVirtioScsiLunRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiLunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiLunRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiLunRequest, _impl_.controller_name_ref_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiLunResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::storage::v1::StatsVirtioScsiLunResponse, _impl_.stats_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::opi_api::storage::v1::VirtioScsiTarget)},
  { 8, -1, -1, sizeof(::opi_api::storage::v1::VirtioScsiController)},
  { 18, -1, -1, sizeof(::opi_api::storage::v1::VirtioScsiLun)},
  { 27, -1, -1, sizeof(::opi_api::storage::v1::CreateVirtioScsiTargetRequest)},
  { 35, -1, -1, sizeof(::opi_api::storage::v1::DeleteVirtioScsiTargetRequest)},
  { 43, -1, -1, sizeof(::opi_api::storage::v1::UpdateVirtioScsiTargetRequest)},
  { 52, -1, -1, sizeof(::opi_api::storage::v1::ListVirtioScsiTargetsRequest)},
  { 61, -1, -1, sizeof(::opi_api::storage::v1::ListVirtioScsiTargetsResponse)},
  { 69, -1, -1, sizeof(::opi_api::storage::v1::GetVirtioScsiTargetRequest)},
  { 76, -1, -1, sizeof(::opi_api::storage::v1::StatsVirtioScsiTargetRequest)},
  { 83, -1, -1, sizeof(::opi_api::storage::v1::StatsVirtioScsiTargetResponse)},
  { 90, -1, -1, sizeof(::opi_api::storage::v1::CreateVirtioScsiControllerRequest)},
  { 98, -1, -1, sizeof(::opi_api::storage::v1::DeleteVirtioScsiControllerRequest)},
  { 106, -1, -1, sizeof(::opi_api::storage::v1::UpdateVirtioScsiControllerRequest)},
  { 115, -1, -1, sizeof(::opi_api::storage::v1::ListVirtioScsiControllersRequest)},
  { 124, -1, -1, sizeof(::opi_api::storage::v1::ListVirtioScsiControllersResponse)},
  { 132, -1, -1, sizeof(::opi_api::storage::v1::GetVirtioScsiControllerRequest)},
  { 139, -1, -1, sizeof(::opi_api::storage::v1::StatsVirtioScsiControllerRequest)},
  { 146, -1, -1, sizeof(::opi_api::storage::v1::StatsVirtioScsiControllerResponse)},
  { 153, -1, -1, sizeof(::opi_api::storage::v1::CreateVirtioScsiLunRequest)},
  { 161, -1, -1, sizeof(::opi_api::storage::v1::DeleteVirtioScsiLunRequest)},
  { 169, -1, -1, sizeof(::opi_api::storage::v1::UpdateVirtioScsiLunRequest)},
  { 178, -1, -1, sizeof(::opi_api::storage::v1::ListVirtioScsiLunsRequest)},
  { 187, -1, -1, sizeof(::opi_api::storage::v1::ListVirtioScsiLunsResponse)},
  { 195, -1, -1, sizeof(::opi_api::storage::v1::GetVirtioScsiLunRequest)},
  { 202, -1, -1, sizeof(::opi_api::storage::v1::StatsVirtioScsiLunRequest)},
  { 210, -1, -1, sizeof(::opi_api::storage::v1::StatsVirtioScsiLunResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::opi_api::storage::v1::_VirtioScsiTarget_default_instance_._instance,
  &::opi_api::storage::v1::_VirtioScsiController_default_instance_._instance,
  &::opi_api::storage::v1::_VirtioScsiLun_default_instance_._instance,
  &::opi_api::storage::v1::_CreateVirtioScsiTargetRequest_default_instance_._instance,
  &::opi_api::storage::v1::_DeleteVirtioScsiTargetRequest_default_instance_._instance,
  &::opi_api::storage::v1::_UpdateVirtioScsiTargetRequest_default_instance_._instance,
  &::opi_api::storage::v1::_ListVirtioScsiTargetsRequest_default_instance_._instance,
  &::opi_api::storage::v1::_ListVirtioScsiTargetsResponse_default_instance_._instance,
  &::opi_api::storage::v1::_GetVirtioScsiTargetRequest_default_instance_._instance,
  &::opi_api::storage::v1::_StatsVirtioScsiTargetRequest_default_instance_._instance,
  &::opi_api::storage::v1::_StatsVirtioScsiTargetResponse_default_instance_._instance,
  &::opi_api::storage::v1::_CreateVirtioScsiControllerRequest_default_instance_._instance,
  &::opi_api::storage::v1::_DeleteVirtioScsiControllerRequest_default_instance_._instance,
  &::opi_api::storage::v1::_UpdateVirtioScsiControllerRequest_default_instance_._instance,
  &::opi_api::storage::v1::_ListVirtioScsiControllersRequest_default_instance_._instance,
  &::opi_api::storage::v1::_ListVirtioScsiControllersResponse_default_instance_._instance,
  &::opi_api::storage::v1::_GetVirtioScsiControllerRequest_default_instance_._instance,
  &::opi_api::storage::v1::_StatsVirtioScsiControllerRequest_default_instance_._instance,
  &::opi_api::storage::v1::_StatsVirtioScsiControllerResponse_default_instance_._instance,
  &::opi_api::storage::v1::_CreateVirtioScsiLunRequest_default_instance_._instance,
  &::opi_api::storage::v1::_DeleteVirtioScsiLunRequest_default_instance_._instance,
  &::opi_api::storage::v1::_UpdateVirtioScsiLunRequest_default_instance_._instance,
  &::opi_api::storage::v1::_ListVirtioScsiLunsRequest_default_instance_._instance,
  &::opi_api::storage::v1::_ListVirtioScsiLunsResponse_default_instance_._instance,
  &::opi_api::storage::v1::_GetVirtioScsiLunRequest_default_instance_._instance,
  &::opi_api::storage::v1::_StatsVirtioScsiLunRequest_default_instance_._instance,
  &::opi_api::storage::v1::_StatsVirtioScsiLunResponse_default_instance_._instance,
};

const char descriptor_table_protodef_frontend_5fvirtio_5fscsi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032frontend_virtio_scsi.proto\022\022opi_api.st"
  "orage.v1\032\017opicommon.proto\032\027google/api/cl"
  "ient.proto\032\031google/api/resource.proto\032\033g"
  "oogle/protobuf/empty.proto\032\034google/api/a"
  "nnotations.proto\032\037google/api/field_behav"
  "ior.proto\032 google/protobuf/field_mask.pr"
  "oto\"\313\001\n\020VirtioScsiTarget\022<\n\004name\030\001 \001(\tB."
  "\340A\003\340A\005\372A%\n#opi_api.storage.v1/VirtioScsi"
  "Target\022\025\n\010max_luns\030\002 \001(\005B\003\340A\001:b\352A_\n\'stor"
  "age.opiproject.org/VirtioScsiTarget\022\020vol"
  "umes/{volume}*\020virtioScsiTarget2\020virtioS"
  "csiTarget\"\354\002\n\024VirtioScsiController\022@\n\004na"
  "me\030\001 \001(\tB2\340A\003\340A\005\372A)\n\'opi_api.storage.v1/"
  "VirtioScsiController\0225\n\007pcie_id\030\002 \001(\0132\037."
  "opi_api.storage.v1.PciEndpointB\003\340A\002\0224\n\tm"
  "in_limit\030\003 \001(\0132\034.opi_api.storage.v1.QosL"
  "imitB\003\340A\001\0224\n\tmax_limit\030\004 \001(\0132\034.opi_api.s"
  "torage.v1.QosLimitB\003\340A\001:o\352Al\n+storage.op"
  "iproject.org/VirtioScsiController\022\020volum"
  "es/{volume}*\025virtioScsiControllers2\024virt"
  "ioScsiController\"\342\001\n\rVirtioScsiLun\0229\n\004na"
  "me\030\001 \001(\tB+\340A\003\340A\005\372A\"\n opi_api.storage.v1/"
  "VirtioScsiLun\022\034\n\017target_name_ref\030\002 \001(\tB\003"
  "\340A\002\022\034\n\017volume_name_ref\030\003 \001(\tB\003\340A\002:Z\352AW\n$"
  "storage.opiproject.org/VirtioScsiLun\022\020vo"
  "lumes/{volume}*\016virtioScsiLuns2\rvirtioSc"
  "siLun\"\212\001\n\035CreateVirtioScsiTargetRequest\022"
  "E\n\022virtio_scsi_target\030\001 \001(\0132$.opi_api.st"
  "orage.v1.VirtioScsiTargetB\003\340A\002\022\"\n\025virtio"
  "_scsi_target_id\030\002 \001(\tB\003\340A\001\"v\n\035DeleteVirt"
  "ioScsiTargetRequest\0229\n\004name\030\001 \001(\tB+\340A\002\372A"
  "%\n#opi_api.storage.v1/VirtioScsiTarget\022\032"
  "\n\rallow_missing\030\002 \001(\010B\003\340A\001\"\270\001\n\035UpdateVir"
  "tioScsiTargetRequest\022E\n\022virtio_scsi_targ"
  "et\030\001 \001(\0132$.opi_api.storage.v1.VirtioScsi"
  "TargetB\003\340A\002\0224\n\013update_mask\030\002 \001(\0132\032.googl"
  "e.protobuf.FieldMaskB\003\340A\001\022\032\n\rallow_missi"
  "ng\030\003 \001(\010B\003\340A\001\"\214\001\n\034ListVirtioScsiTargetsR"
  "equest\022;\n\006parent\030\001 \001(\tB+\340A\002\372A%\n#opi_api."
  "storage.v1/VirtioScsiTarget\022\026\n\tpage_size"
  "\030\002 \001(\005B\003\340A\001\022\027\n\npage_token\030\003 \001(\tB\003\340A\001\"{\n\035"
  "ListVirtioScsiTargetsResponse\022A\n\023virtio_"
  "scsi_targets\030\001 \003(\0132$.opi_api.storage.v1."
  "VirtioScsiTarget\022\027\n\017next_page_token\030\002 \001("
  "\t\"W\n\032GetVirtioScsiTargetRequest\0229\n\004name\030"
  "\001 \001(\tB+\340A\002\372A%\n#opi_api.storage.v1/Virtio"
  "ScsiTarget\"Y\n\034StatsVirtioScsiTargetReque"
  "st\0229\n\004name\030\001 \001(\tB+\340A\002\372A%\n#opi_api.storag"
  "e.v1/VirtioScsiTarget\"O\n\035StatsVirtioScsi"
  "TargetResponse\022.\n\005stats\030\001 \001(\0132\037.opi_api."
  "storage.v1.VolumeStats\"\232\001\n!CreateVirtioS"
  "csiControllerRequest\022M\n\026virtio_scsi_cont"
  "roller\030\001 \001(\0132(.opi_api.storage.v1.Virtio"
  "ScsiControllerB\003\340A\002\022&\n\031virtio_scsi_contr"
  "oller_id\030\002 \001(\tB\003\340A\001\"~\n!DeleteVirtioScsiC"
  "ontrollerRequest\022=\n\004name\030\001 \001(\tB/\340A\002\372A)\n\'"
  "opi_api.storage.v1/VirtioScsiController\022"
  "\032\n\rallow_missing\030\002 \001(\010B\003\340A\001\"\304\001\n!UpdateVi"
  "rtioScsiControllerRequest\022M\n\026virtio_scsi"
  "_controller\030\001 \001(\0132(.opi_api.storage.v1.V"
  "irtioScsiControllerB\003\340A\002\0224\n\013update_mask\030"
  "\002 \001(\0132\032.google.protobuf.FieldMaskB\003\340A\001\022\032"
  "\n\rallow_missing\030\003 \001(\010B\003\340A\001\"\224\001\n ListVirti"
  "oScsiControllersRequest\022\?\n\006parent\030\001 \001(\tB"
  "/\340A\002\372A)\n\'opi_api.storage.v1/VirtioScsiCo"
  "ntroller\022\026\n\tpage_size\030\002 \001(\005B\003\340A\001\022\027\n\npage"
  "_token\030\003 \001(\tB\003\340A\001\"\207\001\n!ListVirtioScsiCont"
  "rollersResponse\022I\n\027virtio_scsi_controlle"
  "rs\030\001 \003(\0132(.opi_api.storage.v1.VirtioScsi"
  "Controller\022\027\n\017next_page_token\030\002 \001(\t\"_\n\036G"
  "etVirtioScsiControllerRequest\022=\n\004name\030\001 "
  "\001(\tB/\340A\002\372A)\n\'opi_api.storage.v1/VirtioSc"
  "siController\"a\n StatsVirtioScsiControlle"
  "rRequest\022=\n\004name\030\001 \001(\tB/\340A\002\372A)\n\'opi_api."
  "storage.v1/VirtioScsiController\"S\n!Stats"
  "VirtioScsiControllerResponse\022.\n\005stats\030\001 "
  "\001(\0132\037.opi_api.storage.v1.VolumeStats\"~\n\032"
  "CreateVirtioScsiLunRequest\022\?\n\017virtio_scs"
  "i_lun\030\001 \001(\0132!.opi_api.storage.v1.VirtioS"
  "csiLunB\003\340A\002\022\037\n\022virtio_scsi_lun_id\030\002 \001(\tB"
  "\003\340A\001\"p\n\032DeleteVirtioScsiLunRequest\0226\n\004na"
  "me\030\001 \001(\tB(\340A\002\372A\"\n opi_api.storage.v1/Vir"
  "tioScsiLun\022\032\n\rallow_missing\030\002 \001(\010B\003\340A\001\"\257"
  "\001\n\032UpdateVirtioScsiLunRequest\022\?\n\017virtio_"
  "scsi_lun\030\001 \001(\0132!.opi_api.storage.v1.Virt"
  "ioScsiLunB\003\340A\002\0224\n\013update_mask\030\002 \001(\0132\032.go"
  "ogle.protobuf.FieldMaskB\003\340A\001\022\032\n\rallow_mi"
  "ssing\030\003 \001(\010B\003\340A\001\"\206\001\n\031ListVirtioScsiLunsR"
  "equest\0228\n\006parent\030\001 \001(\tB(\340A\002\372A\"\n opi_api."
  "storage.v1/VirtioScsiLun\022\026\n\tpage_size\030\002 "
  "\001(\005B\003\340A\001\022\027\n\npage_token\030\003 \001(\tB\003\340A\001\"r\n\032Lis"
  "tVirtioScsiLunsResponse\022;\n\020virtio_scsi_l"
  "uns\030\001 \003(\0132!.opi_api.storage.v1.VirtioScs"
  "iLun\022\027\n\017next_page_token\030\002 \001(\t\"Q\n\027GetVirt"
  "ioScsiLunRequest\0226\n\004name\030\001 \001(\tB(\340A\002\372A\"\n "
  "opi_api.storage.v1/VirtioScsiLun\"u\n\031Stat"
  "sVirtioScsiLunRequest\0226\n\004name\030\001 \001(\tB(\340A\002"
  "\372A\"\n opi_api.storage.v1/VirtioScsiLun\022 \n"
  "\023controller_name_ref\030\002 \001(\tB\003\340A\001\"L\n\032Stats"
  "VirtioScsiLunResponse\022.\n\005stats\030\001 \001(\0132\037.o"
  "pi_api.storage.v1.VolumeStats2\313\031\n\031Fronte"
  "ndVirtioScsiService\022\305\001\n\026CreateVirtioScsi"
  "Target\0221.opi_api.storage.v1.CreateVirtio"
  "ScsiTargetRequest\032$.opi_api.storage.v1.V"
  "irtioScsiTarget\"R\202\323\344\223\002!\"\013/v1/volumes:\022vi"
  "rtio_scsi_target\332A(virtio_scsi_target,vi"
  "rtio_scsi_target_id\022\222\001\n\026DeleteVirtioScsi"
  "Target\0221.opi_api.storage.v1.DeleteVirtio"
  "ScsiTargetRequest\032\026.google.protobuf.Empt"
  "y\"-\202\323\344\223\002 *\036/v1/{name=VirtioScsiTargets/*"
  "}\332A\004name\022\330\001\n\026UpdateVirtioScsiTarget\0221.op"
  "i_api.storage.v1.UpdateVirtioScsiTargetR"
  "equest\032$.opi_api.storage.v1.VirtioScsiTa"
  "rget\"e\202\323\344\223\002>2(/v1/{virtio_scsi_target.na"
  "me=subsystems}:\022virtio_scsi_target\332A\036vir"
  "tio_scsi_target,update_mask\022\246\001\n\025ListVirt"
  "ioScsiTargets\0220.opi_api.storage.v1.ListV"
  "irtioScsiTargetsRequest\0321.opi_api.storag"
  "e.v1.ListVirtioScsiTargetsResponse\"(\202\323\344\223"
  "\002\031\022\027/v1/{parent=subsystems}\332A\006parent\022\232\001\n"
  "\023GetVirtioScsiTarget\022..opi_api.storage.v"
  "1.GetVirtioScsiTargetRequest\032$.opi_api.s"
  "torage.v1.VirtioScsiTarget\"-\202\323\344\223\002 \022\036/v1/"
  "{name=VirtioScsiTargets/*}\332A\004name\022\261\001\n\025St"
  "atsVirtioScsiTarget\0220.opi_api.storage.v1"
  ".StatsVirtioScsiTargetRequest\0321.opi_api."
  "storage.v1.StatsVirtioScsiTargetResponse"
  "\"3\202\323\344\223\002&\022$/v1/{name=VirtioScsiTargets/*}"
  ":stats\332A\004name\022\335\001\n\032CreateVirtioScsiContro"
  "ller\0225.opi_api.storage.v1.CreateVirtioSc"
  "siControllerRequest\032(.opi_api.storage.v1"
  ".VirtioScsiController\"^\202\323\344\223\002%\"\013/v1/volum"
  "es:\026virtio_scsi_controller\332A0virtio_scsi"
  "_controller,virtio_scsi_controller_id\022\236\001"
  "\n\032DeleteVirtioScsiController\0225.opi_api.s"
  "torage.v1.DeleteVirtioScsiControllerRequ"
  "est\032\026.google.protobuf.Empty\"1\202\323\344\223\002$*\"/v1"
  "/{name=VirtioScsiControllers/*}\332A\004name\022\360"
  "\001\n\032UpdateVirtioScsiController\0225.opi_api."
  "storage.v1.UpdateVirtioScsiControllerReq"
  "uest\032(.opi_api.storage.v1.VirtioScsiCont"
  "roller\"q\202\323\344\223\002F2,/v1/{virtio_scsi_control"
  "ler.name=subsystems}:\026virtio_scsi_contro"
  "ller\332A\"virtio_scsi_controller,update_mas"
  "k\022\262\001\n\031ListVirtioScsiControllers\0224.opi_ap"
  "i.storage.v1.ListVirtioScsiControllersRe"
  "quest\0325.opi_api.storage.v1.ListVirtioScs"
  "iControllersResponse\"(\202\323\344\223\002\031\022\027/v1/{paren"
  "t=subsystems}\332A\006parent\022\252\001\n\027GetVirtioScsi"
  "Controller\0222.opi_api.storage.v1.GetVirti"
  "oScsiControllerRequest\032(.opi_api.storage"
  ".v1.VirtioScsiController\"1\202\323\344\223\002$\022\"/v1/{n"
  "ame=VirtioScsiControllers/*}\332A\004name\022\301\001\n\031"
  "StatsVirtioScsiController\0224.opi_api.stor"
  "age.v1.StatsVirtioScsiControllerRequest\032"
  "5.opi_api.storage.v1.StatsVirtioScsiCont"
  "rollerResponse\"7\202\323\344\223\002*\022(/v1/{name=Virtio"
  "ScsiControllers/*}:stats\332A\004name\022\263\001\n\023Crea"
  "teVirtioScsiLun\022..opi_api.storage.v1.Cre"
  "ateVirtioScsiLunRequest\032!.opi_api.storag"
  "e.v1.VirtioScsiLun\"I\202\323\344\223\002\036\"\013/v1/volumes:"
  "\017virtio_scsi_lun\332A\"virtio_scsi_lun,virti"
  "o_scsi_lun_id\022\211\001\n\023DeleteVirtioScsiLun\022.."
  "opi_api.storage.v1.DeleteVirtioScsiLunRe"
  "quest\032\026.google.protobuf.Empty\"*\202\323\344\223\002\035*\033/"
  "v1/{name=VirtioScsiLuns/*}\332A\004name\022\306\001\n\023Up"
  "dateVirtioScsiLun\022..opi_api.storage.v1.U"
  "pdateVirtioScsiLunRequest\032!.opi_api.stor"
  "age.v1.VirtioScsiLun\"\\\202\323\344\223\00282%/v1/{virti"
  "o_scsi_lun.name=subsystems}:\017virtio_scsi"
  "_lun\332A\033virtio_scsi_lun,update_mask\022\235\001\n\022L"
  "istVirtioScsiLuns\022-.opi_api.storage.v1.L"
  "istVirtioScsiLunsRequest\032..opi_api.stora"
  "ge.v1.ListVirtioScsiLunsResponse\"(\202\323\344\223\002\031"
  "\022\027/v1/{parent=subsystems}\332A\006parent\022\216\001\n\020G"
  "etVirtioScsiLun\022+.opi_api.storage.v1.Get"
  "VirtioScsiLunRequest\032!.opi_api.storage.v"
  "1.VirtioScsiLun\"*\202\323\344\223\002\035\022\033/v1/{name=Virti"
  "oScsiLuns/*}\332A\004name\022\245\001\n\022StatsVirtioScsiL"
  "un\022-.opi_api.storage.v1.StatsVirtioScsiL"
  "unRequest\032..opi_api.storage.v1.StatsVirt"
  "ioScsiLunResponse\"0\202\323\344\223\002#\022!/v1/{name=Vir"
  "tioScsiLuns/*}:stats\332A\004nameBf\n\022opi_api.s"
  "torage.v1B\027FrontendVirtioScsiProtoP\001Z5gi"
  "thub.com/opiproject/opi-api/storage/v1al"
  "pha1/gen/gob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_frontend_5fvirtio_5fscsi_2eproto_deps[7] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_opicommon_2eproto,
};
static ::_pbi::once_flag descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_frontend_5fvirtio_5fscsi_2eproto = {
    false, false, 7419, descriptor_table_protodef_frontend_5fvirtio_5fscsi_2eproto,
    "frontend_virtio_scsi.proto",
    &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once, descriptor_table_frontend_5fvirtio_5fscsi_2eproto_deps, 7, 27,
    schemas, file_default_instances, TableStruct_frontend_5fvirtio_5fscsi_2eproto::offsets,
    file_level_metadata_frontend_5fvirtio_5fscsi_2eproto, file_level_enum_descriptors_frontend_5fvirtio_5fscsi_2eproto,
    file_level_service_descriptors_frontend_5fvirtio_5fscsi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter() {
  return &descriptor_table_frontend_5fvirtio_5fscsi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_frontend_5fvirtio_5fscsi_2eproto(&descriptor_table_frontend_5fvirtio_5fscsi_2eproto);
namespace opi_api {
namespace storage {
namespace v1 {

// ===================================================================

class VirtioScsiTarget::_Internal {
 public:
};

VirtioScsiTarget::VirtioScsiTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.VirtioScsiTarget)
}
VirtioScsiTarget::VirtioScsiTarget(const VirtioScsiTarget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VirtioScsiTarget* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.max_luns_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.max_luns_ = from._impl_.max_luns_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.VirtioScsiTarget)
}

inline void VirtioScsiTarget::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.max_luns_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VirtioScsiTarget::~VirtioScsiTarget() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.VirtioScsiTarget)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VirtioScsiTarget::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void VirtioScsiTarget::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VirtioScsiTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.VirtioScsiTarget)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.max_luns_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VirtioScsiTarget::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.VirtioScsiTarget.name"));
        } else
          goto handle_unusual;
        continue;
      // int32 max_luns = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.max_luns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VirtioScsiTarget::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.VirtioScsiTarget)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.VirtioScsiTarget.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 max_luns = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_max_luns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_max_luns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.VirtioScsiTarget)
  return target;
}

size_t VirtioScsiTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.VirtioScsiTarget)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 max_luns = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_max_luns() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_max_luns());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VirtioScsiTarget::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VirtioScsiTarget::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VirtioScsiTarget::GetClassData() const { return &_class_data_; }


void VirtioScsiTarget::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VirtioScsiTarget*>(&to_msg);
  auto& from = static_cast<const VirtioScsiTarget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.VirtioScsiTarget)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_max_luns() != 0) {
    _this->_internal_set_max_luns(from._internal_max_luns());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VirtioScsiTarget::CopyFrom(const VirtioScsiTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.VirtioScsiTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtioScsiTarget::IsInitialized() const {
  return true;
}

void VirtioScsiTarget::InternalSwap(VirtioScsiTarget* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.max_luns_, other->_impl_.max_luns_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VirtioScsiTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[0]);
}

// ===================================================================

class VirtioScsiController::_Internal {
 public:
  static const ::opi_api::storage::v1::PciEndpoint& pcie_id(const VirtioScsiController* msg);
  static const ::opi_api::storage::v1::QosLimit& min_limit(const VirtioScsiController* msg);
  static const ::opi_api::storage::v1::QosLimit& max_limit(const VirtioScsiController* msg);
};

const ::opi_api::storage::v1::PciEndpoint&
VirtioScsiController::_Internal::pcie_id(const VirtioScsiController* msg) {
  return *msg->_impl_.pcie_id_;
}
const ::opi_api::storage::v1::QosLimit&
VirtioScsiController::_Internal::min_limit(const VirtioScsiController* msg) {
  return *msg->_impl_.min_limit_;
}
const ::opi_api::storage::v1::QosLimit&
VirtioScsiController::_Internal::max_limit(const VirtioScsiController* msg) {
  return *msg->_impl_.max_limit_;
}
void VirtioScsiController::clear_pcie_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.pcie_id_ != nullptr) {
    delete _impl_.pcie_id_;
  }
  _impl_.pcie_id_ = nullptr;
}
void VirtioScsiController::clear_min_limit() {
  if (GetArenaForAllocation() == nullptr && _impl_.min_limit_ != nullptr) {
    delete _impl_.min_limit_;
  }
  _impl_.min_limit_ = nullptr;
}
void VirtioScsiController::clear_max_limit() {
  if (GetArenaForAllocation() == nullptr && _impl_.max_limit_ != nullptr) {
    delete _impl_.max_limit_;
  }
  _impl_.max_limit_ = nullptr;
}
VirtioScsiController::VirtioScsiController(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.VirtioScsiController)
}
VirtioScsiController::VirtioScsiController(const VirtioScsiController& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VirtioScsiController* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.pcie_id_){nullptr}
    , decltype(_impl_.min_limit_){nullptr}
    , decltype(_impl_.max_limit_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_pcie_id()) {
    _this->_impl_.pcie_id_ = new ::opi_api::storage::v1::PciEndpoint(*from._impl_.pcie_id_);
  }
  if (from._internal_has_min_limit()) {
    _this->_impl_.min_limit_ = new ::opi_api::storage::v1::QosLimit(*from._impl_.min_limit_);
  }
  if (from._internal_has_max_limit()) {
    _this->_impl_.max_limit_ = new ::opi_api::storage::v1::QosLimit(*from._impl_.max_limit_);
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.VirtioScsiController)
}

inline void VirtioScsiController::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.pcie_id_){nullptr}
    , decltype(_impl_.min_limit_){nullptr}
    , decltype(_impl_.max_limit_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VirtioScsiController::~VirtioScsiController() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.VirtioScsiController)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VirtioScsiController::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pcie_id_;
  if (this != internal_default_instance()) delete _impl_.min_limit_;
  if (this != internal_default_instance()) delete _impl_.max_limit_;
}

void VirtioScsiController::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VirtioScsiController::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.VirtioScsiController)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.pcie_id_ != nullptr) {
    delete _impl_.pcie_id_;
  }
  _impl_.pcie_id_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.min_limit_ != nullptr) {
    delete _impl_.min_limit_;
  }
  _impl_.min_limit_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.max_limit_ != nullptr) {
    delete _impl_.max_limit_;
  }
  _impl_.max_limit_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VirtioScsiController::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.VirtioScsiController.name"));
        } else
          goto handle_unusual;
        continue;
      // .opi_api.storage.v1.PciEndpoint pcie_id = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pcie_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.storage.v1.QosLimit min_limit = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_min_limit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.storage.v1.QosLimit max_limit = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_max_limit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VirtioScsiController::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.VirtioScsiController)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.VirtioScsiController.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .opi_api.storage.v1.PciEndpoint pcie_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_pcie_id()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pcie_id(this),
        _Internal::pcie_id(this).GetCachedSize(), target, stream);
  }

  // .opi_api.storage.v1.QosLimit min_limit = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_min_limit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::min_limit(this),
        _Internal::min_limit(this).GetCachedSize(), target, stream);
  }

  // .opi_api.storage.v1.QosLimit max_limit = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_max_limit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::max_limit(this),
        _Internal::max_limit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.VirtioScsiController)
  return target;
}

size_t VirtioScsiController::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.VirtioScsiController)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .opi_api.storage.v1.PciEndpoint pcie_id = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_pcie_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pcie_id_);
  }

  // .opi_api.storage.v1.QosLimit min_limit = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_min_limit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.min_limit_);
  }

  // .opi_api.storage.v1.QosLimit max_limit = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_max_limit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.max_limit_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VirtioScsiController::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VirtioScsiController::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VirtioScsiController::GetClassData() const { return &_class_data_; }


void VirtioScsiController::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VirtioScsiController*>(&to_msg);
  auto& from = static_cast<const VirtioScsiController&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.VirtioScsiController)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_pcie_id()) {
    _this->_internal_mutable_pcie_id()->::opi_api::storage::v1::PciEndpoint::MergeFrom(
        from._internal_pcie_id());
  }
  if (from._internal_has_min_limit()) {
    _this->_internal_mutable_min_limit()->::opi_api::storage::v1::QosLimit::MergeFrom(
        from._internal_min_limit());
  }
  if (from._internal_has_max_limit()) {
    _this->_internal_mutable_max_limit()->::opi_api::storage::v1::QosLimit::MergeFrom(
        from._internal_max_limit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VirtioScsiController::CopyFrom(const VirtioScsiController& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.VirtioScsiController)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtioScsiController::IsInitialized() const {
  return true;
}

void VirtioScsiController::InternalSwap(VirtioScsiController* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VirtioScsiController, _impl_.max_limit_)
      + sizeof(VirtioScsiController::_impl_.max_limit_)
      - PROTOBUF_FIELD_OFFSET(VirtioScsiController, _impl_.pcie_id_)>(
          reinterpret_cast<char*>(&_impl_.pcie_id_),
          reinterpret_cast<char*>(&other->_impl_.pcie_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VirtioScsiController::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[1]);
}

// ===================================================================

class VirtioScsiLun::_Internal {
 public:
};

VirtioScsiLun::VirtioScsiLun(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.VirtioScsiLun)
}
VirtioScsiLun::VirtioScsiLun(const VirtioScsiLun& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VirtioScsiLun* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.target_name_ref_){}
    , decltype(_impl_.volume_name_ref_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.target_name_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.target_name_ref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_target_name_ref().empty()) {
    _this->_impl_.target_name_ref_.Set(from._internal_target_name_ref(), 
      _this->GetArenaForAllocation());
  }
  _impl_.volume_name_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.volume_name_ref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_volume_name_ref().empty()) {
    _this->_impl_.volume_name_ref_.Set(from._internal_volume_name_ref(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.VirtioScsiLun)
}

inline void VirtioScsiLun::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.target_name_ref_){}
    , decltype(_impl_.volume_name_ref_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.target_name_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.target_name_ref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.volume_name_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.volume_name_ref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VirtioScsiLun::~VirtioScsiLun() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.VirtioScsiLun)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VirtioScsiLun::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.target_name_ref_.Destroy();
  _impl_.volume_name_ref_.Destroy();
}

void VirtioScsiLun::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VirtioScsiLun::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.VirtioScsiLun)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.target_name_ref_.ClearToEmpty();
  _impl_.volume_name_ref_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VirtioScsiLun::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.VirtioScsiLun.name"));
        } else
          goto handle_unusual;
        continue;
      // string target_name_ref = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_target_name_ref();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.VirtioScsiLun.target_name_ref"));
        } else
          goto handle_unusual;
        continue;
      // string volume_name_ref = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_volume_name_ref();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.VirtioScsiLun.volume_name_ref"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VirtioScsiLun::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.VirtioScsiLun)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.VirtioScsiLun.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string target_name_ref = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_target_name_ref().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_name_ref().data(), static_cast<int>(this->_internal_target_name_ref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.VirtioScsiLun.target_name_ref");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_target_name_ref(), target);
  }

  // string volume_name_ref = 3 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_volume_name_ref().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_volume_name_ref().data(), static_cast<int>(this->_internal_volume_name_ref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.VirtioScsiLun.volume_name_ref");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_volume_name_ref(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.VirtioScsiLun)
  return target;
}

size_t VirtioScsiLun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.VirtioScsiLun)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string target_name_ref = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_target_name_ref().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_name_ref());
  }

  // string volume_name_ref = 3 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_volume_name_ref().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_volume_name_ref());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VirtioScsiLun::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VirtioScsiLun::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VirtioScsiLun::GetClassData() const { return &_class_data_; }


void VirtioScsiLun::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VirtioScsiLun*>(&to_msg);
  auto& from = static_cast<const VirtioScsiLun&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.VirtioScsiLun)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_target_name_ref().empty()) {
    _this->_internal_set_target_name_ref(from._internal_target_name_ref());
  }
  if (!from._internal_volume_name_ref().empty()) {
    _this->_internal_set_volume_name_ref(from._internal_volume_name_ref());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VirtioScsiLun::CopyFrom(const VirtioScsiLun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.VirtioScsiLun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtioScsiLun::IsInitialized() const {
  return true;
}

void VirtioScsiLun::InternalSwap(VirtioScsiLun* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.target_name_ref_, lhs_arena,
      &other->_impl_.target_name_ref_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.volume_name_ref_, lhs_arena,
      &other->_impl_.volume_name_ref_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata VirtioScsiLun::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[2]);
}

// ===================================================================

class CreateVirtioScsiTargetRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::VirtioScsiTarget& virtio_scsi_target(const CreateVirtioScsiTargetRequest* msg);
};

const ::opi_api::storage::v1::VirtioScsiTarget&
CreateVirtioScsiTargetRequest::_Internal::virtio_scsi_target(const CreateVirtioScsiTargetRequest* msg) {
  return *msg->_impl_.virtio_scsi_target_;
}
CreateVirtioScsiTargetRequest::CreateVirtioScsiTargetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
}
CreateVirtioScsiTargetRequest::CreateVirtioScsiTargetRequest(const CreateVirtioScsiTargetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateVirtioScsiTargetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_target_id_){}
    , decltype(_impl_.virtio_scsi_target_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.virtio_scsi_target_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.virtio_scsi_target_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_virtio_scsi_target_id().empty()) {
    _this->_impl_.virtio_scsi_target_id_.Set(from._internal_virtio_scsi_target_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_virtio_scsi_target()) {
    _this->_impl_.virtio_scsi_target_ = new ::opi_api::storage::v1::VirtioScsiTarget(*from._impl_.virtio_scsi_target_);
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
}

inline void CreateVirtioScsiTargetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_target_id_){}
    , decltype(_impl_.virtio_scsi_target_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.virtio_scsi_target_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.virtio_scsi_target_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateVirtioScsiTargetRequest::~CreateVirtioScsiTargetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateVirtioScsiTargetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.virtio_scsi_target_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.virtio_scsi_target_;
}

void CreateVirtioScsiTargetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateVirtioScsiTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.virtio_scsi_target_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.virtio_scsi_target_ != nullptr) {
    delete _impl_.virtio_scsi_target_;
  }
  _impl_.virtio_scsi_target_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVirtioScsiTargetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_target = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtio_scsi_target(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string virtio_scsi_target_id = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_virtio_scsi_target_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.CreateVirtioScsiTargetRequest.virtio_scsi_target_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateVirtioScsiTargetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_target = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_target()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::virtio_scsi_target(this),
        _Internal::virtio_scsi_target(this).GetCachedSize(), target, stream);
  }

  // string virtio_scsi_target_id = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_virtio_scsi_target_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_virtio_scsi_target_id().data(), static_cast<int>(this->_internal_virtio_scsi_target_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.CreateVirtioScsiTargetRequest.virtio_scsi_target_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_virtio_scsi_target_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
  return target;
}

size_t CreateVirtioScsiTargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string virtio_scsi_target_id = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_virtio_scsi_target_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_virtio_scsi_target_id());
  }

  // .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_target = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.virtio_scsi_target_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateVirtioScsiTargetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateVirtioScsiTargetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateVirtioScsiTargetRequest::GetClassData() const { return &_class_data_; }


void CreateVirtioScsiTargetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateVirtioScsiTargetRequest*>(&to_msg);
  auto& from = static_cast<const CreateVirtioScsiTargetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_virtio_scsi_target_id().empty()) {
    _this->_internal_set_virtio_scsi_target_id(from._internal_virtio_scsi_target_id());
  }
  if (from._internal_has_virtio_scsi_target()) {
    _this->_internal_mutable_virtio_scsi_target()->::opi_api::storage::v1::VirtioScsiTarget::MergeFrom(
        from._internal_virtio_scsi_target());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVirtioScsiTargetRequest::CopyFrom(const CreateVirtioScsiTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.CreateVirtioScsiTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVirtioScsiTargetRequest::IsInitialized() const {
  return true;
}

void CreateVirtioScsiTargetRequest::InternalSwap(CreateVirtioScsiTargetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.virtio_scsi_target_id_, lhs_arena,
      &other->_impl_.virtio_scsi_target_id_, rhs_arena
  );
  swap(_impl_.virtio_scsi_target_, other->_impl_.virtio_scsi_target_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVirtioScsiTargetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[3]);
}

// ===================================================================

class DeleteVirtioScsiTargetRequest::_Internal {
 public:
};

DeleteVirtioScsiTargetRequest::DeleteVirtioScsiTargetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
}
DeleteVirtioScsiTargetRequest::DeleteVirtioScsiTargetRequest(const DeleteVirtioScsiTargetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteVirtioScsiTargetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allow_missing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.allow_missing_ = from._impl_.allow_missing_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
}

inline void DeleteVirtioScsiTargetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allow_missing_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteVirtioScsiTargetRequest::~DeleteVirtioScsiTargetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteVirtioScsiTargetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeleteVirtioScsiTargetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteVirtioScsiTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.allow_missing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVirtioScsiTargetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.DeleteVirtioScsiTargetRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.allow_missing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteVirtioScsiTargetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.DeleteVirtioScsiTargetRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_allow_missing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
  return target;
}

size_t DeleteVirtioScsiTargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteVirtioScsiTargetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteVirtioScsiTargetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteVirtioScsiTargetRequest::GetClassData() const { return &_class_data_; }


void DeleteVirtioScsiTargetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteVirtioScsiTargetRequest*>(&to_msg);
  auto& from = static_cast<const DeleteVirtioScsiTargetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_allow_missing() != 0) {
    _this->_internal_set_allow_missing(from._internal_allow_missing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVirtioScsiTargetRequest::CopyFrom(const DeleteVirtioScsiTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.DeleteVirtioScsiTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVirtioScsiTargetRequest::IsInitialized() const {
  return true;
}

void DeleteVirtioScsiTargetRequest::InternalSwap(DeleteVirtioScsiTargetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.allow_missing_, other->_impl_.allow_missing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVirtioScsiTargetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[4]);
}

// ===================================================================

class UpdateVirtioScsiTargetRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::VirtioScsiTarget& virtio_scsi_target(const UpdateVirtioScsiTargetRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateVirtioScsiTargetRequest* msg);
};

const ::opi_api::storage::v1::VirtioScsiTarget&
UpdateVirtioScsiTargetRequest::_Internal::virtio_scsi_target(const UpdateVirtioScsiTargetRequest* msg) {
  return *msg->_impl_.virtio_scsi_target_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateVirtioScsiTargetRequest::_Internal::update_mask(const UpdateVirtioScsiTargetRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateVirtioScsiTargetRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
}
UpdateVirtioScsiTargetRequest::UpdateVirtioScsiTargetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
}
UpdateVirtioScsiTargetRequest::UpdateVirtioScsiTargetRequest(const UpdateVirtioScsiTargetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateVirtioScsiTargetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_target_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , decltype(_impl_.allow_missing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_virtio_scsi_target()) {
    _this->_impl_.virtio_scsi_target_ = new ::opi_api::storage::v1::VirtioScsiTarget(*from._impl_.virtio_scsi_target_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  _this->_impl_.allow_missing_ = from._impl_.allow_missing_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
}

inline void UpdateVirtioScsiTargetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_target_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , decltype(_impl_.allow_missing_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateVirtioScsiTargetRequest::~UpdateVirtioScsiTargetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateVirtioScsiTargetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.virtio_scsi_target_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void UpdateVirtioScsiTargetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateVirtioScsiTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.virtio_scsi_target_ != nullptr) {
    delete _impl_.virtio_scsi_target_;
  }
  _impl_.virtio_scsi_target_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
  _impl_.allow_missing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVirtioScsiTargetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_target = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtio_scsi_target(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.allow_missing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateVirtioScsiTargetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_target = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_target()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::virtio_scsi_target(this),
        _Internal::virtio_scsi_target(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_update_mask()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_allow_missing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
  return target;
}

size_t UpdateVirtioScsiTargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_target = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.virtio_scsi_target_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_mask_);
  }

  // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateVirtioScsiTargetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateVirtioScsiTargetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateVirtioScsiTargetRequest::GetClassData() const { return &_class_data_; }


void UpdateVirtioScsiTargetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateVirtioScsiTargetRequest*>(&to_msg);
  auto& from = static_cast<const UpdateVirtioScsiTargetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_virtio_scsi_target()) {
    _this->_internal_mutable_virtio_scsi_target()->::opi_api::storage::v1::VirtioScsiTarget::MergeFrom(
        from._internal_virtio_scsi_target());
  }
  if (from._internal_has_update_mask()) {
    _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
        from._internal_update_mask());
  }
  if (from._internal_allow_missing() != 0) {
    _this->_internal_set_allow_missing(from._internal_allow_missing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateVirtioScsiTargetRequest::CopyFrom(const UpdateVirtioScsiTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.UpdateVirtioScsiTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVirtioScsiTargetRequest::IsInitialized() const {
  return true;
}

void UpdateVirtioScsiTargetRequest::InternalSwap(UpdateVirtioScsiTargetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateVirtioScsiTargetRequest, _impl_.allow_missing_)
      + sizeof(UpdateVirtioScsiTargetRequest::_impl_.allow_missing_)
      - PROTOBUF_FIELD_OFFSET(UpdateVirtioScsiTargetRequest, _impl_.virtio_scsi_target_)>(
          reinterpret_cast<char*>(&_impl_.virtio_scsi_target_),
          reinterpret_cast<char*>(&other->_impl_.virtio_scsi_target_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVirtioScsiTargetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[5]);
}

// ===================================================================

class ListVirtioScsiTargetsRequest::_Internal {
 public:
};

ListVirtioScsiTargetsRequest::ListVirtioScsiTargetsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
}
ListVirtioScsiTargetsRequest::ListVirtioScsiTargetsRequest(const ListVirtioScsiTargetsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListVirtioScsiTargetsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
}

inline void ListVirtioScsiTargetsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVirtioScsiTargetsRequest::~ListVirtioScsiTargetsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListVirtioScsiTargetsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
}

void ListVirtioScsiTargetsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListVirtioScsiTargetsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVirtioScsiTargetsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiTargetsRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiTargetsRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVirtioScsiTargetsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiTargetsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiTargetsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
  return target;
}

size_t ListVirtioScsiTargetsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVirtioScsiTargetsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListVirtioScsiTargetsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVirtioScsiTargetsRequest::GetClassData() const { return &_class_data_; }


void ListVirtioScsiTargetsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListVirtioScsiTargetsRequest*>(&to_msg);
  auto& from = static_cast<const ListVirtioScsiTargetsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVirtioScsiTargetsRequest::CopyFrom(const ListVirtioScsiTargetsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListVirtioScsiTargetsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVirtioScsiTargetsRequest::IsInitialized() const {
  return true;
}

void ListVirtioScsiTargetsRequest::InternalSwap(ListVirtioScsiTargetsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVirtioScsiTargetsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[6]);
}

// ===================================================================

class ListVirtioScsiTargetsResponse::_Internal {
 public:
};

ListVirtioScsiTargetsResponse::ListVirtioScsiTargetsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
}
ListVirtioScsiTargetsResponse::ListVirtioScsiTargetsResponse(const ListVirtioScsiTargetsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListVirtioScsiTargetsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_targets_){from._impl_.virtio_scsi_targets_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
}

inline void ListVirtioScsiTargetsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_targets_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVirtioScsiTargetsResponse::~ListVirtioScsiTargetsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListVirtioScsiTargetsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.virtio_scsi_targets_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListVirtioScsiTargetsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListVirtioScsiTargetsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.virtio_scsi_targets_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVirtioScsiTargetsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_targets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_virtio_scsi_targets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiTargetsResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVirtioScsiTargetsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_targets = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_virtio_scsi_targets_size()); i < n; i++) {
    const auto& repfield = this->_internal_virtio_scsi_targets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiTargetsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
  return target;
}

size_t ListVirtioScsiTargetsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.VirtioScsiTarget virtio_scsi_targets = 1;
  total_size += 1UL * this->_internal_virtio_scsi_targets_size();
  for (const auto& msg : this->_impl_.virtio_scsi_targets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVirtioScsiTargetsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListVirtioScsiTargetsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVirtioScsiTargetsResponse::GetClassData() const { return &_class_data_; }


void ListVirtioScsiTargetsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListVirtioScsiTargetsResponse*>(&to_msg);
  auto& from = static_cast<const ListVirtioScsiTargetsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.virtio_scsi_targets_.MergeFrom(from._impl_.virtio_scsi_targets_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVirtioScsiTargetsResponse::CopyFrom(const ListVirtioScsiTargetsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListVirtioScsiTargetsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVirtioScsiTargetsResponse::IsInitialized() const {
  return true;
}

void ListVirtioScsiTargetsResponse::InternalSwap(ListVirtioScsiTargetsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.virtio_scsi_targets_.InternalSwap(&other->_impl_.virtio_scsi_targets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVirtioScsiTargetsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[7]);
}

// ===================================================================

class GetVirtioScsiTargetRequest::_Internal {
 public:
};

GetVirtioScsiTargetRequest::GetVirtioScsiTargetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.GetVirtioScsiTargetRequest)
}
GetVirtioScsiTargetRequest::GetVirtioScsiTargetRequest(const GetVirtioScsiTargetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVirtioScsiTargetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.GetVirtioScsiTargetRequest)
}

inline void GetVirtioScsiTargetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVirtioScsiTargetRequest::~GetVirtioScsiTargetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.GetVirtioScsiTargetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVirtioScsiTargetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetVirtioScsiTargetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVirtioScsiTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.GetVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtioScsiTargetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.GetVirtioScsiTargetRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtioScsiTargetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.GetVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.GetVirtioScsiTargetRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.GetVirtioScsiTargetRequest)
  return target;
}

size_t GetVirtioScsiTargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.GetVirtioScsiTargetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtioScsiTargetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVirtioScsiTargetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtioScsiTargetRequest::GetClassData() const { return &_class_data_; }


void GetVirtioScsiTargetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVirtioScsiTargetRequest*>(&to_msg);
  auto& from = static_cast<const GetVirtioScsiTargetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.GetVirtioScsiTargetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtioScsiTargetRequest::CopyFrom(const GetVirtioScsiTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.GetVirtioScsiTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtioScsiTargetRequest::IsInitialized() const {
  return true;
}

void GetVirtioScsiTargetRequest::InternalSwap(GetVirtioScsiTargetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtioScsiTargetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[8]);
}

// ===================================================================

class StatsVirtioScsiTargetRequest::_Internal {
 public:
};

StatsVirtioScsiTargetRequest::StatsVirtioScsiTargetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
}
StatsVirtioScsiTargetRequest::StatsVirtioScsiTargetRequest(const StatsVirtioScsiTargetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatsVirtioScsiTargetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
}

inline void StatsVirtioScsiTargetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StatsVirtioScsiTargetRequest::~StatsVirtioScsiTargetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatsVirtioScsiTargetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void StatsVirtioScsiTargetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatsVirtioScsiTargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsVirtioScsiTargetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.StatsVirtioScsiTargetRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatsVirtioScsiTargetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.StatsVirtioScsiTargetRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
  return target;
}

size_t StatsVirtioScsiTargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatsVirtioScsiTargetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatsVirtioScsiTargetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatsVirtioScsiTargetRequest::GetClassData() const { return &_class_data_; }


void StatsVirtioScsiTargetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatsVirtioScsiTargetRequest*>(&to_msg);
  auto& from = static_cast<const StatsVirtioScsiTargetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatsVirtioScsiTargetRequest::CopyFrom(const StatsVirtioScsiTargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.StatsVirtioScsiTargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsVirtioScsiTargetRequest::IsInitialized() const {
  return true;
}

void StatsVirtioScsiTargetRequest::InternalSwap(StatsVirtioScsiTargetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsVirtioScsiTargetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[9]);
}

// ===================================================================

class StatsVirtioScsiTargetResponse::_Internal {
 public:
  static const ::opi_api::storage::v1::VolumeStats& stats(const StatsVirtioScsiTargetResponse* msg);
};

const ::opi_api::storage::v1::VolumeStats&
StatsVirtioScsiTargetResponse::_Internal::stats(const StatsVirtioScsiTargetResponse* msg) {
  return *msg->_impl_.stats_;
}
void StatsVirtioScsiTargetResponse::clear_stats() {
  if (GetArenaForAllocation() == nullptr && _impl_.stats_ != nullptr) {
    delete _impl_.stats_;
  }
  _impl_.stats_ = nullptr;
}
StatsVirtioScsiTargetResponse::StatsVirtioScsiTargetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
}
StatsVirtioScsiTargetResponse::StatsVirtioScsiTargetResponse(const StatsVirtioScsiTargetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatsVirtioScsiTargetResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stats_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stats()) {
    _this->_impl_.stats_ = new ::opi_api::storage::v1::VolumeStats(*from._impl_.stats_);
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
}

inline void StatsVirtioScsiTargetResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stats_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StatsVirtioScsiTargetResponse::~StatsVirtioScsiTargetResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatsVirtioScsiTargetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stats_;
}

void StatsVirtioScsiTargetResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatsVirtioScsiTargetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.stats_ != nullptr) {
    delete _impl_.stats_;
  }
  _impl_.stats_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsVirtioScsiTargetResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VolumeStats stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stats(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatsVirtioScsiTargetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VolumeStats stats = 1;
  if (this->_internal_has_stats()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::stats(this),
        _Internal::stats(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
  return target;
}

size_t StatsVirtioScsiTargetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.VolumeStats stats = 1;
  if (this->_internal_has_stats()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stats_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatsVirtioScsiTargetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatsVirtioScsiTargetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatsVirtioScsiTargetResponse::GetClassData() const { return &_class_data_; }


void StatsVirtioScsiTargetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatsVirtioScsiTargetResponse*>(&to_msg);
  auto& from = static_cast<const StatsVirtioScsiTargetResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_stats()) {
    _this->_internal_mutable_stats()->::opi_api::storage::v1::VolumeStats::MergeFrom(
        from._internal_stats());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatsVirtioScsiTargetResponse::CopyFrom(const StatsVirtioScsiTargetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.StatsVirtioScsiTargetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsVirtioScsiTargetResponse::IsInitialized() const {
  return true;
}

void StatsVirtioScsiTargetResponse::InternalSwap(StatsVirtioScsiTargetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stats_, other->_impl_.stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsVirtioScsiTargetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[10]);
}

// ===================================================================

class CreateVirtioScsiControllerRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::VirtioScsiController& virtio_scsi_controller(const CreateVirtioScsiControllerRequest* msg);
};

const ::opi_api::storage::v1::VirtioScsiController&
CreateVirtioScsiControllerRequest::_Internal::virtio_scsi_controller(const CreateVirtioScsiControllerRequest* msg) {
  return *msg->_impl_.virtio_scsi_controller_;
}
CreateVirtioScsiControllerRequest::CreateVirtioScsiControllerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
}
CreateVirtioScsiControllerRequest::CreateVirtioScsiControllerRequest(const CreateVirtioScsiControllerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateVirtioScsiControllerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_controller_id_){}
    , decltype(_impl_.virtio_scsi_controller_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.virtio_scsi_controller_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.virtio_scsi_controller_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_virtio_scsi_controller_id().empty()) {
    _this->_impl_.virtio_scsi_controller_id_.Set(from._internal_virtio_scsi_controller_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_virtio_scsi_controller()) {
    _this->_impl_.virtio_scsi_controller_ = new ::opi_api::storage::v1::VirtioScsiController(*from._impl_.virtio_scsi_controller_);
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
}

inline void CreateVirtioScsiControllerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_controller_id_){}
    , decltype(_impl_.virtio_scsi_controller_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.virtio_scsi_controller_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.virtio_scsi_controller_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateVirtioScsiControllerRequest::~CreateVirtioScsiControllerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateVirtioScsiControllerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.virtio_scsi_controller_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.virtio_scsi_controller_;
}

void CreateVirtioScsiControllerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateVirtioScsiControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.virtio_scsi_controller_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.virtio_scsi_controller_ != nullptr) {
    delete _impl_.virtio_scsi_controller_;
  }
  _impl_.virtio_scsi_controller_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVirtioScsiControllerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VirtioScsiController virtio_scsi_controller = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtio_scsi_controller(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string virtio_scsi_controller_id = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_virtio_scsi_controller_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.CreateVirtioScsiControllerRequest.virtio_scsi_controller_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateVirtioScsiControllerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiController virtio_scsi_controller = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_controller()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::virtio_scsi_controller(this),
        _Internal::virtio_scsi_controller(this).GetCachedSize(), target, stream);
  }

  // string virtio_scsi_controller_id = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_virtio_scsi_controller_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_virtio_scsi_controller_id().data(), static_cast<int>(this->_internal_virtio_scsi_controller_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.CreateVirtioScsiControllerRequest.virtio_scsi_controller_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_virtio_scsi_controller_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
  return target;
}

size_t CreateVirtioScsiControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string virtio_scsi_controller_id = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_virtio_scsi_controller_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_virtio_scsi_controller_id());
  }

  // .opi_api.storage.v1.VirtioScsiController virtio_scsi_controller = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.virtio_scsi_controller_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateVirtioScsiControllerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateVirtioScsiControllerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateVirtioScsiControllerRequest::GetClassData() const { return &_class_data_; }


void CreateVirtioScsiControllerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateVirtioScsiControllerRequest*>(&to_msg);
  auto& from = static_cast<const CreateVirtioScsiControllerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_virtio_scsi_controller_id().empty()) {
    _this->_internal_set_virtio_scsi_controller_id(from._internal_virtio_scsi_controller_id());
  }
  if (from._internal_has_virtio_scsi_controller()) {
    _this->_internal_mutable_virtio_scsi_controller()->::opi_api::storage::v1::VirtioScsiController::MergeFrom(
        from._internal_virtio_scsi_controller());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVirtioScsiControllerRequest::CopyFrom(const CreateVirtioScsiControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.CreateVirtioScsiControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVirtioScsiControllerRequest::IsInitialized() const {
  return true;
}

void CreateVirtioScsiControllerRequest::InternalSwap(CreateVirtioScsiControllerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.virtio_scsi_controller_id_, lhs_arena,
      &other->_impl_.virtio_scsi_controller_id_, rhs_arena
  );
  swap(_impl_.virtio_scsi_controller_, other->_impl_.virtio_scsi_controller_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVirtioScsiControllerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[11]);
}

// ===================================================================

class DeleteVirtioScsiControllerRequest::_Internal {
 public:
};

DeleteVirtioScsiControllerRequest::DeleteVirtioScsiControllerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
}
DeleteVirtioScsiControllerRequest::DeleteVirtioScsiControllerRequest(const DeleteVirtioScsiControllerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteVirtioScsiControllerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allow_missing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.allow_missing_ = from._impl_.allow_missing_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
}

inline void DeleteVirtioScsiControllerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allow_missing_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteVirtioScsiControllerRequest::~DeleteVirtioScsiControllerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteVirtioScsiControllerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeleteVirtioScsiControllerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteVirtioScsiControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.allow_missing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVirtioScsiControllerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.DeleteVirtioScsiControllerRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.allow_missing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteVirtioScsiControllerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.DeleteVirtioScsiControllerRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_allow_missing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
  return target;
}

size_t DeleteVirtioScsiControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteVirtioScsiControllerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteVirtioScsiControllerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteVirtioScsiControllerRequest::GetClassData() const { return &_class_data_; }


void DeleteVirtioScsiControllerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteVirtioScsiControllerRequest*>(&to_msg);
  auto& from = static_cast<const DeleteVirtioScsiControllerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_allow_missing() != 0) {
    _this->_internal_set_allow_missing(from._internal_allow_missing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVirtioScsiControllerRequest::CopyFrom(const DeleteVirtioScsiControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.DeleteVirtioScsiControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVirtioScsiControllerRequest::IsInitialized() const {
  return true;
}

void DeleteVirtioScsiControllerRequest::InternalSwap(DeleteVirtioScsiControllerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.allow_missing_, other->_impl_.allow_missing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVirtioScsiControllerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[12]);
}

// ===================================================================

class UpdateVirtioScsiControllerRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::VirtioScsiController& virtio_scsi_controller(const UpdateVirtioScsiControllerRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateVirtioScsiControllerRequest* msg);
};

const ::opi_api::storage::v1::VirtioScsiController&
UpdateVirtioScsiControllerRequest::_Internal::virtio_scsi_controller(const UpdateVirtioScsiControllerRequest* msg) {
  return *msg->_impl_.virtio_scsi_controller_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateVirtioScsiControllerRequest::_Internal::update_mask(const UpdateVirtioScsiControllerRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateVirtioScsiControllerRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
}
UpdateVirtioScsiControllerRequest::UpdateVirtioScsiControllerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
}
UpdateVirtioScsiControllerRequest::UpdateVirtioScsiControllerRequest(const UpdateVirtioScsiControllerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateVirtioScsiControllerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_controller_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , decltype(_impl_.allow_missing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_virtio_scsi_controller()) {
    _this->_impl_.virtio_scsi_controller_ = new ::opi_api::storage::v1::VirtioScsiController(*from._impl_.virtio_scsi_controller_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  _this->_impl_.allow_missing_ = from._impl_.allow_missing_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
}

inline void UpdateVirtioScsiControllerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_controller_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , decltype(_impl_.allow_missing_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateVirtioScsiControllerRequest::~UpdateVirtioScsiControllerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateVirtioScsiControllerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.virtio_scsi_controller_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void UpdateVirtioScsiControllerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateVirtioScsiControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.virtio_scsi_controller_ != nullptr) {
    delete _impl_.virtio_scsi_controller_;
  }
  _impl_.virtio_scsi_controller_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
  _impl_.allow_missing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVirtioScsiControllerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VirtioScsiController virtio_scsi_controller = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtio_scsi_controller(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.allow_missing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateVirtioScsiControllerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiController virtio_scsi_controller = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_controller()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::virtio_scsi_controller(this),
        _Internal::virtio_scsi_controller(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_update_mask()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_allow_missing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
  return target;
}

size_t UpdateVirtioScsiControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiController virtio_scsi_controller = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.virtio_scsi_controller_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_mask_);
  }

  // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateVirtioScsiControllerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateVirtioScsiControllerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateVirtioScsiControllerRequest::GetClassData() const { return &_class_data_; }


void UpdateVirtioScsiControllerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateVirtioScsiControllerRequest*>(&to_msg);
  auto& from = static_cast<const UpdateVirtioScsiControllerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_virtio_scsi_controller()) {
    _this->_internal_mutable_virtio_scsi_controller()->::opi_api::storage::v1::VirtioScsiController::MergeFrom(
        from._internal_virtio_scsi_controller());
  }
  if (from._internal_has_update_mask()) {
    _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
        from._internal_update_mask());
  }
  if (from._internal_allow_missing() != 0) {
    _this->_internal_set_allow_missing(from._internal_allow_missing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateVirtioScsiControllerRequest::CopyFrom(const UpdateVirtioScsiControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.UpdateVirtioScsiControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVirtioScsiControllerRequest::IsInitialized() const {
  return true;
}

void UpdateVirtioScsiControllerRequest::InternalSwap(UpdateVirtioScsiControllerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateVirtioScsiControllerRequest, _impl_.allow_missing_)
      + sizeof(UpdateVirtioScsiControllerRequest::_impl_.allow_missing_)
      - PROTOBUF_FIELD_OFFSET(UpdateVirtioScsiControllerRequest, _impl_.virtio_scsi_controller_)>(
          reinterpret_cast<char*>(&_impl_.virtio_scsi_controller_),
          reinterpret_cast<char*>(&other->_impl_.virtio_scsi_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVirtioScsiControllerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[13]);
}

// ===================================================================

class ListVirtioScsiControllersRequest::_Internal {
 public:
};

ListVirtioScsiControllersRequest::ListVirtioScsiControllersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListVirtioScsiControllersRequest)
}
ListVirtioScsiControllersRequest::ListVirtioScsiControllersRequest(const ListVirtioScsiControllersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListVirtioScsiControllersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListVirtioScsiControllersRequest)
}

inline void ListVirtioScsiControllersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVirtioScsiControllersRequest::~ListVirtioScsiControllersRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListVirtioScsiControllersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListVirtioScsiControllersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
}

void ListVirtioScsiControllersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListVirtioScsiControllersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListVirtioScsiControllersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVirtioScsiControllersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiControllersRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiControllersRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVirtioScsiControllersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListVirtioScsiControllersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiControllersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiControllersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListVirtioScsiControllersRequest)
  return target;
}

size_t ListVirtioScsiControllersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListVirtioScsiControllersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVirtioScsiControllersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListVirtioScsiControllersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVirtioScsiControllersRequest::GetClassData() const { return &_class_data_; }


void ListVirtioScsiControllersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListVirtioScsiControllersRequest*>(&to_msg);
  auto& from = static_cast<const ListVirtioScsiControllersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListVirtioScsiControllersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVirtioScsiControllersRequest::CopyFrom(const ListVirtioScsiControllersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListVirtioScsiControllersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVirtioScsiControllersRequest::IsInitialized() const {
  return true;
}

void ListVirtioScsiControllersRequest::InternalSwap(ListVirtioScsiControllersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVirtioScsiControllersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[14]);
}

// ===================================================================

class ListVirtioScsiControllersResponse::_Internal {
 public:
};

ListVirtioScsiControllersResponse::ListVirtioScsiControllersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListVirtioScsiControllersResponse)
}
ListVirtioScsiControllersResponse::ListVirtioScsiControllersResponse(const ListVirtioScsiControllersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListVirtioScsiControllersResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_controllers_){from._impl_.virtio_scsi_controllers_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListVirtioScsiControllersResponse)
}

inline void ListVirtioScsiControllersResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_controllers_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVirtioScsiControllersResponse::~ListVirtioScsiControllersResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListVirtioScsiControllersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListVirtioScsiControllersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.virtio_scsi_controllers_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListVirtioScsiControllersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListVirtioScsiControllersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListVirtioScsiControllersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.virtio_scsi_controllers_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVirtioScsiControllersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.storage.v1.VirtioScsiController virtio_scsi_controllers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_virtio_scsi_controllers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiControllersResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVirtioScsiControllersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListVirtioScsiControllersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.VirtioScsiController virtio_scsi_controllers = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_virtio_scsi_controllers_size()); i < n; i++) {
    const auto& repfield = this->_internal_virtio_scsi_controllers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiControllersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListVirtioScsiControllersResponse)
  return target;
}

size_t ListVirtioScsiControllersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListVirtioScsiControllersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.VirtioScsiController virtio_scsi_controllers = 1;
  total_size += 1UL * this->_internal_virtio_scsi_controllers_size();
  for (const auto& msg : this->_impl_.virtio_scsi_controllers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVirtioScsiControllersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListVirtioScsiControllersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVirtioScsiControllersResponse::GetClassData() const { return &_class_data_; }


void ListVirtioScsiControllersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListVirtioScsiControllersResponse*>(&to_msg);
  auto& from = static_cast<const ListVirtioScsiControllersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListVirtioScsiControllersResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.virtio_scsi_controllers_.MergeFrom(from._impl_.virtio_scsi_controllers_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVirtioScsiControllersResponse::CopyFrom(const ListVirtioScsiControllersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListVirtioScsiControllersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVirtioScsiControllersResponse::IsInitialized() const {
  return true;
}

void ListVirtioScsiControllersResponse::InternalSwap(ListVirtioScsiControllersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.virtio_scsi_controllers_.InternalSwap(&other->_impl_.virtio_scsi_controllers_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVirtioScsiControllersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[15]);
}

// ===================================================================

class GetVirtioScsiControllerRequest::_Internal {
 public:
};

GetVirtioScsiControllerRequest::GetVirtioScsiControllerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.GetVirtioScsiControllerRequest)
}
GetVirtioScsiControllerRequest::GetVirtioScsiControllerRequest(const GetVirtioScsiControllerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVirtioScsiControllerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.GetVirtioScsiControllerRequest)
}

inline void GetVirtioScsiControllerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVirtioScsiControllerRequest::~GetVirtioScsiControllerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.GetVirtioScsiControllerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVirtioScsiControllerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetVirtioScsiControllerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVirtioScsiControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.GetVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtioScsiControllerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.GetVirtioScsiControllerRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtioScsiControllerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.GetVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.GetVirtioScsiControllerRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.GetVirtioScsiControllerRequest)
  return target;
}

size_t GetVirtioScsiControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.GetVirtioScsiControllerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtioScsiControllerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVirtioScsiControllerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtioScsiControllerRequest::GetClassData() const { return &_class_data_; }


void GetVirtioScsiControllerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVirtioScsiControllerRequest*>(&to_msg);
  auto& from = static_cast<const GetVirtioScsiControllerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.GetVirtioScsiControllerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtioScsiControllerRequest::CopyFrom(const GetVirtioScsiControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.GetVirtioScsiControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtioScsiControllerRequest::IsInitialized() const {
  return true;
}

void GetVirtioScsiControllerRequest::InternalSwap(GetVirtioScsiControllerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtioScsiControllerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[16]);
}

// ===================================================================

class StatsVirtioScsiControllerRequest::_Internal {
 public:
};

StatsVirtioScsiControllerRequest::StatsVirtioScsiControllerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
}
StatsVirtioScsiControllerRequest::StatsVirtioScsiControllerRequest(const StatsVirtioScsiControllerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatsVirtioScsiControllerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
}

inline void StatsVirtioScsiControllerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StatsVirtioScsiControllerRequest::~StatsVirtioScsiControllerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatsVirtioScsiControllerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void StatsVirtioScsiControllerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatsVirtioScsiControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsVirtioScsiControllerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.StatsVirtioScsiControllerRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatsVirtioScsiControllerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.StatsVirtioScsiControllerRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
  return target;
}

size_t StatsVirtioScsiControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatsVirtioScsiControllerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatsVirtioScsiControllerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatsVirtioScsiControllerRequest::GetClassData() const { return &_class_data_; }


void StatsVirtioScsiControllerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatsVirtioScsiControllerRequest*>(&to_msg);
  auto& from = static_cast<const StatsVirtioScsiControllerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatsVirtioScsiControllerRequest::CopyFrom(const StatsVirtioScsiControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.StatsVirtioScsiControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsVirtioScsiControllerRequest::IsInitialized() const {
  return true;
}

void StatsVirtioScsiControllerRequest::InternalSwap(StatsVirtioScsiControllerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsVirtioScsiControllerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[17]);
}

// ===================================================================

class StatsVirtioScsiControllerResponse::_Internal {
 public:
  static const ::opi_api::storage::v1::VolumeStats& stats(const StatsVirtioScsiControllerResponse* msg);
};

const ::opi_api::storage::v1::VolumeStats&
StatsVirtioScsiControllerResponse::_Internal::stats(const StatsVirtioScsiControllerResponse* msg) {
  return *msg->_impl_.stats_;
}
void StatsVirtioScsiControllerResponse::clear_stats() {
  if (GetArenaForAllocation() == nullptr && _impl_.stats_ != nullptr) {
    delete _impl_.stats_;
  }
  _impl_.stats_ = nullptr;
}
StatsVirtioScsiControllerResponse::StatsVirtioScsiControllerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
}
StatsVirtioScsiControllerResponse::StatsVirtioScsiControllerResponse(const StatsVirtioScsiControllerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatsVirtioScsiControllerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stats_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stats()) {
    _this->_impl_.stats_ = new ::opi_api::storage::v1::VolumeStats(*from._impl_.stats_);
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
}

inline void StatsVirtioScsiControllerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stats_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StatsVirtioScsiControllerResponse::~StatsVirtioScsiControllerResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatsVirtioScsiControllerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stats_;
}

void StatsVirtioScsiControllerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatsVirtioScsiControllerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.stats_ != nullptr) {
    delete _impl_.stats_;
  }
  _impl_.stats_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsVirtioScsiControllerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VolumeStats stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stats(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatsVirtioScsiControllerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VolumeStats stats = 1;
  if (this->_internal_has_stats()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::stats(this),
        _Internal::stats(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
  return target;
}

size_t StatsVirtioScsiControllerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.VolumeStats stats = 1;
  if (this->_internal_has_stats()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stats_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatsVirtioScsiControllerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatsVirtioScsiControllerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatsVirtioScsiControllerResponse::GetClassData() const { return &_class_data_; }


void StatsVirtioScsiControllerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatsVirtioScsiControllerResponse*>(&to_msg);
  auto& from = static_cast<const StatsVirtioScsiControllerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_stats()) {
    _this->_internal_mutable_stats()->::opi_api::storage::v1::VolumeStats::MergeFrom(
        from._internal_stats());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatsVirtioScsiControllerResponse::CopyFrom(const StatsVirtioScsiControllerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.StatsVirtioScsiControllerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsVirtioScsiControllerResponse::IsInitialized() const {
  return true;
}

void StatsVirtioScsiControllerResponse::InternalSwap(StatsVirtioScsiControllerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stats_, other->_impl_.stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsVirtioScsiControllerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[18]);
}

// ===================================================================

class CreateVirtioScsiLunRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::VirtioScsiLun& virtio_scsi_lun(const CreateVirtioScsiLunRequest* msg);
};

const ::opi_api::storage::v1::VirtioScsiLun&
CreateVirtioScsiLunRequest::_Internal::virtio_scsi_lun(const CreateVirtioScsiLunRequest* msg) {
  return *msg->_impl_.virtio_scsi_lun_;
}
CreateVirtioScsiLunRequest::CreateVirtioScsiLunRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.CreateVirtioScsiLunRequest)
}
CreateVirtioScsiLunRequest::CreateVirtioScsiLunRequest(const CreateVirtioScsiLunRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateVirtioScsiLunRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_lun_id_){}
    , decltype(_impl_.virtio_scsi_lun_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.virtio_scsi_lun_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.virtio_scsi_lun_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_virtio_scsi_lun_id().empty()) {
    _this->_impl_.virtio_scsi_lun_id_.Set(from._internal_virtio_scsi_lun_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_virtio_scsi_lun()) {
    _this->_impl_.virtio_scsi_lun_ = new ::opi_api::storage::v1::VirtioScsiLun(*from._impl_.virtio_scsi_lun_);
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.CreateVirtioScsiLunRequest)
}

inline void CreateVirtioScsiLunRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_lun_id_){}
    , decltype(_impl_.virtio_scsi_lun_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.virtio_scsi_lun_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.virtio_scsi_lun_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateVirtioScsiLunRequest::~CreateVirtioScsiLunRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.CreateVirtioScsiLunRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateVirtioScsiLunRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.virtio_scsi_lun_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.virtio_scsi_lun_;
}

void CreateVirtioScsiLunRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateVirtioScsiLunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.CreateVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.virtio_scsi_lun_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.virtio_scsi_lun_ != nullptr) {
    delete _impl_.virtio_scsi_lun_;
  }
  _impl_.virtio_scsi_lun_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVirtioScsiLunRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VirtioScsiLun virtio_scsi_lun = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtio_scsi_lun(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string virtio_scsi_lun_id = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_virtio_scsi_lun_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.CreateVirtioScsiLunRequest.virtio_scsi_lun_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateVirtioScsiLunRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.CreateVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiLun virtio_scsi_lun = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_lun()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::virtio_scsi_lun(this),
        _Internal::virtio_scsi_lun(this).GetCachedSize(), target, stream);
  }

  // string virtio_scsi_lun_id = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_virtio_scsi_lun_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_virtio_scsi_lun_id().data(), static_cast<int>(this->_internal_virtio_scsi_lun_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.CreateVirtioScsiLunRequest.virtio_scsi_lun_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_virtio_scsi_lun_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.CreateVirtioScsiLunRequest)
  return target;
}

size_t CreateVirtioScsiLunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.CreateVirtioScsiLunRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string virtio_scsi_lun_id = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_virtio_scsi_lun_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_virtio_scsi_lun_id());
  }

  // .opi_api.storage.v1.VirtioScsiLun virtio_scsi_lun = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_lun()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.virtio_scsi_lun_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateVirtioScsiLunRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateVirtioScsiLunRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateVirtioScsiLunRequest::GetClassData() const { return &_class_data_; }


void CreateVirtioScsiLunRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateVirtioScsiLunRequest*>(&to_msg);
  auto& from = static_cast<const CreateVirtioScsiLunRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.CreateVirtioScsiLunRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_virtio_scsi_lun_id().empty()) {
    _this->_internal_set_virtio_scsi_lun_id(from._internal_virtio_scsi_lun_id());
  }
  if (from._internal_has_virtio_scsi_lun()) {
    _this->_internal_mutable_virtio_scsi_lun()->::opi_api::storage::v1::VirtioScsiLun::MergeFrom(
        from._internal_virtio_scsi_lun());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVirtioScsiLunRequest::CopyFrom(const CreateVirtioScsiLunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.CreateVirtioScsiLunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVirtioScsiLunRequest::IsInitialized() const {
  return true;
}

void CreateVirtioScsiLunRequest::InternalSwap(CreateVirtioScsiLunRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.virtio_scsi_lun_id_, lhs_arena,
      &other->_impl_.virtio_scsi_lun_id_, rhs_arena
  );
  swap(_impl_.virtio_scsi_lun_, other->_impl_.virtio_scsi_lun_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVirtioScsiLunRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[19]);
}

// ===================================================================

class DeleteVirtioScsiLunRequest::_Internal {
 public:
};

DeleteVirtioScsiLunRequest::DeleteVirtioScsiLunRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
}
DeleteVirtioScsiLunRequest::DeleteVirtioScsiLunRequest(const DeleteVirtioScsiLunRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteVirtioScsiLunRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allow_missing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.allow_missing_ = from._impl_.allow_missing_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
}

inline void DeleteVirtioScsiLunRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allow_missing_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteVirtioScsiLunRequest::~DeleteVirtioScsiLunRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteVirtioScsiLunRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeleteVirtioScsiLunRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteVirtioScsiLunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.allow_missing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVirtioScsiLunRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.DeleteVirtioScsiLunRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.allow_missing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteVirtioScsiLunRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.DeleteVirtioScsiLunRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_allow_missing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
  return target;
}

size_t DeleteVirtioScsiLunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool allow_missing = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteVirtioScsiLunRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteVirtioScsiLunRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteVirtioScsiLunRequest::GetClassData() const { return &_class_data_; }


void DeleteVirtioScsiLunRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteVirtioScsiLunRequest*>(&to_msg);
  auto& from = static_cast<const DeleteVirtioScsiLunRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_allow_missing() != 0) {
    _this->_internal_set_allow_missing(from._internal_allow_missing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVirtioScsiLunRequest::CopyFrom(const DeleteVirtioScsiLunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.DeleteVirtioScsiLunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVirtioScsiLunRequest::IsInitialized() const {
  return true;
}

void DeleteVirtioScsiLunRequest::InternalSwap(DeleteVirtioScsiLunRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.allow_missing_, other->_impl_.allow_missing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVirtioScsiLunRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[20]);
}

// ===================================================================

class UpdateVirtioScsiLunRequest::_Internal {
 public:
  static const ::opi_api::storage::v1::VirtioScsiLun& virtio_scsi_lun(const UpdateVirtioScsiLunRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateVirtioScsiLunRequest* msg);
};

const ::opi_api::storage::v1::VirtioScsiLun&
UpdateVirtioScsiLunRequest::_Internal::virtio_scsi_lun(const UpdateVirtioScsiLunRequest* msg) {
  return *msg->_impl_.virtio_scsi_lun_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateVirtioScsiLunRequest::_Internal::update_mask(const UpdateVirtioScsiLunRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateVirtioScsiLunRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
}
UpdateVirtioScsiLunRequest::UpdateVirtioScsiLunRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
}
UpdateVirtioScsiLunRequest::UpdateVirtioScsiLunRequest(const UpdateVirtioScsiLunRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateVirtioScsiLunRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_lun_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , decltype(_impl_.allow_missing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_virtio_scsi_lun()) {
    _this->_impl_.virtio_scsi_lun_ = new ::opi_api::storage::v1::VirtioScsiLun(*from._impl_.virtio_scsi_lun_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  _this->_impl_.allow_missing_ = from._impl_.allow_missing_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
}

inline void UpdateVirtioScsiLunRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_lun_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , decltype(_impl_.allow_missing_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateVirtioScsiLunRequest::~UpdateVirtioScsiLunRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateVirtioScsiLunRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.virtio_scsi_lun_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void UpdateVirtioScsiLunRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateVirtioScsiLunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.virtio_scsi_lun_ != nullptr) {
    delete _impl_.virtio_scsi_lun_;
  }
  _impl_.virtio_scsi_lun_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
  _impl_.allow_missing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVirtioScsiLunRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VirtioScsiLun virtio_scsi_lun = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtio_scsi_lun(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.allow_missing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateVirtioScsiLunRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiLun virtio_scsi_lun = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_lun()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::virtio_scsi_lun(this),
        _Internal::virtio_scsi_lun(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_update_mask()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_allow_missing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
  return target;
}

size_t UpdateVirtioScsiLunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.VirtioScsiLun virtio_scsi_lun = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_virtio_scsi_lun()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.virtio_scsi_lun_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_mask_);
  }

  // bool allow_missing = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_allow_missing() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateVirtioScsiLunRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateVirtioScsiLunRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateVirtioScsiLunRequest::GetClassData() const { return &_class_data_; }


void UpdateVirtioScsiLunRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateVirtioScsiLunRequest*>(&to_msg);
  auto& from = static_cast<const UpdateVirtioScsiLunRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_virtio_scsi_lun()) {
    _this->_internal_mutable_virtio_scsi_lun()->::opi_api::storage::v1::VirtioScsiLun::MergeFrom(
        from._internal_virtio_scsi_lun());
  }
  if (from._internal_has_update_mask()) {
    _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
        from._internal_update_mask());
  }
  if (from._internal_allow_missing() != 0) {
    _this->_internal_set_allow_missing(from._internal_allow_missing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateVirtioScsiLunRequest::CopyFrom(const UpdateVirtioScsiLunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.UpdateVirtioScsiLunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVirtioScsiLunRequest::IsInitialized() const {
  return true;
}

void UpdateVirtioScsiLunRequest::InternalSwap(UpdateVirtioScsiLunRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateVirtioScsiLunRequest, _impl_.allow_missing_)
      + sizeof(UpdateVirtioScsiLunRequest::_impl_.allow_missing_)
      - PROTOBUF_FIELD_OFFSET(UpdateVirtioScsiLunRequest, _impl_.virtio_scsi_lun_)>(
          reinterpret_cast<char*>(&_impl_.virtio_scsi_lun_),
          reinterpret_cast<char*>(&other->_impl_.virtio_scsi_lun_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVirtioScsiLunRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[21]);
}

// ===================================================================

class ListVirtioScsiLunsRequest::_Internal {
 public:
};

ListVirtioScsiLunsRequest::ListVirtioScsiLunsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListVirtioScsiLunsRequest)
}
ListVirtioScsiLunsRequest::ListVirtioScsiLunsRequest(const ListVirtioScsiLunsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListVirtioScsiLunsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListVirtioScsiLunsRequest)
}

inline void ListVirtioScsiLunsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVirtioScsiLunsRequest::~ListVirtioScsiLunsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListVirtioScsiLunsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListVirtioScsiLunsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
}

void ListVirtioScsiLunsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListVirtioScsiLunsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListVirtioScsiLunsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVirtioScsiLunsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiLunsRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiLunsRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVirtioScsiLunsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListVirtioScsiLunsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiLunsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiLunsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListVirtioScsiLunsRequest)
  return target;
}

size_t ListVirtioScsiLunsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListVirtioScsiLunsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVirtioScsiLunsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListVirtioScsiLunsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVirtioScsiLunsRequest::GetClassData() const { return &_class_data_; }


void ListVirtioScsiLunsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListVirtioScsiLunsRequest*>(&to_msg);
  auto& from = static_cast<const ListVirtioScsiLunsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListVirtioScsiLunsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVirtioScsiLunsRequest::CopyFrom(const ListVirtioScsiLunsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListVirtioScsiLunsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVirtioScsiLunsRequest::IsInitialized() const {
  return true;
}

void ListVirtioScsiLunsRequest::InternalSwap(ListVirtioScsiLunsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVirtioScsiLunsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[22]);
}

// ===================================================================

class ListVirtioScsiLunsResponse::_Internal {
 public:
};

ListVirtioScsiLunsResponse::ListVirtioScsiLunsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.ListVirtioScsiLunsResponse)
}
ListVirtioScsiLunsResponse::ListVirtioScsiLunsResponse(const ListVirtioScsiLunsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListVirtioScsiLunsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_luns_){from._impl_.virtio_scsi_luns_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.ListVirtioScsiLunsResponse)
}

inline void ListVirtioScsiLunsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.virtio_scsi_luns_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVirtioScsiLunsResponse::~ListVirtioScsiLunsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.ListVirtioScsiLunsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListVirtioScsiLunsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.virtio_scsi_luns_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListVirtioScsiLunsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListVirtioScsiLunsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.ListVirtioScsiLunsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.virtio_scsi_luns_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVirtioScsiLunsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.storage.v1.VirtioScsiLun virtio_scsi_luns = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_virtio_scsi_luns(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.ListVirtioScsiLunsResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVirtioScsiLunsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.ListVirtioScsiLunsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.VirtioScsiLun virtio_scsi_luns = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_virtio_scsi_luns_size()); i < n; i++) {
    const auto& repfield = this->_internal_virtio_scsi_luns(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.ListVirtioScsiLunsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.ListVirtioScsiLunsResponse)
  return target;
}

size_t ListVirtioScsiLunsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.ListVirtioScsiLunsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.storage.v1.VirtioScsiLun virtio_scsi_luns = 1;
  total_size += 1UL * this->_internal_virtio_scsi_luns_size();
  for (const auto& msg : this->_impl_.virtio_scsi_luns_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVirtioScsiLunsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListVirtioScsiLunsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVirtioScsiLunsResponse::GetClassData() const { return &_class_data_; }


void ListVirtioScsiLunsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListVirtioScsiLunsResponse*>(&to_msg);
  auto& from = static_cast<const ListVirtioScsiLunsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.ListVirtioScsiLunsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.virtio_scsi_luns_.MergeFrom(from._impl_.virtio_scsi_luns_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVirtioScsiLunsResponse::CopyFrom(const ListVirtioScsiLunsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.ListVirtioScsiLunsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVirtioScsiLunsResponse::IsInitialized() const {
  return true;
}

void ListVirtioScsiLunsResponse::InternalSwap(ListVirtioScsiLunsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.virtio_scsi_luns_.InternalSwap(&other->_impl_.virtio_scsi_luns_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVirtioScsiLunsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[23]);
}

// ===================================================================

class GetVirtioScsiLunRequest::_Internal {
 public:
};

GetVirtioScsiLunRequest::GetVirtioScsiLunRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.GetVirtioScsiLunRequest)
}
GetVirtioScsiLunRequest::GetVirtioScsiLunRequest(const GetVirtioScsiLunRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVirtioScsiLunRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.GetVirtioScsiLunRequest)
}

inline void GetVirtioScsiLunRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVirtioScsiLunRequest::~GetVirtioScsiLunRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.GetVirtioScsiLunRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVirtioScsiLunRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetVirtioScsiLunRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVirtioScsiLunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.GetVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtioScsiLunRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.GetVirtioScsiLunRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtioScsiLunRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.GetVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.GetVirtioScsiLunRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.GetVirtioScsiLunRequest)
  return target;
}

size_t GetVirtioScsiLunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.GetVirtioScsiLunRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtioScsiLunRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVirtioScsiLunRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtioScsiLunRequest::GetClassData() const { return &_class_data_; }


void GetVirtioScsiLunRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVirtioScsiLunRequest*>(&to_msg);
  auto& from = static_cast<const GetVirtioScsiLunRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.GetVirtioScsiLunRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtioScsiLunRequest::CopyFrom(const GetVirtioScsiLunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.GetVirtioScsiLunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtioScsiLunRequest::IsInitialized() const {
  return true;
}

void GetVirtioScsiLunRequest::InternalSwap(GetVirtioScsiLunRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtioScsiLunRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[24]);
}

// ===================================================================

class StatsVirtioScsiLunRequest::_Internal {
 public:
};

StatsVirtioScsiLunRequest::StatsVirtioScsiLunRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.StatsVirtioScsiLunRequest)
}
StatsVirtioScsiLunRequest::StatsVirtioScsiLunRequest(const StatsVirtioScsiLunRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatsVirtioScsiLunRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.controller_name_ref_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.controller_name_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.controller_name_ref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_controller_name_ref().empty()) {
    _this->_impl_.controller_name_ref_.Set(from._internal_controller_name_ref(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.StatsVirtioScsiLunRequest)
}

inline void StatsVirtioScsiLunRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.controller_name_ref_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.controller_name_ref_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.controller_name_ref_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StatsVirtioScsiLunRequest::~StatsVirtioScsiLunRequest() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.StatsVirtioScsiLunRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatsVirtioScsiLunRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.controller_name_ref_.Destroy();
}

void StatsVirtioScsiLunRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatsVirtioScsiLunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.StatsVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.controller_name_ref_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsVirtioScsiLunRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.StatsVirtioScsiLunRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string controller_name_ref = 2 [(.google.api.field_behavior) = OPTIONAL];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_controller_name_ref();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "opi_api.storage.v1.StatsVirtioScsiLunRequest.controller_name_ref"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatsVirtioScsiLunRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.StatsVirtioScsiLunRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.StatsVirtioScsiLunRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string controller_name_ref = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_controller_name_ref().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_controller_name_ref().data(), static_cast<int>(this->_internal_controller_name_ref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.storage.v1.StatsVirtioScsiLunRequest.controller_name_ref");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_controller_name_ref(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.StatsVirtioScsiLunRequest)
  return target;
}

size_t StatsVirtioScsiLunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.StatsVirtioScsiLunRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string controller_name_ref = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_controller_name_ref().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_controller_name_ref());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatsVirtioScsiLunRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatsVirtioScsiLunRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatsVirtioScsiLunRequest::GetClassData() const { return &_class_data_; }


void StatsVirtioScsiLunRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatsVirtioScsiLunRequest*>(&to_msg);
  auto& from = static_cast<const StatsVirtioScsiLunRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.StatsVirtioScsiLunRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_controller_name_ref().empty()) {
    _this->_internal_set_controller_name_ref(from._internal_controller_name_ref());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatsVirtioScsiLunRequest::CopyFrom(const StatsVirtioScsiLunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.StatsVirtioScsiLunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsVirtioScsiLunRequest::IsInitialized() const {
  return true;
}

void StatsVirtioScsiLunRequest::InternalSwap(StatsVirtioScsiLunRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.controller_name_ref_, lhs_arena,
      &other->_impl_.controller_name_ref_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsVirtioScsiLunRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[25]);
}

// ===================================================================

class StatsVirtioScsiLunResponse::_Internal {
 public:
  static const ::opi_api::storage::v1::VolumeStats& stats(const StatsVirtioScsiLunResponse* msg);
};

const ::opi_api::storage::v1::VolumeStats&
StatsVirtioScsiLunResponse::_Internal::stats(const StatsVirtioScsiLunResponse* msg) {
  return *msg->_impl_.stats_;
}
void StatsVirtioScsiLunResponse::clear_stats() {
  if (GetArenaForAllocation() == nullptr && _impl_.stats_ != nullptr) {
    delete _impl_.stats_;
  }
  _impl_.stats_ = nullptr;
}
StatsVirtioScsiLunResponse::StatsVirtioScsiLunResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:opi_api.storage.v1.StatsVirtioScsiLunResponse)
}
StatsVirtioScsiLunResponse::StatsVirtioScsiLunResponse(const StatsVirtioScsiLunResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatsVirtioScsiLunResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stats_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stats()) {
    _this->_impl_.stats_ = new ::opi_api::storage::v1::VolumeStats(*from._impl_.stats_);
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.storage.v1.StatsVirtioScsiLunResponse)
}

inline void StatsVirtioScsiLunResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stats_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StatsVirtioScsiLunResponse::~StatsVirtioScsiLunResponse() {
  // @@protoc_insertion_point(destructor:opi_api.storage.v1.StatsVirtioScsiLunResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatsVirtioScsiLunResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stats_;
}

void StatsVirtioScsiLunResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatsVirtioScsiLunResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.storage.v1.StatsVirtioScsiLunResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.stats_ != nullptr) {
    delete _impl_.stats_;
  }
  _impl_.stats_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatsVirtioScsiLunResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.storage.v1.VolumeStats stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stats(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatsVirtioScsiLunResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.storage.v1.StatsVirtioScsiLunResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.storage.v1.VolumeStats stats = 1;
  if (this->_internal_has_stats()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::stats(this),
        _Internal::stats(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.storage.v1.StatsVirtioScsiLunResponse)
  return target;
}

size_t StatsVirtioScsiLunResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.storage.v1.StatsVirtioScsiLunResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.storage.v1.VolumeStats stats = 1;
  if (this->_internal_has_stats()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stats_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatsVirtioScsiLunResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatsVirtioScsiLunResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatsVirtioScsiLunResponse::GetClassData() const { return &_class_data_; }


void StatsVirtioScsiLunResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatsVirtioScsiLunResponse*>(&to_msg);
  auto& from = static_cast<const StatsVirtioScsiLunResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opi_api.storage.v1.StatsVirtioScsiLunResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_stats()) {
    _this->_internal_mutable_stats()->::opi_api::storage::v1::VolumeStats::MergeFrom(
        from._internal_stats());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatsVirtioScsiLunResponse::CopyFrom(const StatsVirtioScsiLunResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.storage.v1.StatsVirtioScsiLunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsVirtioScsiLunResponse::IsInitialized() const {
  return true;
}

void StatsVirtioScsiLunResponse::InternalSwap(StatsVirtioScsiLunResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stats_, other->_impl_.stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatsVirtioScsiLunResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_getter, &descriptor_table_frontend_5fvirtio_5fscsi_2eproto_once,
      file_level_metadata_frontend_5fvirtio_5fscsi_2eproto[26]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace storage
}  // namespace opi_api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::VirtioScsiTarget*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::VirtioScsiTarget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::VirtioScsiTarget >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::VirtioScsiController*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::VirtioScsiController >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::VirtioScsiController >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::VirtioScsiLun*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::VirtioScsiLun >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::VirtioScsiLun >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::CreateVirtioScsiTargetRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::CreateVirtioScsiTargetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::CreateVirtioScsiTargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListVirtioScsiTargetsRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListVirtioScsiTargetsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListVirtioScsiTargetsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListVirtioScsiTargetsResponse*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::GetVirtioScsiTargetRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::GetVirtioScsiTargetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::GetVirtioScsiTargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::StatsVirtioScsiTargetRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::StatsVirtioScsiTargetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::StatsVirtioScsiTargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::StatsVirtioScsiTargetResponse*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::StatsVirtioScsiTargetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::StatsVirtioScsiTargetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::CreateVirtioScsiControllerRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::CreateVirtioScsiControllerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::CreateVirtioScsiControllerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListVirtioScsiControllersRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListVirtioScsiControllersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListVirtioScsiControllersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListVirtioScsiControllersResponse*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListVirtioScsiControllersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListVirtioScsiControllersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::GetVirtioScsiControllerRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::GetVirtioScsiControllerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::GetVirtioScsiControllerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::StatsVirtioScsiControllerRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::StatsVirtioScsiControllerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::StatsVirtioScsiControllerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::StatsVirtioScsiControllerResponse*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::StatsVirtioScsiControllerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::StatsVirtioScsiControllerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::CreateVirtioScsiLunRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::CreateVirtioScsiLunRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::CreateVirtioScsiLunRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::DeleteVirtioScsiLunRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::DeleteVirtioScsiLunRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::DeleteVirtioScsiLunRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::UpdateVirtioScsiLunRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::UpdateVirtioScsiLunRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::UpdateVirtioScsiLunRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListVirtioScsiLunsRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListVirtioScsiLunsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListVirtioScsiLunsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::ListVirtioScsiLunsResponse*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::ListVirtioScsiLunsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::ListVirtioScsiLunsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::GetVirtioScsiLunRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::GetVirtioScsiLunRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::GetVirtioScsiLunRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::StatsVirtioScsiLunRequest*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::StatsVirtioScsiLunRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::StatsVirtioScsiLunRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::storage::v1::StatsVirtioScsiLunResponse*
Arena::CreateMaybeMessage< ::opi_api::storage::v1::StatsVirtioScsiLunResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::storage::v1::StatsVirtioScsiLunResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
