// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend_nvme_pcie.proto

package opi_api.storage.v1;

/**
 * Protobuf type {@code opi_api.storage.v1.CreateNvmeNamespaceRequest}
 */
public final class CreateNvmeNamespaceRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.storage.v1.CreateNvmeNamespaceRequest)
    CreateNvmeNamespaceRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CreateNvmeNamespaceRequest.newBuilder() to construct.
  private CreateNvmeNamespaceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CreateNvmeNamespaceRequest() {
    nvmeNamespaceId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CreateNvmeNamespaceRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CreateNvmeNamespaceRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            opi_api.storage.v1.NvmeNamespace.Builder subBuilder = null;
            if (nvmeNamespace_ != null) {
              subBuilder = nvmeNamespace_.toBuilder();
            }
            nvmeNamespace_ = input.readMessage(opi_api.storage.v1.NvmeNamespace.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(nvmeNamespace_);
              nvmeNamespace_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            nvmeNamespaceId_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_CreateNvmeNamespaceRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_CreateNvmeNamespaceRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.storage.v1.CreateNvmeNamespaceRequest.class, opi_api.storage.v1.CreateNvmeNamespaceRequest.Builder.class);
  }

  public static final int NVME_NAMESPACE_FIELD_NUMBER = 1;
  private opi_api.storage.v1.NvmeNamespace nvmeNamespace_;
  /**
   * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the nvmeNamespace field is set.
   */
  @java.lang.Override
  public boolean hasNvmeNamespace() {
    return nvmeNamespace_ != null;
  }
  /**
   * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The nvmeNamespace.
   */
  @java.lang.Override
  public opi_api.storage.v1.NvmeNamespace getNvmeNamespace() {
    return nvmeNamespace_ == null ? opi_api.storage.v1.NvmeNamespace.getDefaultInstance() : nvmeNamespace_;
  }
  /**
   * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public opi_api.storage.v1.NvmeNamespaceOrBuilder getNvmeNamespaceOrBuilder() {
    return getNvmeNamespace();
  }

  public static final int NVME_NAMESPACE_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object nvmeNamespaceId_;
  /**
   * <code>string nvme_namespace_id = 2;</code>
   * @return The nvmeNamespaceId.
   */
  @java.lang.Override
  public java.lang.String getNvmeNamespaceId() {
    java.lang.Object ref = nvmeNamespaceId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nvmeNamespaceId_ = s;
      return s;
    }
  }
  /**
   * <code>string nvme_namespace_id = 2;</code>
   * @return The bytes for nvmeNamespaceId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNvmeNamespaceIdBytes() {
    java.lang.Object ref = nvmeNamespaceId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nvmeNamespaceId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (nvmeNamespace_ != null) {
      output.writeMessage(1, getNvmeNamespace());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nvmeNamespaceId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, nvmeNamespaceId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (nvmeNamespace_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getNvmeNamespace());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nvmeNamespaceId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, nvmeNamespaceId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.storage.v1.CreateNvmeNamespaceRequest)) {
      return super.equals(obj);
    }
    opi_api.storage.v1.CreateNvmeNamespaceRequest other = (opi_api.storage.v1.CreateNvmeNamespaceRequest) obj;

    if (hasNvmeNamespace() != other.hasNvmeNamespace()) return false;
    if (hasNvmeNamespace()) {
      if (!getNvmeNamespace()
          .equals(other.getNvmeNamespace())) return false;
    }
    if (!getNvmeNamespaceId()
        .equals(other.getNvmeNamespaceId())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasNvmeNamespace()) {
      hash = (37 * hash) + NVME_NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNvmeNamespace().hashCode();
    }
    hash = (37 * hash) + NVME_NAMESPACE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getNvmeNamespaceId().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.storage.v1.CreateNvmeNamespaceRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.storage.v1.CreateNvmeNamespaceRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code opi_api.storage.v1.CreateNvmeNamespaceRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.storage.v1.CreateNvmeNamespaceRequest)
      opi_api.storage.v1.CreateNvmeNamespaceRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_CreateNvmeNamespaceRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_CreateNvmeNamespaceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.storage.v1.CreateNvmeNamespaceRequest.class, opi_api.storage.v1.CreateNvmeNamespaceRequest.Builder.class);
    }

    // Construct using opi_api.storage.v1.CreateNvmeNamespaceRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (nvmeNamespaceBuilder_ == null) {
        nvmeNamespace_ = null;
      } else {
        nvmeNamespace_ = null;
        nvmeNamespaceBuilder_ = null;
      }
      nvmeNamespaceId_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_CreateNvmeNamespaceRequest_descriptor;
    }

    @java.lang.Override
    public opi_api.storage.v1.CreateNvmeNamespaceRequest getDefaultInstanceForType() {
      return opi_api.storage.v1.CreateNvmeNamespaceRequest.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.storage.v1.CreateNvmeNamespaceRequest build() {
      opi_api.storage.v1.CreateNvmeNamespaceRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.storage.v1.CreateNvmeNamespaceRequest buildPartial() {
      opi_api.storage.v1.CreateNvmeNamespaceRequest result = new opi_api.storage.v1.CreateNvmeNamespaceRequest(this);
      if (nvmeNamespaceBuilder_ == null) {
        result.nvmeNamespace_ = nvmeNamespace_;
      } else {
        result.nvmeNamespace_ = nvmeNamespaceBuilder_.build();
      }
      result.nvmeNamespaceId_ = nvmeNamespaceId_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.storage.v1.CreateNvmeNamespaceRequest) {
        return mergeFrom((opi_api.storage.v1.CreateNvmeNamespaceRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.storage.v1.CreateNvmeNamespaceRequest other) {
      if (other == opi_api.storage.v1.CreateNvmeNamespaceRequest.getDefaultInstance()) return this;
      if (other.hasNvmeNamespace()) {
        mergeNvmeNamespace(other.getNvmeNamespace());
      }
      if (!other.getNvmeNamespaceId().isEmpty()) {
        nvmeNamespaceId_ = other.nvmeNamespaceId_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.storage.v1.CreateNvmeNamespaceRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.storage.v1.CreateNvmeNamespaceRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private opi_api.storage.v1.NvmeNamespace nvmeNamespace_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.storage.v1.NvmeNamespace, opi_api.storage.v1.NvmeNamespace.Builder, opi_api.storage.v1.NvmeNamespaceOrBuilder> nvmeNamespaceBuilder_;
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the nvmeNamespace field is set.
     */
    public boolean hasNvmeNamespace() {
      return nvmeNamespaceBuilder_ != null || nvmeNamespace_ != null;
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The nvmeNamespace.
     */
    public opi_api.storage.v1.NvmeNamespace getNvmeNamespace() {
      if (nvmeNamespaceBuilder_ == null) {
        return nvmeNamespace_ == null ? opi_api.storage.v1.NvmeNamespace.getDefaultInstance() : nvmeNamespace_;
      } else {
        return nvmeNamespaceBuilder_.getMessage();
      }
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setNvmeNamespace(opi_api.storage.v1.NvmeNamespace value) {
      if (nvmeNamespaceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nvmeNamespace_ = value;
        onChanged();
      } else {
        nvmeNamespaceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setNvmeNamespace(
        opi_api.storage.v1.NvmeNamespace.Builder builderForValue) {
      if (nvmeNamespaceBuilder_ == null) {
        nvmeNamespace_ = builderForValue.build();
        onChanged();
      } else {
        nvmeNamespaceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeNvmeNamespace(opi_api.storage.v1.NvmeNamespace value) {
      if (nvmeNamespaceBuilder_ == null) {
        if (nvmeNamespace_ != null) {
          nvmeNamespace_ =
            opi_api.storage.v1.NvmeNamespace.newBuilder(nvmeNamespace_).mergeFrom(value).buildPartial();
        } else {
          nvmeNamespace_ = value;
        }
        onChanged();
      } else {
        nvmeNamespaceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearNvmeNamespace() {
      if (nvmeNamespaceBuilder_ == null) {
        nvmeNamespace_ = null;
        onChanged();
      } else {
        nvmeNamespace_ = null;
        nvmeNamespaceBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public opi_api.storage.v1.NvmeNamespace.Builder getNvmeNamespaceBuilder() {
      
      onChanged();
      return getNvmeNamespaceFieldBuilder().getBuilder();
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public opi_api.storage.v1.NvmeNamespaceOrBuilder getNvmeNamespaceOrBuilder() {
      if (nvmeNamespaceBuilder_ != null) {
        return nvmeNamespaceBuilder_.getMessageOrBuilder();
      } else {
        return nvmeNamespace_ == null ?
            opi_api.storage.v1.NvmeNamespace.getDefaultInstance() : nvmeNamespace_;
      }
    }
    /**
     * <code>.opi_api.storage.v1.NvmeNamespace nvme_namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.storage.v1.NvmeNamespace, opi_api.storage.v1.NvmeNamespace.Builder, opi_api.storage.v1.NvmeNamespaceOrBuilder> 
        getNvmeNamespaceFieldBuilder() {
      if (nvmeNamespaceBuilder_ == null) {
        nvmeNamespaceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.storage.v1.NvmeNamespace, opi_api.storage.v1.NvmeNamespace.Builder, opi_api.storage.v1.NvmeNamespaceOrBuilder>(
                getNvmeNamespace(),
                getParentForChildren(),
                isClean());
        nvmeNamespace_ = null;
      }
      return nvmeNamespaceBuilder_;
    }

    private java.lang.Object nvmeNamespaceId_ = "";
    /**
     * <code>string nvme_namespace_id = 2;</code>
     * @return The nvmeNamespaceId.
     */
    public java.lang.String getNvmeNamespaceId() {
      java.lang.Object ref = nvmeNamespaceId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nvmeNamespaceId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string nvme_namespace_id = 2;</code>
     * @return The bytes for nvmeNamespaceId.
     */
    public com.google.protobuf.ByteString
        getNvmeNamespaceIdBytes() {
      java.lang.Object ref = nvmeNamespaceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nvmeNamespaceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string nvme_namespace_id = 2;</code>
     * @param value The nvmeNamespaceId to set.
     * @return This builder for chaining.
     */
    public Builder setNvmeNamespaceId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nvmeNamespaceId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string nvme_namespace_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNvmeNamespaceId() {
      
      nvmeNamespaceId_ = getDefaultInstance().getNvmeNamespaceId();
      onChanged();
      return this;
    }
    /**
     * <code>string nvme_namespace_id = 2;</code>
     * @param value The bytes for nvmeNamespaceId to set.
     * @return This builder for chaining.
     */
    public Builder setNvmeNamespaceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nvmeNamespaceId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.storage.v1.CreateNvmeNamespaceRequest)
  }

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.CreateNvmeNamespaceRequest)
  private static final opi_api.storage.v1.CreateNvmeNamespaceRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.storage.v1.CreateNvmeNamespaceRequest();
  }

  public static opi_api.storage.v1.CreateNvmeNamespaceRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateNvmeNamespaceRequest>
      PARSER = new com.google.protobuf.AbstractParser<CreateNvmeNamespaceRequest>() {
    @java.lang.Override
    public CreateNvmeNamespaceRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CreateNvmeNamespaceRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CreateNvmeNamespaceRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreateNvmeNamespaceRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.storage.v1.CreateNvmeNamespaceRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

