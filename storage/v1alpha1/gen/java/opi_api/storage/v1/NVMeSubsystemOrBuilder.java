// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend_nvme_pcie.proto

package opi_api.storage.v1;

public interface NVMeSubsystemOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.storage.v1.NVMeSubsystem)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * object's unique identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * object's unique identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  opi_api.common.v1.ObjectKey getId();
  /**
   * <pre>
   * object's unique identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * NVMe subsystem NQN to which the controller belongs
   * Refer to the NQN format in the NVMe base specifications, must not
   * exceed 'NSV_NVME_SUBSYSTEM_NQN_LEN' bytes
   * </pre>
   *
   * <code>string nqn = 2;</code>
   * @return The nqn.
   */
  java.lang.String getNqn();
  /**
   * <pre>
   * NVMe subsystem NQN to which the controller belongs
   * Refer to the NQN format in the NVMe base specifications, must not
   * exceed 'NSV_NVME_SUBSYSTEM_NQN_LEN' bytes
   * </pre>
   *
   * <code>string nqn = 2;</code>
   * @return The bytes for nqn.
   */
  com.google.protobuf.ByteString
      getNqnBytes();

  /**
   * <pre>
   * serial number must not exceed 'NSV_CTRLR_SERIAL_NO_LEN' bytes
   * </pre>
   *
   * <code>string serial_number = 3;</code>
   * @return The serialNumber.
   */
  java.lang.String getSerialNumber();
  /**
   * <pre>
   * serial number must not exceed 'NSV_CTRLR_SERIAL_NO_LEN' bytes
   * </pre>
   *
   * <code>string serial_number = 3;</code>
   * @return The bytes for serialNumber.
   */
  com.google.protobuf.ByteString
      getSerialNumberBytes();

  /**
   * <pre>
   * model number, must not exceed 'NSV_CTRLR_MODEL_NO_LEN' bytes
   * </pre>
   *
   * <code>string model_number = 4;</code>
   * @return The modelNumber.
   */
  java.lang.String getModelNumber();
  /**
   * <pre>
   * model number, must not exceed 'NSV_CTRLR_MODEL_NO_LEN' bytes
   * </pre>
   *
   * <code>string model_number = 4;</code>
   * @return The bytes for modelNumber.
   */
  com.google.protobuf.ByteString
      getModelNumberBytes();

  /**
   * <pre>
   * maximum namespaces within a subsystem
   * </pre>
   *
   * <code>int64 max_ns = 5;</code>
   * @return The maxNs.
   */
  long getMaxNs();

  /**
   * <pre>
   * firmware revision, must not exceed 'NSV_CTRLR_FW_REV_LEN'
   * </pre>
   *
   * <code>string firmware_revision = 6;</code>
   * @return The firmwareRevision.
   */
  java.lang.String getFirmwareRevision();
  /**
   * <pre>
   * firmware revision, must not exceed 'NSV_CTRLR_FW_REV_LEN'
   * </pre>
   *
   * <code>string firmware_revision = 6;</code>
   * @return The bytes for firmwareRevision.
   */
  com.google.protobuf.ByteString
      getFirmwareRevisionBytes();

  /**
   * <pre>
   * FRU identfier, 16bytes opaque identity for the type of unit
   * </pre>
   *
   * <code>bytes fru_guid = 7;</code>
   * @return The fruGuid.
   */
  com.google.protobuf.ByteString getFruGuid();
}
