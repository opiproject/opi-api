// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend_nvme_pcie.proto

package opi_api.storage.v1;

public interface ControllerNVMeNamespaceRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.storage.v1.ControllerNVMeNamespaceRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string subsystem = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The subsystem.
   */
  java.lang.String getSubsystem();
  /**
   * <code>string subsystem = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for subsystem.
   */
  com.google.protobuf.ByteString
      getSubsystemBytes();

  /**
   * <code>.opi_api.common.v1.ObjectKey controller = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the controller field is set.
   */
  boolean hasController();
  /**
   * <code>.opi_api.common.v1.ObjectKey controller = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The controller.
   */
  opi_api.common.v1.ObjectKey getController();
  /**
   * <code>.opi_api.common.v1.ObjectKey controller = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getControllerOrBuilder();

  /**
   * <code>.opi_api.common.v1.ObjectKey nv_me_namespace_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the nvMeNamespaceId field is set.
   */
  boolean hasNvMeNamespaceId();
  /**
   * <code>.opi_api.common.v1.ObjectKey nv_me_namespace_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The nvMeNamespaceId.
   */
  opi_api.common.v1.ObjectKey getNvMeNamespaceId();
  /**
   * <code>.opi_api.common.v1.ObjectKey nv_me_namespace_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getNvMeNamespaceIdOrBuilder();
}
