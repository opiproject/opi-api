// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: frontend_virtio_blk.proto

package _go

import (
	context "context"
	_go "github.com/opiproject/opi-api/common/v1/gen/go"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtioBlk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PcieId       *PciEndpoint   `protobuf:"bytes,2,opt,name=pcie_id,json=pcieId,proto3" json:"pcie_id,omitempty"`
	Bdev         string         `protobuf:"bytes,3,opt,name=bdev,proto3" json:"bdev,omitempty"`
	MaxIoQps     int64          `protobuf:"varint,4,opt,name=max_io_qps,json=maxIoQps,proto3" json:"max_io_qps,omitempty"`
	SerialNumber string         `protobuf:"bytes,5,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *VirtioBlk) Reset() {
	*x = VirtioBlk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioBlk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioBlk) ProtoMessage() {}

func (x *VirtioBlk) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioBlk.ProtoReflect.Descriptor instead.
func (*VirtioBlk) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{0}
}

func (x *VirtioBlk) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioBlk) GetPcieId() *PciEndpoint {
	if x != nil {
		return x.PcieId
	}
	return nil
}

func (x *VirtioBlk) GetBdev() string {
	if x != nil {
		return x.Bdev
	}
	return ""
}

func (x *VirtioBlk) GetMaxIoQps() int64 {
	if x != nil {
		return x.MaxIoQps
	}
	return 0
}

func (x *VirtioBlk) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type CreateVirtioBlkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller *VirtioBlk `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *CreateVirtioBlkRequest) Reset() {
	*x = CreateVirtioBlkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtioBlkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtioBlkRequest) ProtoMessage() {}

func (x *CreateVirtioBlkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtioBlkRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtioBlkRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVirtioBlkRequest) GetController() *VirtioBlk {
	if x != nil {
		return x.Controller
	}
	return nil
}

type DeleteVirtioBlkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *DeleteVirtioBlkRequest) Reset() {
	*x = DeleteVirtioBlkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtioBlkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtioBlkRequest) ProtoMessage() {}

func (x *DeleteVirtioBlkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtioBlkRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtioBlkRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVirtioBlkRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type UpdateVirtioBlkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller *VirtioBlk `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *UpdateVirtioBlkRequest) Reset() {
	*x = UpdateVirtioBlkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtioBlkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtioBlkRequest) ProtoMessage() {}

func (x *UpdateVirtioBlkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtioBlkRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtioBlkRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateVirtioBlkRequest) GetController() *VirtioBlk {
	if x != nil {
		return x.Controller
	}
	return nil
}

type ListVirtioBlkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVirtioBlkRequest) Reset() {
	*x = ListVirtioBlkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioBlkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioBlkRequest) ProtoMessage() {}

func (x *ListVirtioBlkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioBlkRequest.ProtoReflect.Descriptor instead.
func (*ListVirtioBlkRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{4}
}

type ListVirtioBlkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller []*VirtioBlk `protobuf:"bytes,1,rep,name=controller,proto3" json:"controller,omitempty"`
}

func (x *ListVirtioBlkResponse) Reset() {
	*x = ListVirtioBlkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioBlkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioBlkResponse) ProtoMessage() {}

func (x *ListVirtioBlkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioBlkResponse.ProtoReflect.Descriptor instead.
func (*ListVirtioBlkResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{5}
}

func (x *ListVirtioBlkResponse) GetController() []*VirtioBlk {
	if x != nil {
		return x.Controller
	}
	return nil
}

type GetVirtioBlkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *GetVirtioBlkRequest) Reset() {
	*x = GetVirtioBlkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtioBlkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtioBlkRequest) ProtoMessage() {}

func (x *GetVirtioBlkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtioBlkRequest.ProtoReflect.Descriptor instead.
func (*GetVirtioBlkRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{6}
}

func (x *GetVirtioBlkRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type VirtioBlkStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *VirtioBlkStatsRequest) Reset() {
	*x = VirtioBlkStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioBlkStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioBlkStatsRequest) ProtoMessage() {}

func (x *VirtioBlkStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioBlkStatsRequest.ProtoReflect.Descriptor instead.
func (*VirtioBlkStatsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{7}
}

func (x *VirtioBlkStatsRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type VirtioBlkStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stats string         `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *VirtioBlkStatsResponse) Reset() {
	*x = VirtioBlkStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_blk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioBlkStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioBlkStatsResponse) ProtoMessage() {}

func (x *VirtioBlkStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_blk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioBlkStatsResponse.ProtoReflect.Descriptor instead.
func (*VirtioBlkStatsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_blk_proto_rawDescGZIP(), []int{8}
}

func (x *VirtioBlkStatsResponse) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioBlkStatsResponse) GetStats() string {
	if x != nil {
		return x.Stats
	}
	return ""
}

var File_frontend_virtio_blk_proto protoreflect.FileDescriptor

var file_frontend_virtio_blk_proto_rawDesc = []byte{
	0x0a, 0x19, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x5f, 0x62, 0x6c, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x09, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x63, 0x69, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x63, 0x69,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x63, 0x69, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x64, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x64, 0x65, 0x76, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6f, 0x5f, 0x71,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x6f, 0x51,
	0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x22, 0x5b, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x42, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x5a, 0x0a, 0x15, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x16,
	0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x32, 0xfc, 0x05, 0x0a, 0x18, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x0e, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x62, 0x6c, 0x6b, 0x73, 0x3a, 0x09, 0x76,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x62, 0x6c, 0x6b, 0x12, 0x79, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x12, 0x2a, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x62, 0x6c, 0x6b, 0x73, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x62,
	0x6c, 0x6b, 0x7d, 0x12, 0x7f, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c,
	0x6b, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x32, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x62, 0x6c, 0x6b, 0x73, 0x3a, 0x09, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x62, 0x6c, 0x6b, 0x12, 0x7c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42,
	0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x62, 0x6c,
	0x6b, 0x73, 0x12, 0x7a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42,
	0x6c, 0x6b, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x42, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x62, 0x6c,
	0x6b, 0x73, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x62, 0x6c, 0x6b, 0x7d, 0x12, 0x69,
	0x0a, 0x0e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x29, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x65, 0x0a, 0x12, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x42,
	0x16, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x42,
	0x6c, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x6f, 0x70, 0x69, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frontend_virtio_blk_proto_rawDescOnce sync.Once
	file_frontend_virtio_blk_proto_rawDescData = file_frontend_virtio_blk_proto_rawDesc
)

func file_frontend_virtio_blk_proto_rawDescGZIP() []byte {
	file_frontend_virtio_blk_proto_rawDescOnce.Do(func() {
		file_frontend_virtio_blk_proto_rawDescData = protoimpl.X.CompressGZIP(file_frontend_virtio_blk_proto_rawDescData)
	})
	return file_frontend_virtio_blk_proto_rawDescData
}

var file_frontend_virtio_blk_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_frontend_virtio_blk_proto_goTypes = []interface{}{
	(*VirtioBlk)(nil),              // 0: opi_api.storage.v1.VirtioBlk
	(*CreateVirtioBlkRequest)(nil), // 1: opi_api.storage.v1.CreateVirtioBlkRequest
	(*DeleteVirtioBlkRequest)(nil), // 2: opi_api.storage.v1.DeleteVirtioBlkRequest
	(*UpdateVirtioBlkRequest)(nil), // 3: opi_api.storage.v1.UpdateVirtioBlkRequest
	(*ListVirtioBlkRequest)(nil),   // 4: opi_api.storage.v1.ListVirtioBlkRequest
	(*ListVirtioBlkResponse)(nil),  // 5: opi_api.storage.v1.ListVirtioBlkResponse
	(*GetVirtioBlkRequest)(nil),    // 6: opi_api.storage.v1.GetVirtioBlkRequest
	(*VirtioBlkStatsRequest)(nil),  // 7: opi_api.storage.v1.VirtioBlkStatsRequest
	(*VirtioBlkStatsResponse)(nil), // 8: opi_api.storage.v1.VirtioBlkStatsResponse
	(*_go.ObjectKey)(nil),          // 9: opi_api.common.v1.ObjectKey
	(*PciEndpoint)(nil),            // 10: opi_api.storage.v1.PciEndpoint
	(*emptypb.Empty)(nil),          // 11: google.protobuf.Empty
}
var file_frontend_virtio_blk_proto_depIdxs = []int32{
	9,  // 0: opi_api.storage.v1.VirtioBlk.id:type_name -> opi_api.common.v1.ObjectKey
	10, // 1: opi_api.storage.v1.VirtioBlk.pcie_id:type_name -> opi_api.storage.v1.PciEndpoint
	0,  // 2: opi_api.storage.v1.CreateVirtioBlkRequest.controller:type_name -> opi_api.storage.v1.VirtioBlk
	9,  // 3: opi_api.storage.v1.DeleteVirtioBlkRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	0,  // 4: opi_api.storage.v1.UpdateVirtioBlkRequest.controller:type_name -> opi_api.storage.v1.VirtioBlk
	0,  // 5: opi_api.storage.v1.ListVirtioBlkResponse.controller:type_name -> opi_api.storage.v1.VirtioBlk
	9,  // 6: opi_api.storage.v1.GetVirtioBlkRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	9,  // 7: opi_api.storage.v1.VirtioBlkStatsRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	9,  // 8: opi_api.storage.v1.VirtioBlkStatsResponse.id:type_name -> opi_api.common.v1.ObjectKey
	1,  // 9: opi_api.storage.v1.FrontendVirtioBlkService.CreateVirtioBlk:input_type -> opi_api.storage.v1.CreateVirtioBlkRequest
	2,  // 10: opi_api.storage.v1.FrontendVirtioBlkService.DeleteVirtioBlk:input_type -> opi_api.storage.v1.DeleteVirtioBlkRequest
	3,  // 11: opi_api.storage.v1.FrontendVirtioBlkService.UpdateVirtioBlk:input_type -> opi_api.storage.v1.UpdateVirtioBlkRequest
	4,  // 12: opi_api.storage.v1.FrontendVirtioBlkService.ListVirtioBlk:input_type -> opi_api.storage.v1.ListVirtioBlkRequest
	6,  // 13: opi_api.storage.v1.FrontendVirtioBlkService.GetVirtioBlk:input_type -> opi_api.storage.v1.GetVirtioBlkRequest
	7,  // 14: opi_api.storage.v1.FrontendVirtioBlkService.VirtioBlkStats:input_type -> opi_api.storage.v1.VirtioBlkStatsRequest
	0,  // 15: opi_api.storage.v1.FrontendVirtioBlkService.CreateVirtioBlk:output_type -> opi_api.storage.v1.VirtioBlk
	11, // 16: opi_api.storage.v1.FrontendVirtioBlkService.DeleteVirtioBlk:output_type -> google.protobuf.Empty
	0,  // 17: opi_api.storage.v1.FrontendVirtioBlkService.UpdateVirtioBlk:output_type -> opi_api.storage.v1.VirtioBlk
	5,  // 18: opi_api.storage.v1.FrontendVirtioBlkService.ListVirtioBlk:output_type -> opi_api.storage.v1.ListVirtioBlkResponse
	0,  // 19: opi_api.storage.v1.FrontendVirtioBlkService.GetVirtioBlk:output_type -> opi_api.storage.v1.VirtioBlk
	8,  // 20: opi_api.storage.v1.FrontendVirtioBlkService.VirtioBlkStats:output_type -> opi_api.storage.v1.VirtioBlkStatsResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_frontend_virtio_blk_proto_init() }
func file_frontend_virtio_blk_proto_init() {
	if File_frontend_virtio_blk_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_frontend_virtio_blk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioBlk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtioBlkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtioBlkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtioBlkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioBlkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioBlkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtioBlkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioBlkStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_blk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioBlkStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frontend_virtio_blk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frontend_virtio_blk_proto_goTypes,
		DependencyIndexes: file_frontend_virtio_blk_proto_depIdxs,
		MessageInfos:      file_frontend_virtio_blk_proto_msgTypes,
	}.Build()
	File_frontend_virtio_blk_proto = out.File
	file_frontend_virtio_blk_proto_rawDesc = nil
	file_frontend_virtio_blk_proto_goTypes = nil
	file_frontend_virtio_blk_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FrontendVirtioBlkServiceClient is the client API for FrontendVirtioBlkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FrontendVirtioBlkServiceClient interface {
	CreateVirtioBlk(ctx context.Context, in *CreateVirtioBlkRequest, opts ...grpc.CallOption) (*VirtioBlk, error)
	DeleteVirtioBlk(ctx context.Context, in *DeleteVirtioBlkRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateVirtioBlk(ctx context.Context, in *UpdateVirtioBlkRequest, opts ...grpc.CallOption) (*VirtioBlk, error)
	ListVirtioBlk(ctx context.Context, in *ListVirtioBlkRequest, opts ...grpc.CallOption) (*ListVirtioBlkResponse, error)
	GetVirtioBlk(ctx context.Context, in *GetVirtioBlkRequest, opts ...grpc.CallOption) (*VirtioBlk, error)
	VirtioBlkStats(ctx context.Context, in *VirtioBlkStatsRequest, opts ...grpc.CallOption) (*VirtioBlkStatsResponse, error)
}

type frontendVirtioBlkServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFrontendVirtioBlkServiceClient(cc grpc.ClientConnInterface) FrontendVirtioBlkServiceClient {
	return &frontendVirtioBlkServiceClient{cc}
}

func (c *frontendVirtioBlkServiceClient) CreateVirtioBlk(ctx context.Context, in *CreateVirtioBlkRequest, opts ...grpc.CallOption) (*VirtioBlk, error) {
	out := new(VirtioBlk)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioBlkService/CreateVirtioBlk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioBlkServiceClient) DeleteVirtioBlk(ctx context.Context, in *DeleteVirtioBlkRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioBlkService/DeleteVirtioBlk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioBlkServiceClient) UpdateVirtioBlk(ctx context.Context, in *UpdateVirtioBlkRequest, opts ...grpc.CallOption) (*VirtioBlk, error) {
	out := new(VirtioBlk)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioBlkService/UpdateVirtioBlk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioBlkServiceClient) ListVirtioBlk(ctx context.Context, in *ListVirtioBlkRequest, opts ...grpc.CallOption) (*ListVirtioBlkResponse, error) {
	out := new(ListVirtioBlkResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioBlkService/ListVirtioBlk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioBlkServiceClient) GetVirtioBlk(ctx context.Context, in *GetVirtioBlkRequest, opts ...grpc.CallOption) (*VirtioBlk, error) {
	out := new(VirtioBlk)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioBlkService/GetVirtioBlk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioBlkServiceClient) VirtioBlkStats(ctx context.Context, in *VirtioBlkStatsRequest, opts ...grpc.CallOption) (*VirtioBlkStatsResponse, error) {
	out := new(VirtioBlkStatsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioBlkService/VirtioBlkStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrontendVirtioBlkServiceServer is the server API for FrontendVirtioBlkService service.
type FrontendVirtioBlkServiceServer interface {
	CreateVirtioBlk(context.Context, *CreateVirtioBlkRequest) (*VirtioBlk, error)
	DeleteVirtioBlk(context.Context, *DeleteVirtioBlkRequest) (*emptypb.Empty, error)
	UpdateVirtioBlk(context.Context, *UpdateVirtioBlkRequest) (*VirtioBlk, error)
	ListVirtioBlk(context.Context, *ListVirtioBlkRequest) (*ListVirtioBlkResponse, error)
	GetVirtioBlk(context.Context, *GetVirtioBlkRequest) (*VirtioBlk, error)
	VirtioBlkStats(context.Context, *VirtioBlkStatsRequest) (*VirtioBlkStatsResponse, error)
}

// UnimplementedFrontendVirtioBlkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFrontendVirtioBlkServiceServer struct {
}

func (*UnimplementedFrontendVirtioBlkServiceServer) CreateVirtioBlk(context.Context, *CreateVirtioBlkRequest) (*VirtioBlk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtioBlk not implemented")
}
func (*UnimplementedFrontendVirtioBlkServiceServer) DeleteVirtioBlk(context.Context, *DeleteVirtioBlkRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtioBlk not implemented")
}
func (*UnimplementedFrontendVirtioBlkServiceServer) UpdateVirtioBlk(context.Context, *UpdateVirtioBlkRequest) (*VirtioBlk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVirtioBlk not implemented")
}
func (*UnimplementedFrontendVirtioBlkServiceServer) ListVirtioBlk(context.Context, *ListVirtioBlkRequest) (*ListVirtioBlkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtioBlk not implemented")
}
func (*UnimplementedFrontendVirtioBlkServiceServer) GetVirtioBlk(context.Context, *GetVirtioBlkRequest) (*VirtioBlk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtioBlk not implemented")
}
func (*UnimplementedFrontendVirtioBlkServiceServer) VirtioBlkStats(context.Context, *VirtioBlkStatsRequest) (*VirtioBlkStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioBlkStats not implemented")
}

func RegisterFrontendVirtioBlkServiceServer(s *grpc.Server, srv FrontendVirtioBlkServiceServer) {
	s.RegisterService(&_FrontendVirtioBlkService_serviceDesc, srv)
}

func _FrontendVirtioBlkService_CreateVirtioBlk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtioBlkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioBlkServiceServer).CreateVirtioBlk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioBlkService/CreateVirtioBlk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioBlkServiceServer).CreateVirtioBlk(ctx, req.(*CreateVirtioBlkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioBlkService_DeleteVirtioBlk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtioBlkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioBlkServiceServer).DeleteVirtioBlk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioBlkService/DeleteVirtioBlk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioBlkServiceServer).DeleteVirtioBlk(ctx, req.(*DeleteVirtioBlkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioBlkService_UpdateVirtioBlk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtioBlkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioBlkServiceServer).UpdateVirtioBlk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioBlkService/UpdateVirtioBlk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioBlkServiceServer).UpdateVirtioBlk(ctx, req.(*UpdateVirtioBlkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioBlkService_ListVirtioBlk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtioBlkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioBlkServiceServer).ListVirtioBlk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioBlkService/ListVirtioBlk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioBlkServiceServer).ListVirtioBlk(ctx, req.(*ListVirtioBlkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioBlkService_GetVirtioBlk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtioBlkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioBlkServiceServer).GetVirtioBlk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioBlkService/GetVirtioBlk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioBlkServiceServer).GetVirtioBlk(ctx, req.(*GetVirtioBlkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioBlkService_VirtioBlkStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioBlkStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioBlkServiceServer).VirtioBlkStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioBlkService/VirtioBlkStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioBlkServiceServer).VirtioBlkStats(ctx, req.(*VirtioBlkStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FrontendVirtioBlkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.storage.v1.FrontendVirtioBlkService",
	HandlerType: (*FrontendVirtioBlkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVirtioBlk",
			Handler:    _FrontendVirtioBlkService_CreateVirtioBlk_Handler,
		},
		{
			MethodName: "DeleteVirtioBlk",
			Handler:    _FrontendVirtioBlkService_DeleteVirtioBlk_Handler,
		},
		{
			MethodName: "UpdateVirtioBlk",
			Handler:    _FrontendVirtioBlkService_UpdateVirtioBlk_Handler,
		},
		{
			MethodName: "ListVirtioBlk",
			Handler:    _FrontendVirtioBlkService_ListVirtioBlk_Handler,
		},
		{
			MethodName: "GetVirtioBlk",
			Handler:    _FrontendVirtioBlkService_GetVirtioBlk_Handler,
		},
		{
			MethodName: "VirtioBlkStats",
			Handler:    _FrontendVirtioBlkService_VirtioBlkStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frontend_virtio_blk.proto",
}
