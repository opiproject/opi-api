// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: backend_null.proto

package _go

import (
	context "context"
	_go "github.com/opiproject/opi-api/common/v1/gen/go"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NullVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is an opaque object handle that is not user settable.
	// name will be returned with created object
	// user can only set {resource}_id on the Create request object
	Name        string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BlockSize   int64     `protobuf:"varint,2,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	BlocksCount int64     `protobuf:"varint,3,opt,name=blocks_count,json=blocksCount,proto3" json:"blocks_count,omitempty"`
	Uuid        *_go.Uuid `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *NullVolume) Reset() {
	*x = NullVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullVolume) ProtoMessage() {}

func (x *NullVolume) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullVolume.ProtoReflect.Descriptor instead.
func (*NullVolume) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{0}
}

func (x *NullVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NullVolume) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *NullVolume) GetBlocksCount() int64 {
	if x != nil {
		return x.BlocksCount
	}
	return 0
}

func (x *NullVolume) GetUuid() *_go.Uuid {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type CreateNullVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NullVolume   *NullVolume `protobuf:"bytes,1,opt,name=null_volume,json=nullVolume,proto3" json:"null_volume,omitempty"`
	NullVolumeId string      `protobuf:"bytes,2,opt,name=null_volume_id,json=nullVolumeId,proto3" json:"null_volume_id,omitempty"`
}

func (x *CreateNullVolumeRequest) Reset() {
	*x = CreateNullVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNullVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNullVolumeRequest) ProtoMessage() {}

func (x *CreateNullVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNullVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateNullVolumeRequest) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNullVolumeRequest) GetNullVolume() *NullVolume {
	if x != nil {
		return x.NullVolume
	}
	return nil
}

func (x *CreateNullVolumeRequest) GetNullVolumeId() string {
	if x != nil {
		return x.NullVolumeId
	}
	return ""
}

type DeleteNullVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// If set to true, and the resource is not found, the request will succeed
	// but no action will be taken on the server
	AllowMissing bool `protobuf:"varint,2,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *DeleteNullVolumeRequest) Reset() {
	*x = DeleteNullVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNullVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNullVolumeRequest) ProtoMessage() {}

func (x *DeleteNullVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNullVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteNullVolumeRequest) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteNullVolumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteNullVolumeRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type UpdateNullVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The object's `name` field is used to identify the object to be updated.
	NullVolume *NullVolume `protobuf:"bytes,1,opt,name=null_volume,json=nullVolume,proto3" json:"null_volume,omitempty"`
	// The list of fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// If set to true, and the object is not found, a new object will be created.
	// In this situation, `update_mask` is ignored.
	AllowMissing bool `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *UpdateNullVolumeRequest) Reset() {
	*x = UpdateNullVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNullVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNullVolumeRequest) ProtoMessage() {}

func (x *UpdateNullVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNullVolumeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNullVolumeRequest) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateNullVolumeRequest) GetNullVolume() *NullVolume {
	if x != nil {
		return x.NullVolume
	}
	return nil
}

func (x *UpdateNullVolumeRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateNullVolumeRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type ListNullVolumesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent    string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListNullVolumesRequest) Reset() {
	*x = ListNullVolumesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNullVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNullVolumesRequest) ProtoMessage() {}

func (x *ListNullVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNullVolumesRequest.ProtoReflect.Descriptor instead.
func (*ListNullVolumesRequest) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{4}
}

func (x *ListNullVolumesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListNullVolumesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListNullVolumesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListNullVolumesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NullVolumes   []*NullVolume `protobuf:"bytes,1,rep,name=null_volumes,json=nullVolumes,proto3" json:"null_volumes,omitempty"`
	NextPageToken string        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListNullVolumesResponse) Reset() {
	*x = ListNullVolumesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNullVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNullVolumesResponse) ProtoMessage() {}

func (x *ListNullVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNullVolumesResponse.ProtoReflect.Descriptor instead.
func (*ListNullVolumesResponse) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{5}
}

func (x *ListNullVolumesResponse) GetNullVolumes() []*NullVolume {
	if x != nil {
		return x.NullVolumes
	}
	return nil
}

func (x *ListNullVolumesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetNullVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetNullVolumeRequest) Reset() {
	*x = GetNullVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNullVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNullVolumeRequest) ProtoMessage() {}

func (x *GetNullVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNullVolumeRequest.ProtoReflect.Descriptor instead.
func (*GetNullVolumeRequest) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{6}
}

func (x *GetNullVolumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StatsNullVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StatsNullVolumeRequest) Reset() {
	*x = StatsNullVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsNullVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsNullVolumeRequest) ProtoMessage() {}

func (x *StatsNullVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsNullVolumeRequest.ProtoReflect.Descriptor instead.
func (*StatsNullVolumeRequest) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{7}
}

func (x *StatsNullVolumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StatsNullVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats *VolumeStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *StatsNullVolumeResponse) Reset() {
	*x = StatsNullVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_null_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsNullVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsNullVolumeResponse) ProtoMessage() {}

func (x *StatsNullVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_null_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsNullVolumeResponse.ProtoReflect.Descriptor instead.
func (*StatsNullVolumeResponse) Descriptor() ([]byte, []int) {
	return file_backend_null_proto_rawDescGZIP(), []int{8}
}

func (x *StatsNullVolumeResponse) GetStats() *VolumeStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

var File_backend_null_proto protoreflect.FileDescriptor

var file_backend_null_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x6f, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x75, 0x69,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x0a, 0x4e, 0x75, 0x6c, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2f, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x3a, 0x38, 0xea, 0x41, 0x35, 0x0a, 0x21, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6f,
	0x70, 0x69, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x4e, 0x75,
	0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x10, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x2f, 0x7b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x7d, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x49, 0x64, 0x22, 0x79, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0xbc, 0x01,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0a,
	0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x93, 0x01, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x1f, 0x0a,
	0x1d, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2f, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0c, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x25, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x4e, 0x75, 0x6c, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x16,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2f, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x50, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x32, 0xa3, 0x07, 0x0a, 0x11, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2b,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x3a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0xda, 0x41, 0x1a,
	0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2c, 0x6e, 0x75, 0x6c, 0x6c,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x80, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xb1, 0x01,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75,
	0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22,
	0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x32, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x75,
	0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x73,
	0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x3a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0xda, 0x41, 0x17, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x12, 0x94, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0xda,
	0x41, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x99, 0x01,
	0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x75, 0x6c, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x4e, 0x75,
	0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x73, 0x74, 0x61,
	0x74, 0x73, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x5f, 0x0a, 0x12, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x42,
	0x10, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6f, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f, 0x70, 0x69, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_backend_null_proto_rawDescOnce sync.Once
	file_backend_null_proto_rawDescData = file_backend_null_proto_rawDesc
)

func file_backend_null_proto_rawDescGZIP() []byte {
	file_backend_null_proto_rawDescOnce.Do(func() {
		file_backend_null_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_null_proto_rawDescData)
	})
	return file_backend_null_proto_rawDescData
}

var file_backend_null_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_backend_null_proto_goTypes = []interface{}{
	(*NullVolume)(nil),              // 0: opi_api.storage.v1.NullVolume
	(*CreateNullVolumeRequest)(nil), // 1: opi_api.storage.v1.CreateNullVolumeRequest
	(*DeleteNullVolumeRequest)(nil), // 2: opi_api.storage.v1.DeleteNullVolumeRequest
	(*UpdateNullVolumeRequest)(nil), // 3: opi_api.storage.v1.UpdateNullVolumeRequest
	(*ListNullVolumesRequest)(nil),  // 4: opi_api.storage.v1.ListNullVolumesRequest
	(*ListNullVolumesResponse)(nil), // 5: opi_api.storage.v1.ListNullVolumesResponse
	(*GetNullVolumeRequest)(nil),    // 6: opi_api.storage.v1.GetNullVolumeRequest
	(*StatsNullVolumeRequest)(nil),  // 7: opi_api.storage.v1.StatsNullVolumeRequest
	(*StatsNullVolumeResponse)(nil), // 8: opi_api.storage.v1.StatsNullVolumeResponse
	(*_go.Uuid)(nil),                // 9: opi_api.common.v1.Uuid
	(*fieldmaskpb.FieldMask)(nil),   // 10: google.protobuf.FieldMask
	(*VolumeStats)(nil),             // 11: opi_api.storage.v1.VolumeStats
	(*emptypb.Empty)(nil),           // 12: google.protobuf.Empty
}
var file_backend_null_proto_depIdxs = []int32{
	9,  // 0: opi_api.storage.v1.NullVolume.uuid:type_name -> opi_api.common.v1.Uuid
	0,  // 1: opi_api.storage.v1.CreateNullVolumeRequest.null_volume:type_name -> opi_api.storage.v1.NullVolume
	0,  // 2: opi_api.storage.v1.UpdateNullVolumeRequest.null_volume:type_name -> opi_api.storage.v1.NullVolume
	10, // 3: opi_api.storage.v1.UpdateNullVolumeRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 4: opi_api.storage.v1.ListNullVolumesResponse.null_volumes:type_name -> opi_api.storage.v1.NullVolume
	11, // 5: opi_api.storage.v1.StatsNullVolumeResponse.stats:type_name -> opi_api.storage.v1.VolumeStats
	1,  // 6: opi_api.storage.v1.NullVolumeService.CreateNullVolume:input_type -> opi_api.storage.v1.CreateNullVolumeRequest
	2,  // 7: opi_api.storage.v1.NullVolumeService.DeleteNullVolume:input_type -> opi_api.storage.v1.DeleteNullVolumeRequest
	3,  // 8: opi_api.storage.v1.NullVolumeService.UpdateNullVolume:input_type -> opi_api.storage.v1.UpdateNullVolumeRequest
	4,  // 9: opi_api.storage.v1.NullVolumeService.ListNullVolumes:input_type -> opi_api.storage.v1.ListNullVolumesRequest
	6,  // 10: opi_api.storage.v1.NullVolumeService.GetNullVolume:input_type -> opi_api.storage.v1.GetNullVolumeRequest
	7,  // 11: opi_api.storage.v1.NullVolumeService.StatsNullVolume:input_type -> opi_api.storage.v1.StatsNullVolumeRequest
	0,  // 12: opi_api.storage.v1.NullVolumeService.CreateNullVolume:output_type -> opi_api.storage.v1.NullVolume
	12, // 13: opi_api.storage.v1.NullVolumeService.DeleteNullVolume:output_type -> google.protobuf.Empty
	0,  // 14: opi_api.storage.v1.NullVolumeService.UpdateNullVolume:output_type -> opi_api.storage.v1.NullVolume
	5,  // 15: opi_api.storage.v1.NullVolumeService.ListNullVolumes:output_type -> opi_api.storage.v1.ListNullVolumesResponse
	0,  // 16: opi_api.storage.v1.NullVolumeService.GetNullVolume:output_type -> opi_api.storage.v1.NullVolume
	8,  // 17: opi_api.storage.v1.NullVolumeService.StatsNullVolume:output_type -> opi_api.storage.v1.StatsNullVolumeResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_backend_null_proto_init() }
func file_backend_null_proto_init() {
	if File_backend_null_proto != nil {
		return
	}
	file_opicommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_backend_null_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNullVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNullVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNullVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNullVolumesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNullVolumesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNullVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsNullVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_null_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsNullVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_null_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_null_proto_goTypes,
		DependencyIndexes: file_backend_null_proto_depIdxs,
		MessageInfos:      file_backend_null_proto_msgTypes,
	}.Build()
	File_backend_null_proto = out.File
	file_backend_null_proto_rawDesc = nil
	file_backend_null_proto_goTypes = nil
	file_backend_null_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NullVolumeServiceClient is the client API for NullVolumeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NullVolumeServiceClient interface {
	CreateNullVolume(ctx context.Context, in *CreateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error)
	DeleteNullVolume(ctx context.Context, in *DeleteNullVolumeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateNullVolume(ctx context.Context, in *UpdateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error)
	ListNullVolumes(ctx context.Context, in *ListNullVolumesRequest, opts ...grpc.CallOption) (*ListNullVolumesResponse, error)
	GetNullVolume(ctx context.Context, in *GetNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error)
	StatsNullVolume(ctx context.Context, in *StatsNullVolumeRequest, opts ...grpc.CallOption) (*StatsNullVolumeResponse, error)
}

type nullVolumeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNullVolumeServiceClient(cc grpc.ClientConnInterface) NullVolumeServiceClient {
	return &nullVolumeServiceClient{cc}
}

func (c *nullVolumeServiceClient) CreateNullVolume(ctx context.Context, in *CreateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error) {
	out := new(NullVolume)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.NullVolumeService/CreateNullVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) DeleteNullVolume(ctx context.Context, in *DeleteNullVolumeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.NullVolumeService/DeleteNullVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) UpdateNullVolume(ctx context.Context, in *UpdateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error) {
	out := new(NullVolume)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.NullVolumeService/UpdateNullVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) ListNullVolumes(ctx context.Context, in *ListNullVolumesRequest, opts ...grpc.CallOption) (*ListNullVolumesResponse, error) {
	out := new(ListNullVolumesResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.NullVolumeService/ListNullVolumes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) GetNullVolume(ctx context.Context, in *GetNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error) {
	out := new(NullVolume)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.NullVolumeService/GetNullVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) StatsNullVolume(ctx context.Context, in *StatsNullVolumeRequest, opts ...grpc.CallOption) (*StatsNullVolumeResponse, error) {
	out := new(StatsNullVolumeResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.NullVolumeService/StatsNullVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NullVolumeServiceServer is the server API for NullVolumeService service.
type NullVolumeServiceServer interface {
	CreateNullVolume(context.Context, *CreateNullVolumeRequest) (*NullVolume, error)
	DeleteNullVolume(context.Context, *DeleteNullVolumeRequest) (*emptypb.Empty, error)
	UpdateNullVolume(context.Context, *UpdateNullVolumeRequest) (*NullVolume, error)
	ListNullVolumes(context.Context, *ListNullVolumesRequest) (*ListNullVolumesResponse, error)
	GetNullVolume(context.Context, *GetNullVolumeRequest) (*NullVolume, error)
	StatsNullVolume(context.Context, *StatsNullVolumeRequest) (*StatsNullVolumeResponse, error)
}

// UnimplementedNullVolumeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNullVolumeServiceServer struct {
}

func (*UnimplementedNullVolumeServiceServer) CreateNullVolume(context.Context, *CreateNullVolumeRequest) (*NullVolume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNullVolume not implemented")
}
func (*UnimplementedNullVolumeServiceServer) DeleteNullVolume(context.Context, *DeleteNullVolumeRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNullVolume not implemented")
}
func (*UnimplementedNullVolumeServiceServer) UpdateNullVolume(context.Context, *UpdateNullVolumeRequest) (*NullVolume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNullVolume not implemented")
}
func (*UnimplementedNullVolumeServiceServer) ListNullVolumes(context.Context, *ListNullVolumesRequest) (*ListNullVolumesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNullVolumes not implemented")
}
func (*UnimplementedNullVolumeServiceServer) GetNullVolume(context.Context, *GetNullVolumeRequest) (*NullVolume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNullVolume not implemented")
}
func (*UnimplementedNullVolumeServiceServer) StatsNullVolume(context.Context, *StatsNullVolumeRequest) (*StatsNullVolumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatsNullVolume not implemented")
}

func RegisterNullVolumeServiceServer(s *grpc.Server, srv NullVolumeServiceServer) {
	s.RegisterService(&_NullVolumeService_serviceDesc, srv)
}

func _NullVolumeService_CreateNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).CreateNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.NullVolumeService/CreateNullVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).CreateNullVolume(ctx, req.(*CreateNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_DeleteNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).DeleteNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.NullVolumeService/DeleteNullVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).DeleteNullVolume(ctx, req.(*DeleteNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_UpdateNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).UpdateNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.NullVolumeService/UpdateNullVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).UpdateNullVolume(ctx, req.(*UpdateNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_ListNullVolumes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNullVolumesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).ListNullVolumes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.NullVolumeService/ListNullVolumes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).ListNullVolumes(ctx, req.(*ListNullVolumesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_GetNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).GetNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.NullVolumeService/GetNullVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).GetNullVolume(ctx, req.(*GetNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_StatsNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).StatsNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.NullVolumeService/StatsNullVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).StatsNullVolume(ctx, req.(*StatsNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NullVolumeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.storage.v1.NullVolumeService",
	HandlerType: (*NullVolumeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNullVolume",
			Handler:    _NullVolumeService_CreateNullVolume_Handler,
		},
		{
			MethodName: "DeleteNullVolume",
			Handler:    _NullVolumeService_DeleteNullVolume_Handler,
		},
		{
			MethodName: "UpdateNullVolume",
			Handler:    _NullVolumeService_UpdateNullVolume_Handler,
		},
		{
			MethodName: "ListNullVolumes",
			Handler:    _NullVolumeService_ListNullVolumes_Handler,
		},
		{
			MethodName: "GetNullVolume",
			Handler:    _NullVolumeService_GetNullVolume_Handler,
		},
		{
			MethodName: "StatsNullVolume",
			Handler:    _NullVolumeService_StatsNullVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend_null.proto",
}
