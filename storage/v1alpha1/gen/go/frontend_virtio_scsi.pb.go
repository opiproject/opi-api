// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: frontend_virtio_scsi.proto

package _go

import (
	context "context"
	_go "github.com/opiproject/opi-api/common/v1/gen/go"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtioScsiController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *_go.ObjectKey       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PcieId *NvmeControllerPciId `protobuf:"bytes,2,opt,name=pcie_id,json=pcieId,proto3" json:"pcie_id,omitempty"`
}

func (x *VirtioScsiController) Reset() {
	*x = VirtioScsiController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiController) ProtoMessage() {}

func (x *VirtioScsiController) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiController.ProtoReflect.Descriptor instead.
func (*VirtioScsiController) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{0}
}

func (x *VirtioScsiController) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiController) GetPcieId() *NvmeControllerPciId {
	if x != nil {
		return x.PcieId
	}
	return nil
}

type VirtioScsiLun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ControllerId *_go.ObjectKey `protobuf:"bytes,2,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
	Bdev         string         `protobuf:"bytes,3,opt,name=bdev,proto3" json:"bdev,omitempty"`
}

func (x *VirtioScsiLun) Reset() {
	*x = VirtioScsiLun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLun) ProtoMessage() {}

func (x *VirtioScsiLun) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLun.ProtoReflect.Descriptor instead.
func (*VirtioScsiLun) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{1}
}

func (x *VirtioScsiLun) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiLun) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

func (x *VirtioScsiLun) GetBdev() string {
	if x != nil {
		return x.Bdev
	}
	return ""
}

type VirtioScsiControllerCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller *VirtioScsiController `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *VirtioScsiControllerCreateRequest) Reset() {
	*x = VirtioScsiControllerCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerCreateRequest) ProtoMessage() {}

func (x *VirtioScsiControllerCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerCreateRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerCreateRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{2}
}

func (x *VirtioScsiControllerCreateRequest) GetController() *VirtioScsiController {
	if x != nil {
		return x.Controller
	}
	return nil
}

type VirtioScsiControllerDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *VirtioScsiControllerDeleteRequest) Reset() {
	*x = VirtioScsiControllerDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerDeleteRequest) ProtoMessage() {}

func (x *VirtioScsiControllerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerDeleteRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{3}
}

func (x *VirtioScsiControllerDeleteRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type VirtioScsiControllerUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller *VirtioScsiController `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
}

func (x *VirtioScsiControllerUpdateRequest) Reset() {
	*x = VirtioScsiControllerUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerUpdateRequest) ProtoMessage() {}

func (x *VirtioScsiControllerUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerUpdateRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerUpdateRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{4}
}

func (x *VirtioScsiControllerUpdateRequest) GetController() *VirtioScsiController {
	if x != nil {
		return x.Controller
	}
	return nil
}

type VirtioScsiControllerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VirtioScsiControllerListRequest) Reset() {
	*x = VirtioScsiControllerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerListRequest) ProtoMessage() {}

func (x *VirtioScsiControllerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerListRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerListRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{5}
}

type VirtioScsiControllerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller []*VirtioScsiController `protobuf:"bytes,1,rep,name=controller,proto3" json:"controller,omitempty"`
}

func (x *VirtioScsiControllerListResponse) Reset() {
	*x = VirtioScsiControllerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerListResponse) ProtoMessage() {}

func (x *VirtioScsiControllerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerListResponse.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerListResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{6}
}

func (x *VirtioScsiControllerListResponse) GetController() []*VirtioScsiController {
	if x != nil {
		return x.Controller
	}
	return nil
}

type VirtioScsiControllerGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *VirtioScsiControllerGetRequest) Reset() {
	*x = VirtioScsiControllerGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerGetRequest) ProtoMessage() {}

func (x *VirtioScsiControllerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerGetRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerGetRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{7}
}

func (x *VirtioScsiControllerGetRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type VirtioScsiControllerStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *VirtioScsiControllerStatsRequest) Reset() {
	*x = VirtioScsiControllerStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerStatsRequest) ProtoMessage() {}

func (x *VirtioScsiControllerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerStatsRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerStatsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{8}
}

func (x *VirtioScsiControllerStatsRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type VirtioScsiControllerStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stats string         `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *VirtioScsiControllerStatsResponse) Reset() {
	*x = VirtioScsiControllerStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerStatsResponse) ProtoMessage() {}

func (x *VirtioScsiControllerStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerStatsResponse.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerStatsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{9}
}

func (x *VirtioScsiControllerStatsResponse) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiControllerStatsResponse) GetStats() string {
	if x != nil {
		return x.Stats
	}
	return ""
}

type VirtioScsiLunCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lun *VirtioScsiLun `protobuf:"bytes,1,opt,name=lun,proto3" json:"lun,omitempty"`
}

func (x *VirtioScsiLunCreateRequest) Reset() {
	*x = VirtioScsiLunCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunCreateRequest) ProtoMessage() {}

func (x *VirtioScsiLunCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunCreateRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunCreateRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{10}
}

func (x *VirtioScsiLunCreateRequest) GetLun() *VirtioScsiLun {
	if x != nil {
		return x.Lun
	}
	return nil
}

type VirtioScsiLunDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
	LunId        *_go.ObjectKey `protobuf:"bytes,2,opt,name=lun_id,json=lunId,proto3" json:"lun_id,omitempty"`
}

func (x *VirtioScsiLunDeleteRequest) Reset() {
	*x = VirtioScsiLunDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunDeleteRequest) ProtoMessage() {}

func (x *VirtioScsiLunDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunDeleteRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunDeleteRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{11}
}

func (x *VirtioScsiLunDeleteRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

func (x *VirtioScsiLunDeleteRequest) GetLunId() *_go.ObjectKey {
	if x != nil {
		return x.LunId
	}
	return nil
}

type VirtioScsiLunUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lun *VirtioScsiLun `protobuf:"bytes,1,opt,name=lun,proto3" json:"lun,omitempty"`
}

func (x *VirtioScsiLunUpdateRequest) Reset() {
	*x = VirtioScsiLunUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunUpdateRequest) ProtoMessage() {}

func (x *VirtioScsiLunUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunUpdateRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunUpdateRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{12}
}

func (x *VirtioScsiLunUpdateRequest) GetLun() *VirtioScsiLun {
	if x != nil {
		return x.Lun
	}
	return nil
}

type VirtioScsiLunListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *VirtioScsiLunListRequest) Reset() {
	*x = VirtioScsiLunListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunListRequest) ProtoMessage() {}

func (x *VirtioScsiLunListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunListRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunListRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{13}
}

func (x *VirtioScsiLunListRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type VirtioScsiLunListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lun []*VirtioScsiLun `protobuf:"bytes,1,rep,name=lun,proto3" json:"lun,omitempty"`
}

func (x *VirtioScsiLunListResponse) Reset() {
	*x = VirtioScsiLunListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunListResponse) ProtoMessage() {}

func (x *VirtioScsiLunListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunListResponse.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunListResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{14}
}

func (x *VirtioScsiLunListResponse) GetLun() []*VirtioScsiLun {
	if x != nil {
		return x.Lun
	}
	return nil
}

type VirtioScsiLunGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
	LunId        *_go.ObjectKey `protobuf:"bytes,2,opt,name=lun_id,json=lunId,proto3" json:"lun_id,omitempty"`
}

func (x *VirtioScsiLunGetRequest) Reset() {
	*x = VirtioScsiLunGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunGetRequest) ProtoMessage() {}

func (x *VirtioScsiLunGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunGetRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunGetRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{15}
}

func (x *VirtioScsiLunGetRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

func (x *VirtioScsiLunGetRequest) GetLunId() *_go.ObjectKey {
	if x != nil {
		return x.LunId
	}
	return nil
}

type VirtioScsiLunStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
	LunId        *_go.ObjectKey `protobuf:"bytes,2,opt,name=lun_id,json=lunId,proto3" json:"lun_id,omitempty"`
}

func (x *VirtioScsiLunStatsRequest) Reset() {
	*x = VirtioScsiLunStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunStatsRequest) ProtoMessage() {}

func (x *VirtioScsiLunStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunStatsRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunStatsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{16}
}

func (x *VirtioScsiLunStatsRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

func (x *VirtioScsiLunStatsRequest) GetLunId() *_go.ObjectKey {
	if x != nil {
		return x.LunId
	}
	return nil
}

type VirtioScsiLunStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stats string         `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *VirtioScsiLunStatsResponse) Reset() {
	*x = VirtioScsiLunStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunStatsResponse) ProtoMessage() {}

func (x *VirtioScsiLunStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunStatsResponse.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunStatsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{17}
}

func (x *VirtioScsiLunStatsResponse) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiLunStatsResponse) GetStats() string {
	if x != nil {
		return x.Stats
	}
	return ""
}

var File_frontend_virtio_scsi_proto protoreflect.FileDescriptor

var file_frontend_virtio_scsi_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x14,
	0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x63, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x76, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x63, 0x69, 0x49, 0x64, 0x52, 0x06, 0x70, 0x63,
	0x69, 0x65, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x0d, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x64, 0x65, 0x76, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x64, 0x65, 0x76, 0x22, 0x6d, 0x0a, 0x21, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x21, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x6d, 0x0a, 0x21, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x22, 0x21, 0x0a, 0x1f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x20, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x22, 0x63, 0x0a, 0x1e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x20, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67,
	0x0a, 0x21, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x1a, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x6c, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x03, 0x6c, 0x75, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x1a, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06,
	0x6c, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x6c, 0x75, 0x6e, 0x49,
	0x64, 0x22, 0x51, 0x0a, 0x1a, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c,
	0x75, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x33, 0x0a, 0x03, 0x6c, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52,
	0x03, 0x6c, 0x75, 0x6e, 0x22, 0x5d, 0x0a, 0x18, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x4c, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x4c, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x03, 0x6c, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e,
	0x52, 0x03, 0x6c, 0x75, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x05, 0x6c, 0x75, 0x6e, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x6c, 0x75, 0x6e, 0x49, 0x64, 0x22,
	0x60, 0x0a, 0x1a, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x32, 0xba, 0x0e, 0x0a, 0x19, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xaa, 0x01, 0x0a, 0x1a, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22,
	0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x73, 0x3a, 0x0e, 0x76, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x12, 0x99, 0x01, 0x0a,
	0x1a, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x26, 0x2a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63,
	0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x73, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73,
	0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x7d, 0x12, 0xaa, 0x01, 0x0a, 0x1a, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x32, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69,
	0x63, 0x74, 0x72, 0x6c, 0x73, 0x3a, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73,
	0x69, 0x63, 0x74, 0x72, 0x6c, 0x12, 0xa2, 0x01, 0x0a, 0x18, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x33, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x73, 0x12, 0xa5, 0x01, 0x0a, 0x17, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x32, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x76,
	0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c,
	0x73, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72,
	0x6c, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x19, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x34, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x93, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63,
	0x73, 0x69, 0x6c, 0x75, 0x6e, 0x73, 0x3a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63,
	0x73, 0x69, 0x6c, 0x75, 0x6e, 0x12, 0x89, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2e, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e,
	0x73, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e,
	0x7d, 0x12, 0x93, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x4c, 0x75, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x32, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x73, 0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e, 0x73, 0x3a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x73, 0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e, 0x12, 0x8c, 0x01, 0x0a, 0x11, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63,
	0x73, 0x69, 0x6c, 0x75, 0x6e, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x10, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x2b, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73,
	0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e, 0x73, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73,
	0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e, 0x7d, 0x12, 0x75, 0x0a, 0x12, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2d, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x66,
	0x0a, 0x12, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x42, 0x17, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x69, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f, 0x70, 0x69, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frontend_virtio_scsi_proto_rawDescOnce sync.Once
	file_frontend_virtio_scsi_proto_rawDescData = file_frontend_virtio_scsi_proto_rawDesc
)

func file_frontend_virtio_scsi_proto_rawDescGZIP() []byte {
	file_frontend_virtio_scsi_proto_rawDescOnce.Do(func() {
		file_frontend_virtio_scsi_proto_rawDescData = protoimpl.X.CompressGZIP(file_frontend_virtio_scsi_proto_rawDescData)
	})
	return file_frontend_virtio_scsi_proto_rawDescData
}

var file_frontend_virtio_scsi_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_frontend_virtio_scsi_proto_goTypes = []interface{}{
	(*VirtioScsiController)(nil),              // 0: opi_api.storage.v1.VirtioScsiController
	(*VirtioScsiLun)(nil),                     // 1: opi_api.storage.v1.VirtioScsiLun
	(*VirtioScsiControllerCreateRequest)(nil), // 2: opi_api.storage.v1.VirtioScsiControllerCreateRequest
	(*VirtioScsiControllerDeleteRequest)(nil), // 3: opi_api.storage.v1.VirtioScsiControllerDeleteRequest
	(*VirtioScsiControllerUpdateRequest)(nil), // 4: opi_api.storage.v1.VirtioScsiControllerUpdateRequest
	(*VirtioScsiControllerListRequest)(nil),   // 5: opi_api.storage.v1.VirtioScsiControllerListRequest
	(*VirtioScsiControllerListResponse)(nil),  // 6: opi_api.storage.v1.VirtioScsiControllerListResponse
	(*VirtioScsiControllerGetRequest)(nil),    // 7: opi_api.storage.v1.VirtioScsiControllerGetRequest
	(*VirtioScsiControllerStatsRequest)(nil),  // 8: opi_api.storage.v1.VirtioScsiControllerStatsRequest
	(*VirtioScsiControllerStatsResponse)(nil), // 9: opi_api.storage.v1.VirtioScsiControllerStatsResponse
	(*VirtioScsiLunCreateRequest)(nil),        // 10: opi_api.storage.v1.VirtioScsiLunCreateRequest
	(*VirtioScsiLunDeleteRequest)(nil),        // 11: opi_api.storage.v1.VirtioScsiLunDeleteRequest
	(*VirtioScsiLunUpdateRequest)(nil),        // 12: opi_api.storage.v1.VirtioScsiLunUpdateRequest
	(*VirtioScsiLunListRequest)(nil),          // 13: opi_api.storage.v1.VirtioScsiLunListRequest
	(*VirtioScsiLunListResponse)(nil),         // 14: opi_api.storage.v1.VirtioScsiLunListResponse
	(*VirtioScsiLunGetRequest)(nil),           // 15: opi_api.storage.v1.VirtioScsiLunGetRequest
	(*VirtioScsiLunStatsRequest)(nil),         // 16: opi_api.storage.v1.VirtioScsiLunStatsRequest
	(*VirtioScsiLunStatsResponse)(nil),        // 17: opi_api.storage.v1.VirtioScsiLunStatsResponse
	(*_go.ObjectKey)(nil),                     // 18: opi_api.common.v1.ObjectKey
	(*NvmeControllerPciId)(nil),               // 19: opi_api.storage.v1.NvmeControllerPciId
	(*emptypb.Empty)(nil),                     // 20: google.protobuf.Empty
}
var file_frontend_virtio_scsi_proto_depIdxs = []int32{
	18, // 0: opi_api.storage.v1.VirtioScsiController.id:type_name -> opi_api.common.v1.ObjectKey
	19, // 1: opi_api.storage.v1.VirtioScsiController.pcie_id:type_name -> opi_api.storage.v1.NvmeControllerPciId
	18, // 2: opi_api.storage.v1.VirtioScsiLun.id:type_name -> opi_api.common.v1.ObjectKey
	18, // 3: opi_api.storage.v1.VirtioScsiLun.controller_id:type_name -> opi_api.common.v1.ObjectKey
	0,  // 4: opi_api.storage.v1.VirtioScsiControllerCreateRequest.controller:type_name -> opi_api.storage.v1.VirtioScsiController
	18, // 5: opi_api.storage.v1.VirtioScsiControllerDeleteRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	0,  // 6: opi_api.storage.v1.VirtioScsiControllerUpdateRequest.controller:type_name -> opi_api.storage.v1.VirtioScsiController
	0,  // 7: opi_api.storage.v1.VirtioScsiControllerListResponse.controller:type_name -> opi_api.storage.v1.VirtioScsiController
	18, // 8: opi_api.storage.v1.VirtioScsiControllerGetRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	18, // 9: opi_api.storage.v1.VirtioScsiControllerStatsRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	18, // 10: opi_api.storage.v1.VirtioScsiControllerStatsResponse.id:type_name -> opi_api.common.v1.ObjectKey
	1,  // 11: opi_api.storage.v1.VirtioScsiLunCreateRequest.lun:type_name -> opi_api.storage.v1.VirtioScsiLun
	18, // 12: opi_api.storage.v1.VirtioScsiLunDeleteRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	18, // 13: opi_api.storage.v1.VirtioScsiLunDeleteRequest.lun_id:type_name -> opi_api.common.v1.ObjectKey
	1,  // 14: opi_api.storage.v1.VirtioScsiLunUpdateRequest.lun:type_name -> opi_api.storage.v1.VirtioScsiLun
	18, // 15: opi_api.storage.v1.VirtioScsiLunListRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	1,  // 16: opi_api.storage.v1.VirtioScsiLunListResponse.lun:type_name -> opi_api.storage.v1.VirtioScsiLun
	18, // 17: opi_api.storage.v1.VirtioScsiLunGetRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	18, // 18: opi_api.storage.v1.VirtioScsiLunGetRequest.lun_id:type_name -> opi_api.common.v1.ObjectKey
	18, // 19: opi_api.storage.v1.VirtioScsiLunStatsRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	18, // 20: opi_api.storage.v1.VirtioScsiLunStatsRequest.lun_id:type_name -> opi_api.common.v1.ObjectKey
	18, // 21: opi_api.storage.v1.VirtioScsiLunStatsResponse.id:type_name -> opi_api.common.v1.ObjectKey
	2,  // 22: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerCreate:input_type -> opi_api.storage.v1.VirtioScsiControllerCreateRequest
	3,  // 23: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerDelete:input_type -> opi_api.storage.v1.VirtioScsiControllerDeleteRequest
	4,  // 24: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerUpdate:input_type -> opi_api.storage.v1.VirtioScsiControllerUpdateRequest
	5,  // 25: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerList:input_type -> opi_api.storage.v1.VirtioScsiControllerListRequest
	7,  // 26: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerGet:input_type -> opi_api.storage.v1.VirtioScsiControllerGetRequest
	8,  // 27: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerStats:input_type -> opi_api.storage.v1.VirtioScsiControllerStatsRequest
	10, // 28: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunCreate:input_type -> opi_api.storage.v1.VirtioScsiLunCreateRequest
	11, // 29: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunDelete:input_type -> opi_api.storage.v1.VirtioScsiLunDeleteRequest
	12, // 30: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunUpdate:input_type -> opi_api.storage.v1.VirtioScsiLunUpdateRequest
	13, // 31: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunList:input_type -> opi_api.storage.v1.VirtioScsiLunListRequest
	15, // 32: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunGet:input_type -> opi_api.storage.v1.VirtioScsiLunGetRequest
	16, // 33: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunStats:input_type -> opi_api.storage.v1.VirtioScsiLunStatsRequest
	0,  // 34: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerCreate:output_type -> opi_api.storage.v1.VirtioScsiController
	20, // 35: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerDelete:output_type -> google.protobuf.Empty
	0,  // 36: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerUpdate:output_type -> opi_api.storage.v1.VirtioScsiController
	6,  // 37: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerList:output_type -> opi_api.storage.v1.VirtioScsiControllerListResponse
	0,  // 38: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerGet:output_type -> opi_api.storage.v1.VirtioScsiController
	9,  // 39: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerStats:output_type -> opi_api.storage.v1.VirtioScsiControllerStatsResponse
	1,  // 40: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunCreate:output_type -> opi_api.storage.v1.VirtioScsiLun
	20, // 41: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunDelete:output_type -> google.protobuf.Empty
	1,  // 42: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunUpdate:output_type -> opi_api.storage.v1.VirtioScsiLun
	14, // 43: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunList:output_type -> opi_api.storage.v1.VirtioScsiLunListResponse
	1,  // 44: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunGet:output_type -> opi_api.storage.v1.VirtioScsiLun
	17, // 45: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunStats:output_type -> opi_api.storage.v1.VirtioScsiLunStatsResponse
	34, // [34:46] is the sub-list for method output_type
	22, // [22:34] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_frontend_virtio_scsi_proto_init() }
func file_frontend_virtio_scsi_proto_init() {
	if File_frontend_virtio_scsi_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_frontend_virtio_scsi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frontend_virtio_scsi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frontend_virtio_scsi_proto_goTypes,
		DependencyIndexes: file_frontend_virtio_scsi_proto_depIdxs,
		MessageInfos:      file_frontend_virtio_scsi_proto_msgTypes,
	}.Build()
	File_frontend_virtio_scsi_proto = out.File
	file_frontend_virtio_scsi_proto_rawDesc = nil
	file_frontend_virtio_scsi_proto_goTypes = nil
	file_frontend_virtio_scsi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FrontendVirtioScsiServiceClient is the client API for FrontendVirtioScsiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FrontendVirtioScsiServiceClient interface {
	VirtioScsiControllerCreate(ctx context.Context, in *VirtioScsiControllerCreateRequest, opts ...grpc.CallOption) (*VirtioScsiController, error)
	VirtioScsiControllerDelete(ctx context.Context, in *VirtioScsiControllerDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	VirtioScsiControllerUpdate(ctx context.Context, in *VirtioScsiControllerUpdateRequest, opts ...grpc.CallOption) (*VirtioScsiController, error)
	VirtioScsiControllerList(ctx context.Context, in *VirtioScsiControllerListRequest, opts ...grpc.CallOption) (*VirtioScsiControllerListResponse, error)
	VirtioScsiControllerGet(ctx context.Context, in *VirtioScsiControllerGetRequest, opts ...grpc.CallOption) (*VirtioScsiController, error)
	VirtioScsiControllerStats(ctx context.Context, in *VirtioScsiControllerStatsRequest, opts ...grpc.CallOption) (*VirtioScsiControllerStatsResponse, error)
	VirtioScsiLunCreate(ctx context.Context, in *VirtioScsiLunCreateRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error)
	VirtioScsiLunDelete(ctx context.Context, in *VirtioScsiLunDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	VirtioScsiLunUpdate(ctx context.Context, in *VirtioScsiLunUpdateRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error)
	VirtioScsiLunList(ctx context.Context, in *VirtioScsiLunListRequest, opts ...grpc.CallOption) (*VirtioScsiLunListResponse, error)
	VirtioScsiLunGet(ctx context.Context, in *VirtioScsiLunGetRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error)
	VirtioScsiLunStats(ctx context.Context, in *VirtioScsiLunStatsRequest, opts ...grpc.CallOption) (*VirtioScsiLunStatsResponse, error)
}

type frontendVirtioScsiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFrontendVirtioScsiServiceClient(cc grpc.ClientConnInterface) FrontendVirtioScsiServiceClient {
	return &frontendVirtioScsiServiceClient{cc}
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiControllerCreate(ctx context.Context, in *VirtioScsiControllerCreateRequest, opts ...grpc.CallOption) (*VirtioScsiController, error) {
	out := new(VirtioScsiController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiControllerDelete(ctx context.Context, in *VirtioScsiControllerDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiControllerUpdate(ctx context.Context, in *VirtioScsiControllerUpdateRequest, opts ...grpc.CallOption) (*VirtioScsiController, error) {
	out := new(VirtioScsiController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiControllerList(ctx context.Context, in *VirtioScsiControllerListRequest, opts ...grpc.CallOption) (*VirtioScsiControllerListResponse, error) {
	out := new(VirtioScsiControllerListResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiControllerGet(ctx context.Context, in *VirtioScsiControllerGetRequest, opts ...grpc.CallOption) (*VirtioScsiController, error) {
	out := new(VirtioScsiController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiControllerStats(ctx context.Context, in *VirtioScsiControllerStatsRequest, opts ...grpc.CallOption) (*VirtioScsiControllerStatsResponse, error) {
	out := new(VirtioScsiControllerStatsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiLunCreate(ctx context.Context, in *VirtioScsiLunCreateRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error) {
	out := new(VirtioScsiLun)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiLunDelete(ctx context.Context, in *VirtioScsiLunDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiLunUpdate(ctx context.Context, in *VirtioScsiLunUpdateRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error) {
	out := new(VirtioScsiLun)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiLunList(ctx context.Context, in *VirtioScsiLunListRequest, opts ...grpc.CallOption) (*VirtioScsiLunListResponse, error) {
	out := new(VirtioScsiLunListResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiLunGet(ctx context.Context, in *VirtioScsiLunGetRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error) {
	out := new(VirtioScsiLun)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiLunStats(ctx context.Context, in *VirtioScsiLunStatsRequest, opts ...grpc.CallOption) (*VirtioScsiLunStatsResponse, error) {
	out := new(VirtioScsiLunStatsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrontendVirtioScsiServiceServer is the server API for FrontendVirtioScsiService service.
type FrontendVirtioScsiServiceServer interface {
	VirtioScsiControllerCreate(context.Context, *VirtioScsiControllerCreateRequest) (*VirtioScsiController, error)
	VirtioScsiControllerDelete(context.Context, *VirtioScsiControllerDeleteRequest) (*emptypb.Empty, error)
	VirtioScsiControllerUpdate(context.Context, *VirtioScsiControllerUpdateRequest) (*VirtioScsiController, error)
	VirtioScsiControllerList(context.Context, *VirtioScsiControllerListRequest) (*VirtioScsiControllerListResponse, error)
	VirtioScsiControllerGet(context.Context, *VirtioScsiControllerGetRequest) (*VirtioScsiController, error)
	VirtioScsiControllerStats(context.Context, *VirtioScsiControllerStatsRequest) (*VirtioScsiControllerStatsResponse, error)
	VirtioScsiLunCreate(context.Context, *VirtioScsiLunCreateRequest) (*VirtioScsiLun, error)
	VirtioScsiLunDelete(context.Context, *VirtioScsiLunDeleteRequest) (*emptypb.Empty, error)
	VirtioScsiLunUpdate(context.Context, *VirtioScsiLunUpdateRequest) (*VirtioScsiLun, error)
	VirtioScsiLunList(context.Context, *VirtioScsiLunListRequest) (*VirtioScsiLunListResponse, error)
	VirtioScsiLunGet(context.Context, *VirtioScsiLunGetRequest) (*VirtioScsiLun, error)
	VirtioScsiLunStats(context.Context, *VirtioScsiLunStatsRequest) (*VirtioScsiLunStatsResponse, error)
}

// UnimplementedFrontendVirtioScsiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFrontendVirtioScsiServiceServer struct {
}

func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiControllerCreate(context.Context, *VirtioScsiControllerCreateRequest) (*VirtioScsiController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiControllerCreate not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiControllerDelete(context.Context, *VirtioScsiControllerDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiControllerDelete not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiControllerUpdate(context.Context, *VirtioScsiControllerUpdateRequest) (*VirtioScsiController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiControllerUpdate not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiControllerList(context.Context, *VirtioScsiControllerListRequest) (*VirtioScsiControllerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiControllerList not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiControllerGet(context.Context, *VirtioScsiControllerGetRequest) (*VirtioScsiController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiControllerGet not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiControllerStats(context.Context, *VirtioScsiControllerStatsRequest) (*VirtioScsiControllerStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiControllerStats not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiLunCreate(context.Context, *VirtioScsiLunCreateRequest) (*VirtioScsiLun, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiLunCreate not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiLunDelete(context.Context, *VirtioScsiLunDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiLunDelete not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiLunUpdate(context.Context, *VirtioScsiLunUpdateRequest) (*VirtioScsiLun, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiLunUpdate not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiLunList(context.Context, *VirtioScsiLunListRequest) (*VirtioScsiLunListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiLunList not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiLunGet(context.Context, *VirtioScsiLunGetRequest) (*VirtioScsiLun, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiLunGet not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiLunStats(context.Context, *VirtioScsiLunStatsRequest) (*VirtioScsiLunStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiLunStats not implemented")
}

func RegisterFrontendVirtioScsiServiceServer(s *grpc.Server, srv FrontendVirtioScsiServiceServer) {
	s.RegisterService(&_FrontendVirtioScsiService_serviceDesc, srv)
}

func _FrontendVirtioScsiService_VirtioScsiControllerCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiControllerCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerCreate(ctx, req.(*VirtioScsiControllerCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiControllerDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiControllerDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerDelete(ctx, req.(*VirtioScsiControllerDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiControllerUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiControllerUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerUpdate(ctx, req.(*VirtioScsiControllerUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiControllerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiControllerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerList(ctx, req.(*VirtioScsiControllerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiControllerGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiControllerGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerGet(ctx, req.(*VirtioScsiControllerGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiControllerStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiControllerStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerStats(ctx, req.(*VirtioScsiControllerStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiLunCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiLunCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunCreate(ctx, req.(*VirtioScsiLunCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiLunDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiLunDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunDelete(ctx, req.(*VirtioScsiLunDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiLunUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiLunUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunUpdate(ctx, req.(*VirtioScsiLunUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiLunList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiLunListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunList(ctx, req.(*VirtioScsiLunListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiLunGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiLunGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunGet(ctx, req.(*VirtioScsiLunGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiLunStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiLunStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunStats(ctx, req.(*VirtioScsiLunStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FrontendVirtioScsiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.storage.v1.FrontendVirtioScsiService",
	HandlerType: (*FrontendVirtioScsiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VirtioScsiControllerCreate",
			Handler:    _FrontendVirtioScsiService_VirtioScsiControllerCreate_Handler,
		},
		{
			MethodName: "VirtioScsiControllerDelete",
			Handler:    _FrontendVirtioScsiService_VirtioScsiControllerDelete_Handler,
		},
		{
			MethodName: "VirtioScsiControllerUpdate",
			Handler:    _FrontendVirtioScsiService_VirtioScsiControllerUpdate_Handler,
		},
		{
			MethodName: "VirtioScsiControllerList",
			Handler:    _FrontendVirtioScsiService_VirtioScsiControllerList_Handler,
		},
		{
			MethodName: "VirtioScsiControllerGet",
			Handler:    _FrontendVirtioScsiService_VirtioScsiControllerGet_Handler,
		},
		{
			MethodName: "VirtioScsiControllerStats",
			Handler:    _FrontendVirtioScsiService_VirtioScsiControllerStats_Handler,
		},
		{
			MethodName: "VirtioScsiLunCreate",
			Handler:    _FrontendVirtioScsiService_VirtioScsiLunCreate_Handler,
		},
		{
			MethodName: "VirtioScsiLunDelete",
			Handler:    _FrontendVirtioScsiService_VirtioScsiLunDelete_Handler,
		},
		{
			MethodName: "VirtioScsiLunUpdate",
			Handler:    _FrontendVirtioScsiService_VirtioScsiLunUpdate_Handler,
		},
		{
			MethodName: "VirtioScsiLunList",
			Handler:    _FrontendVirtioScsiService_VirtioScsiLunList_Handler,
		},
		{
			MethodName: "VirtioScsiLunGet",
			Handler:    _FrontendVirtioScsiService_VirtioScsiLunGet_Handler,
		},
		{
			MethodName: "VirtioScsiLunStats",
			Handler:    _FrontendVirtioScsiService_VirtioScsiLunStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frontend_virtio_scsi.proto",
}
