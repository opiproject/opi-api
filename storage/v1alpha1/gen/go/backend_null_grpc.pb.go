// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.
// Copyright (C) 2023 Intel Corporation

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: backend_null.proto

package _go

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	NullVolumeService_CreateNullVolume_FullMethodName = "/opi_api.storage.v1.NullVolumeService/CreateNullVolume"
	NullVolumeService_DeleteNullVolume_FullMethodName = "/opi_api.storage.v1.NullVolumeService/DeleteNullVolume"
	NullVolumeService_UpdateNullVolume_FullMethodName = "/opi_api.storage.v1.NullVolumeService/UpdateNullVolume"
	NullVolumeService_ListNullVolumes_FullMethodName  = "/opi_api.storage.v1.NullVolumeService/ListNullVolumes"
	NullVolumeService_GetNullVolume_FullMethodName    = "/opi_api.storage.v1.NullVolumeService/GetNullVolume"
	NullVolumeService_StatsNullVolume_FullMethodName  = "/opi_api.storage.v1.NullVolumeService/StatsNullVolume"
)

// NullVolumeServiceClient is the client API for NullVolumeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NullVolumeServiceClient interface {
	// Create an Null Volume
	CreateNullVolume(ctx context.Context, in *CreateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error)
	// Delete an Null Volume
	DeleteNullVolume(ctx context.Context, in *DeleteNullVolumeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Update an Null Volume
	UpdateNullVolume(ctx context.Context, in *UpdateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error)
	// List Null Volumes
	ListNullVolumes(ctx context.Context, in *ListNullVolumesRequest, opts ...grpc.CallOption) (*ListNullVolumesResponse, error)
	// Get an Null Volume
	GetNullVolume(ctx context.Context, in *GetNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error)
	// Get an Null Volume statistics
	StatsNullVolume(ctx context.Context, in *StatsNullVolumeRequest, opts ...grpc.CallOption) (*StatsNullVolumeResponse, error)
}

type nullVolumeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNullVolumeServiceClient(cc grpc.ClientConnInterface) NullVolumeServiceClient {
	return &nullVolumeServiceClient{cc}
}

func (c *nullVolumeServiceClient) CreateNullVolume(ctx context.Context, in *CreateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error) {
	out := new(NullVolume)
	err := c.cc.Invoke(ctx, NullVolumeService_CreateNullVolume_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) DeleteNullVolume(ctx context.Context, in *DeleteNullVolumeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, NullVolumeService_DeleteNullVolume_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) UpdateNullVolume(ctx context.Context, in *UpdateNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error) {
	out := new(NullVolume)
	err := c.cc.Invoke(ctx, NullVolumeService_UpdateNullVolume_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) ListNullVolumes(ctx context.Context, in *ListNullVolumesRequest, opts ...grpc.CallOption) (*ListNullVolumesResponse, error) {
	out := new(ListNullVolumesResponse)
	err := c.cc.Invoke(ctx, NullVolumeService_ListNullVolumes_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) GetNullVolume(ctx context.Context, in *GetNullVolumeRequest, opts ...grpc.CallOption) (*NullVolume, error) {
	out := new(NullVolume)
	err := c.cc.Invoke(ctx, NullVolumeService_GetNullVolume_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nullVolumeServiceClient) StatsNullVolume(ctx context.Context, in *StatsNullVolumeRequest, opts ...grpc.CallOption) (*StatsNullVolumeResponse, error) {
	out := new(StatsNullVolumeResponse)
	err := c.cc.Invoke(ctx, NullVolumeService_StatsNullVolume_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NullVolumeServiceServer is the server API for NullVolumeService service.
// All implementations must embed UnimplementedNullVolumeServiceServer
// for forward compatibility
type NullVolumeServiceServer interface {
	// Create an Null Volume
	CreateNullVolume(context.Context, *CreateNullVolumeRequest) (*NullVolume, error)
	// Delete an Null Volume
	DeleteNullVolume(context.Context, *DeleteNullVolumeRequest) (*emptypb.Empty, error)
	// Update an Null Volume
	UpdateNullVolume(context.Context, *UpdateNullVolumeRequest) (*NullVolume, error)
	// List Null Volumes
	ListNullVolumes(context.Context, *ListNullVolumesRequest) (*ListNullVolumesResponse, error)
	// Get an Null Volume
	GetNullVolume(context.Context, *GetNullVolumeRequest) (*NullVolume, error)
	// Get an Null Volume statistics
	StatsNullVolume(context.Context, *StatsNullVolumeRequest) (*StatsNullVolumeResponse, error)
	mustEmbedUnimplementedNullVolumeServiceServer()
}

// UnimplementedNullVolumeServiceServer must be embedded to have forward compatible implementations.
type UnimplementedNullVolumeServiceServer struct {
}

func (UnimplementedNullVolumeServiceServer) CreateNullVolume(context.Context, *CreateNullVolumeRequest) (*NullVolume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNullVolume not implemented")
}
func (UnimplementedNullVolumeServiceServer) DeleteNullVolume(context.Context, *DeleteNullVolumeRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNullVolume not implemented")
}
func (UnimplementedNullVolumeServiceServer) UpdateNullVolume(context.Context, *UpdateNullVolumeRequest) (*NullVolume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNullVolume not implemented")
}
func (UnimplementedNullVolumeServiceServer) ListNullVolumes(context.Context, *ListNullVolumesRequest) (*ListNullVolumesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNullVolumes not implemented")
}
func (UnimplementedNullVolumeServiceServer) GetNullVolume(context.Context, *GetNullVolumeRequest) (*NullVolume, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNullVolume not implemented")
}
func (UnimplementedNullVolumeServiceServer) StatsNullVolume(context.Context, *StatsNullVolumeRequest) (*StatsNullVolumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatsNullVolume not implemented")
}
func (UnimplementedNullVolumeServiceServer) mustEmbedUnimplementedNullVolumeServiceServer() {}

// UnsafeNullVolumeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NullVolumeServiceServer will
// result in compilation errors.
type UnsafeNullVolumeServiceServer interface {
	mustEmbedUnimplementedNullVolumeServiceServer()
}

func RegisterNullVolumeServiceServer(s grpc.ServiceRegistrar, srv NullVolumeServiceServer) {
	s.RegisterService(&NullVolumeService_ServiceDesc, srv)
}

func _NullVolumeService_CreateNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).CreateNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NullVolumeService_CreateNullVolume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).CreateNullVolume(ctx, req.(*CreateNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_DeleteNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).DeleteNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NullVolumeService_DeleteNullVolume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).DeleteNullVolume(ctx, req.(*DeleteNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_UpdateNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).UpdateNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NullVolumeService_UpdateNullVolume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).UpdateNullVolume(ctx, req.(*UpdateNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_ListNullVolumes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNullVolumesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).ListNullVolumes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NullVolumeService_ListNullVolumes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).ListNullVolumes(ctx, req.(*ListNullVolumesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_GetNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).GetNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NullVolumeService_GetNullVolume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).GetNullVolume(ctx, req.(*GetNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NullVolumeService_StatsNullVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsNullVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NullVolumeServiceServer).StatsNullVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NullVolumeService_StatsNullVolume_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NullVolumeServiceServer).StatsNullVolume(ctx, req.(*StatsNullVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// NullVolumeService_ServiceDesc is the grpc.ServiceDesc for NullVolumeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NullVolumeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.storage.v1.NullVolumeService",
	HandlerType: (*NullVolumeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNullVolume",
			Handler:    _NullVolumeService_CreateNullVolume_Handler,
		},
		{
			MethodName: "DeleteNullVolume",
			Handler:    _NullVolumeService_DeleteNullVolume_Handler,
		},
		{
			MethodName: "UpdateNullVolume",
			Handler:    _NullVolumeService_UpdateNullVolume_Handler,
		},
		{
			MethodName: "ListNullVolumes",
			Handler:    _NullVolumeService_ListNullVolumes_Handler,
		},
		{
			MethodName: "GetNullVolume",
			Handler:    _NullVolumeService_GetNullVolume_Handler,
		},
		{
			MethodName: "StatsNullVolume",
			Handler:    _NullVolumeService_StatsNullVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend_null.proto",
}
