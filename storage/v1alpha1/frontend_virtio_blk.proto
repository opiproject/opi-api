// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

syntax = "proto3";
package opi_api.storage.v1;

option java_package = "opi_api.storage.v1";
option java_multiple_files = true;
option java_outer_classname = "FrontendVirtioBlkProto";

option go_package = "github.com/opiproject/opi-api/storage/v1alpha1/gen/go";
import "common.proto";
import "object_key.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// Front End (host-facing) APIs. Mostly used for Virtio-blk emulation emulation and host presentation as alternative to Nvme.
service FrontendVirtioBlkService {
    rpc CreateVirtioBlk (CreateVirtioBlkRequest) returns (VirtioBlk) {
        option (google.api.http) = {
            post: "/v1/virtioblks"
            body: "virtioblk"
        };
    }
    rpc DeleteVirtioBlk (DeleteVirtioBlkRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/virtioblks/{virtioblk}"
        };
    }
    rpc UpdateVirtioBlk (UpdateVirtioBlkRequest) returns (VirtioBlk) {
        option (google.api.http) = {
            patch: "/v1/virtioblks"
            body: "virtioblk"
        };
    }
    rpc ListVirtioBlk   (ListVirtioBlkRequest)   returns (ListVirtioBlkResponse)   {
        option (google.api.http) = {
            get: "/v1/virtioblks"
        };
    }
    rpc GetVirtioBlk    (GetVirtioBlkRequest)    returns (VirtioBlk)    {
        option (google.api.http) = {
            get: "/v1/virtioblks/{virtioblk}"
        };
    }
    rpc VirtioBlkStats  (VirtioBlkStatsRequest)  returns (VirtioBlkStatsResponse)  {}
}

message VirtioBlk {
    common.v1.ObjectKey id = 1;
    PciEndpoint pcie_id = 2;
    string bdev = 3;
    int64 max_io_qps = 4;
    string serial_number = 5;
}

message CreateVirtioBlkRequest {
    VirtioBlk controller = 1;
}

message DeleteVirtioBlkRequest {
    common.v1.ObjectKey controller_id = 1;
}

message UpdateVirtioBlkRequest {
    VirtioBlk controller = 1;
}

message ListVirtioBlkRequest {
    // Intentionally empty.
}

message ListVirtioBlkResponse {
    repeated VirtioBlk controller = 1;
}

message GetVirtioBlkRequest {
    common.v1.ObjectKey controller_id = 1;
}

message VirtioBlkStatsRequest {
    common.v1.ObjectKey controller_id = 1;
}

message VirtioBlkStatsResponse {
    common.v1.ObjectKey id = 1;
    string stats = 2;
}
