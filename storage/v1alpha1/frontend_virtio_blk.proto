// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.
// Copyright (C) 2023 Intel Corporation

syntax = "proto3";
package opi_api.storage.v1;

option java_package = "opi_api.storage.v1";
option java_multiple_files = true;
option java_outer_classname = "FrontendVirtioBlkProto";

option go_package = "github.com/opiproject/opi-api/storage/v1alpha1/gen/go";
import "opicommon.proto";
import "object_key.proto";

import "google/api/client.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";

// Front End (host-facing) APIs. Mostly used for Virtio-blk emulation emulation and host presentation as alternative to Nvme.
service FrontendVirtioBlkService {
    rpc CreateVirtioBlk (CreateVirtioBlkRequest) returns (VirtioBlk) {
        option (google.api.http) = {
            post: "/v1/volumes"
            body: "virtio_blk"
        };
        option (google.api.method_signature) = "virtio_blk,virtio_blk_id";
    }
    rpc DeleteVirtioBlk (DeleteVirtioBlkRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{name=virtioblks}/{virtioblk}"
        };
        option (google.api.method_signature) = "name";
    }
    rpc UpdateVirtioBlk (UpdateVirtioBlkRequest) returns (VirtioBlk) {
        option (google.api.http) = {
            patch: "/v1/{virtio_blk.name=subsystems}"
            body: "virtio_blk"
        };
        option (google.api.method_signature) = "virtio_blk,update_mask";
    }
    rpc ListVirtioBlks   (ListVirtioBlksRequest)   returns (ListVirtioBlksResponse)   {
        option (google.api.http) = {
            get: "/v1/{parent=subsystems}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetVirtioBlk    (GetVirtioBlkRequest)    returns (VirtioBlk)    {
        option (google.api.http) = {
            get: "/v1/{name=subsystems}/{virtioblk}"
        };
        option (google.api.method_signature) = "name";
    }
    rpc VirtioBlkStats  (VirtioBlkStatsRequest)  returns (VirtioBlkStatsResponse)  {}
}

message VirtioBlk {
    option (google.api.resource) = {
        type: "storage.opiproject.org/VirtioBlk"
        pattern: "volumes/{volume}"
    };

    // name is an opaque object handle that is not user settable.
    // name will be returned with created object
    // user can only set {resource}_id on the Create request object
    string name = 1 [
        (google.api.field_behavior) = OPTIONAL,
        (google.api.resource_reference).type = "opi_api.storage.v1/VirtioBlk"
    ];

    // The PCI endpoint where this device should appear
    PciEndpoint pcie_id = 2;

    // The back/middle-end volume to back this controller
    string volume_name_ref = 3 [ (google.api.field_behavior) = REQUIRED ];

    int64 max_io_qps = 4;

    // min QoS limits for the virtio-blk device
    QosLimit min_limit = 5;

    // max QoS limits for the virtio-blk device
    QosLimit max_limit = 6;
}

message CreateVirtioBlkRequest {
    VirtioBlk virtio_blk = 1 [(google.api.field_behavior) = REQUIRED];
    string virtio_blk_id = 2;
}

message DeleteVirtioBlkRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/VirtioBlk"
    ];
    // If set to true, and the resource is not found, the request will succeed
    // but no action will be taken on the server
    bool allow_missing = 2;
}

message UpdateVirtioBlkRequest {
    // The object's `name` field is used to identify the object to be updated.
    VirtioBlk virtio_blk = 1;
    // The list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
    // If set to true, and the object is not found, a new object will be created.
    // In this situation, `update_mask` is ignored.
    bool allow_missing = 3;
}

message ListVirtioBlksRequest {
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/VirtioBlk"
    ];
    int32 page_size = 2;
    string page_token = 3;
}

message ListVirtioBlksResponse {
    repeated VirtioBlk virtio_blks = 1;
    string next_page_token = 2;
}

message GetVirtioBlkRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/VirtioBlk"
    ];
}

message VirtioBlkStatsRequest {
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/VirtioBlk"
    ];
}

message VirtioBlkStatsResponse {
    VolumeStats stats = 1;
}
