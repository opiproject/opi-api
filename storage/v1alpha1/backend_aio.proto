// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

syntax = "proto3";
package opi_api.storage.v1;

option java_package = "opi_api.storage.v1";
option java_multiple_files = true;
option java_outer_classname = "BackendAioProto";

option go_package = "github.com/opiproject/opi-api/storage/v1alpha1/gen/go";

import "google/protobuf/empty.proto";
import "object_key.proto";
import "uuid.proto";

// Back End (network-facing) APIs. This service is for AIO generic kernel block device.
service AioControllerService {
    rpc AioControllerCreate (AioControllerCreateRequest) returns (AioController) {}
    rpc AioControllerDelete (AioControllerDeleteRequest) returns (google.protobuf.Empty) {}
    rpc AioControllerGet    (AioControllerGetRequest)    returns (AioController)    {}
    rpc AioControllerGetList   (AioControllerGetListRequest)   returns (AioControllerList)   {}
    rpc AioControllerGetStats  (AioControllerGetStatsRequest)  returns (AioControllerStats)  {}
    rpc AioControllerUpdate (AioControllerUpdateRequest) returns (AioController) {}
}

message AioController {
    // handle is an opaque object handle that is not user settable.
    // handle will be returned with created object
    common.v1.ObjectKey handle = 1;

    int64 block_size = 2;
    int64 blocks_count = 3;
    common.v1.Uuid uuid = 4;
    string filename = 5;
}

message AioControllerCreateRequest {
    AioController device = 1;
}

message AioControllerDeleteRequest {
    common.v1.ObjectKey handle = 1;
}

message AioControllerUpdateRequest {
    AioController device = 1;
}

message AioControllerList{
    repeated AioController device = 1;
}

message AioControllerGetRequest {
    common.v1.ObjectKey handle = 1;
}

message AioControllerGetListRequest {
    // Intentionally empty
}

message AioControllerGetStatsRequest {
    common.v1.ObjectKey handle = 1;
}

message AioControllerStatsRequest {
    common.v1.ObjectKey handle = 1;
}

message AioControllerStats {
    common.v1.ObjectKey handle = 1;
    string stats = 2;
}

