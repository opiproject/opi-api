// SPDX-License-Identifier: Apache-2.0
// Copyright (C) 2023 Intel Corporation

syntax = "proto3";
package opi_api.storage.v1;

option java_package = "opi_api.storage.v1";
option java_multiple_files = true;
option java_outer_classname = "MiddleendQosVolumeProto";

option go_package = "github.com/opiproject/opi-api/storage/v1alpha1/gen/go";
import "opicommon.proto";

import "google/api/client.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";

// Middle End (Storage Services) APIs. For example, encryption, compression, raid, QoS, multipath, ...
service MiddleendQosVolumeService {
    // Create an Qos Volume
    rpc CreateQosVolume(CreateQosVolumeRequest) returns (QosVolume) {
        option (google.api.http) = {
            post: "/v1/qosVolumes"
            body : "qos_volume"
        };
        option (google.api.method_signature) = "qos_volume,qos_volume_id";
    }
    // Delete an Qos Volume
    rpc DeleteQosVolume(DeleteQosVolumeRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{name=qosVolumes/*}"
        };
        option (google.api.method_signature) = "name";
    }
    // Update an Qos Volume
    rpc UpdateQosVolume(UpdateQosVolumeRequest) returns (QosVolume) {
        option (google.api.http) = {
            patch : "/v1/{qos_volume.name=qosVolumes/*}"
            body : "qos_volume"
        };
        option (google.api.method_signature) = "qos_volume,update_mask";
    }
    // List Qos Volumes
    rpc ListQosVolumes(ListQosVolumesRequest) returns (ListQosVolumesResponse) {
        option (google.api.http) = {
            get : "/v1/{parent=volumes}"
        };
        option (google.api.method_signature) = "parent";
    }
    // Get an Qos Volume
    rpc GetQosVolume(GetQosVolumeRequest) returns (QosVolume) {
        option (google.api.http) = {
            get: "/v1/{name=qosVolumes/*}"
        };
        option (google.api.method_signature) = "name";
    }
    // Get an Qos Volume statistics
    rpc StatsQosVolume(StatsQosVolumeRequest) returns (StatsQosVolumeResponse) {
        option (google.api.http) = {
            get: "/v1/{name=qosVolumes/*}:stats"
        };
        option (google.api.method_signature) = "name";
    }
}

// Represents volume providing quality of service capabilities
message QosVolume {
    option (google.api.resource) = {
        type: "opi_api.storage.v1/QosVolume"
        pattern: "qosVolumes/{volume}"
        singular: "qosVolume"
        plural: "qosVolumes"
    };

    // name is an opaque object handle that is not user settable.
    // name will be returned with created object
    // user can only set {resource}_id on the Create request object
    string name = 1 [(google.api.field_behavior) = IDENTIFIER];

    // Middleend/backend volume to apply QoS on
    string volume_name_ref = 2 [(google.api.field_behavior) = REQUIRED];

    // At least one limit value should be set, oitherwise volume does not make
    // sense.
    // AIP-203 says that a field should be described as REQUIRED if it is a
    // field on a resource that a user provides somewhere as input.
    // In this case, the resource is only valid if a "truthy" value is stored.
    // "truthy" is defined as:
    // * For primitives, values other than 0, 0.0, empty string/bytes, and false
    // * For repeated fields maps, values with at least one entry
    // * For messages, any message with at least one "truthy" field.
    // We cannot mark both min and max QosLimit as REQUIRED directly here, since
    // it forces one limit field is set on both. Limits message is added to
    // overcome it. REQUIRED on limits forces at least one limit field in
    // either min/max sub message is set.
    Limits limits = 3 [(google.api.field_behavior) = REQUIRED];
}

// Represents limits for Qos Volume
message Limits {
    // Min QoS limits for the volume
    QosLimit min = 1 [(google.api.field_behavior) = OPTIONAL];

    // Max QoS limits for the volume
    QosLimit max = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Represents a request to create an QoS Volume.
message CreateQosVolumeRequest {
    // The QoS Volume to be created.
    QosVolume qos_volume = 1 [(google.api.field_behavior) = REQUIRED];
    // An optional ID to assign to the QoS Volume.
    // If this is not provided the system will auto-generate it.
    string qos_volume_id = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Represents a request to delete an QoS Volume.
message DeleteQosVolumeRequest {
    // Object's unique identifier to delete
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];

    // If set to true, and the resource is not found, the request will succeed
    // but no action will be taken on the server
    bool allow_missing = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Represents a request to update an QoS Volume.
message UpdateQosVolumeRequest {
    // The object's `name` field is used to identify the object to be updated.
    QosVolume qos_volume = 1 [(google.api.field_behavior) = REQUIRED];
    // The list of fields to update.
    google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
    // If set to true, and the object is not found, a new object will be created.
    // In this situation, `update_mask` is ignored.
    bool allow_missing = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Represents a request to list all QoS Volumes.
message ListQosVolumesRequest {
    // Parent's object unique identifier
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).child_type = "opi_api.storage.v1/QosVolume"
    ];
    // page size of list request
    int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];
    // page token of list request
    string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Represents a response to list all QoS Volumes.
message ListQosVolumesResponse {
    // List of Qos Volumes
    repeated QosVolume qos_volumes = 1;
    // Next page token of list response
    string next_page_token = 2;
}

// Represents a request to get an QoS Volume.
message GetQosVolumeRequest {
    // Object's unique identifier to retrieve
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];
}

// Represents a request to get an QoS Volume statistics.
message StatsQosVolumeRequest {
    // Object's unique identifier to retrieve statistics
    string name = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.storage.v1/QosVolume"
    ];
}

// Represents a response to get an QoS Volume statistics.
message StatsQosVolumeResponse {
    // Volume statistics
    VolumeStats stats = 1;
}
