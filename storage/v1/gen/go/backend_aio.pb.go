// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: backend_aio.proto

package _go

import (
	context "context"
	_go "github.com/opiproject/opi-api/common/v1/gen/go"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AioRemoteController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// handle is an opaque object handle that is not user settable.
	// handle will be returned with created object
	Handle    *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Id        int64          `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name      string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	BlockSize int64          `protobuf:"varint,4,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	NumBlocks int64          `protobuf:"varint,5,opt,name=num_blocks,json=numBlocks,proto3" json:"num_blocks,omitempty"`
	Uuid      *_go.Uuid      `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *AioRemoteController) Reset() {
	*x = AioRemoteController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteController) ProtoMessage() {}

func (x *AioRemoteController) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteController.ProtoReflect.Descriptor instead.
func (*AioRemoteController) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{0}
}

func (x *AioRemoteController) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *AioRemoteController) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AioRemoteController) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AioRemoteController) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *AioRemoteController) GetNumBlocks() int64 {
	if x != nil {
		return x.NumBlocks
	}
	return 0
}

func (x *AioRemoteController) GetUuid() *_go.Uuid {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type AioRemoteControllerCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *AioRemoteController `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *AioRemoteControllerCreateRequest) Reset() {
	*x = AioRemoteControllerCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerCreateRequest) ProtoMessage() {}

func (x *AioRemoteControllerCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerCreateRequest.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerCreateRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{1}
}

func (x *AioRemoteControllerCreateRequest) GetDevice() *AioRemoteController {
	if x != nil {
		return x.Device
	}
	return nil
}

type AioRemoteControllerDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioRemoteControllerDeleteRequest) Reset() {
	*x = AioRemoteControllerDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerDeleteRequest) ProtoMessage() {}

func (x *AioRemoteControllerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerDeleteRequest.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{2}
}

func (x *AioRemoteControllerDeleteRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioRemoteControllerUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *AioRemoteController `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *AioRemoteControllerUpdateRequest) Reset() {
	*x = AioRemoteControllerUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerUpdateRequest) ProtoMessage() {}

func (x *AioRemoteControllerUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerUpdateRequest.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerUpdateRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{3}
}

func (x *AioRemoteControllerUpdateRequest) GetDevice() *AioRemoteController {
	if x != nil {
		return x.Device
	}
	return nil
}

type AioRemoteControllerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device []*AioRemoteController `protobuf:"bytes,1,rep,name=device,proto3" json:"device,omitempty"`
}

func (x *AioRemoteControllerList) Reset() {
	*x = AioRemoteControllerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerList) ProtoMessage() {}

func (x *AioRemoteControllerList) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerList.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerList) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{4}
}

func (x *AioRemoteControllerList) GetDevice() []*AioRemoteController {
	if x != nil {
		return x.Device
	}
	return nil
}

type AioRemoteControllerGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioRemoteControllerGetRequest) Reset() {
	*x = AioRemoteControllerGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerGetRequest) ProtoMessage() {}

func (x *AioRemoteControllerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerGetRequest.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerGetRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{5}
}

func (x *AioRemoteControllerGetRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioRemoteControllerGetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AioRemoteControllerGetListRequest) Reset() {
	*x = AioRemoteControllerGetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerGetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerGetListRequest) ProtoMessage() {}

func (x *AioRemoteControllerGetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerGetListRequest.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerGetListRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{6}
}

type AioRemoteControllerGetStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioRemoteControllerGetStatsRequest) Reset() {
	*x = AioRemoteControllerGetStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerGetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerGetStatsRequest) ProtoMessage() {}

func (x *AioRemoteControllerGetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerGetStatsRequest.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerGetStatsRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{7}
}

func (x *AioRemoteControllerGetStatsRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioRemoteControllerStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioRemoteControllerStatsRequest) Reset() {
	*x = AioRemoteControllerStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerStatsRequest) ProtoMessage() {}

func (x *AioRemoteControllerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerStatsRequest.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerStatsRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{8}
}

func (x *AioRemoteControllerStatsRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioRemoteControllerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Stats  string         `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *AioRemoteControllerStats) Reset() {
	*x = AioRemoteControllerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioRemoteControllerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioRemoteControllerStats) ProtoMessage() {}

func (x *AioRemoteControllerStats) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioRemoteControllerStats.ProtoReflect.Descriptor instead.
func (*AioRemoteControllerStats) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{9}
}

func (x *AioRemoteControllerStats) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *AioRemoteControllerStats) GetStats() string {
	if x != nil {
		return x.Stats
	}
	return ""
}

var File_backend_aio_proto protoreflect.FileDescriptor

var file_backend_aio_proto_rawDesc = []byte{
	0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x63, 0x0a, 0x20, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x58, 0x0a, 0x20, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x63,
	0x0a, 0x20, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x5a, 0x0a, 0x17, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x55, 0x0a, 0x1d, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x22, 0x41,
	0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x1f, 0x41, 0x69, 0x6f, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x22, 0x66, 0x0a, 0x18, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x32, 0x8a, 0x06, 0x0a, 0x1a, 0x41, 0x69, 0x6f,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x19, 0x41, 0x69, 0x6f, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x19, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x76, 0x0a, 0x16, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x31, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1a, 0x41,
	0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x85, 0x01, 0x0a, 0x1b, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x36, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x19, 0x41, 0x69, 0x6f, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x69, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f,
	0x70, 0x69, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_aio_proto_rawDescOnce sync.Once
	file_backend_aio_proto_rawDescData = file_backend_aio_proto_rawDesc
)

func file_backend_aio_proto_rawDescGZIP() []byte {
	file_backend_aio_proto_rawDescOnce.Do(func() {
		file_backend_aio_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_aio_proto_rawDescData)
	})
	return file_backend_aio_proto_rawDescData
}

var file_backend_aio_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_backend_aio_proto_goTypes = []interface{}{
	(*AioRemoteController)(nil),                // 0: opi_api.storage.v1.AioRemoteController
	(*AioRemoteControllerCreateRequest)(nil),   // 1: opi_api.storage.v1.AioRemoteControllerCreateRequest
	(*AioRemoteControllerDeleteRequest)(nil),   // 2: opi_api.storage.v1.AioRemoteControllerDeleteRequest
	(*AioRemoteControllerUpdateRequest)(nil),   // 3: opi_api.storage.v1.AioRemoteControllerUpdateRequest
	(*AioRemoteControllerList)(nil),            // 4: opi_api.storage.v1.AioRemoteControllerList
	(*AioRemoteControllerGetRequest)(nil),      // 5: opi_api.storage.v1.AioRemoteControllerGetRequest
	(*AioRemoteControllerGetListRequest)(nil),  // 6: opi_api.storage.v1.AioRemoteControllerGetListRequest
	(*AioRemoteControllerGetStatsRequest)(nil), // 7: opi_api.storage.v1.AioRemoteControllerGetStatsRequest
	(*AioRemoteControllerStatsRequest)(nil),    // 8: opi_api.storage.v1.AioRemoteControllerStatsRequest
	(*AioRemoteControllerStats)(nil),           // 9: opi_api.storage.v1.AioRemoteControllerStats
	(*_go.ObjectKey)(nil),                      // 10: opi_api.common.v1.ObjectKey
	(*_go.Uuid)(nil),                           // 11: opi_api.common.v1.Uuid
	(*emptypb.Empty)(nil),                      // 12: google.protobuf.Empty
}
var file_backend_aio_proto_depIdxs = []int32{
	10, // 0: opi_api.storage.v1.AioRemoteController.handle:type_name -> opi_api.common.v1.ObjectKey
	11, // 1: opi_api.storage.v1.AioRemoteController.uuid:type_name -> opi_api.common.v1.Uuid
	0,  // 2: opi_api.storage.v1.AioRemoteControllerCreateRequest.device:type_name -> opi_api.storage.v1.AioRemoteController
	10, // 3: opi_api.storage.v1.AioRemoteControllerDeleteRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	0,  // 4: opi_api.storage.v1.AioRemoteControllerUpdateRequest.device:type_name -> opi_api.storage.v1.AioRemoteController
	0,  // 5: opi_api.storage.v1.AioRemoteControllerList.device:type_name -> opi_api.storage.v1.AioRemoteController
	10, // 6: opi_api.storage.v1.AioRemoteControllerGetRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	10, // 7: opi_api.storage.v1.AioRemoteControllerGetStatsRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	10, // 8: opi_api.storage.v1.AioRemoteControllerStatsRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	10, // 9: opi_api.storage.v1.AioRemoteControllerStats.handle:type_name -> opi_api.common.v1.ObjectKey
	1,  // 10: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerCreate:input_type -> opi_api.storage.v1.AioRemoteControllerCreateRequest
	2,  // 11: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerDelete:input_type -> opi_api.storage.v1.AioRemoteControllerDeleteRequest
	5,  // 12: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerGet:input_type -> opi_api.storage.v1.AioRemoteControllerGetRequest
	6,  // 13: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerGetList:input_type -> opi_api.storage.v1.AioRemoteControllerGetListRequest
	7,  // 14: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerGetStats:input_type -> opi_api.storage.v1.AioRemoteControllerGetStatsRequest
	3,  // 15: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerUpdate:input_type -> opi_api.storage.v1.AioRemoteControllerUpdateRequest
	0,  // 16: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerCreate:output_type -> opi_api.storage.v1.AioRemoteController
	12, // 17: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerDelete:output_type -> google.protobuf.Empty
	0,  // 18: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerGet:output_type -> opi_api.storage.v1.AioRemoteController
	4,  // 19: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerGetList:output_type -> opi_api.storage.v1.AioRemoteControllerList
	9,  // 20: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerGetStats:output_type -> opi_api.storage.v1.AioRemoteControllerStats
	0,  // 21: opi_api.storage.v1.AioRemoteControllerService.AioRemoteControllerUpdate:output_type -> opi_api.storage.v1.AioRemoteController
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_backend_aio_proto_init() }
func file_backend_aio_proto_init() {
	if File_backend_aio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_backend_aio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerGetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerGetStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioRemoteControllerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_aio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_aio_proto_goTypes,
		DependencyIndexes: file_backend_aio_proto_depIdxs,
		MessageInfos:      file_backend_aio_proto_msgTypes,
	}.Build()
	File_backend_aio_proto = out.File
	file_backend_aio_proto_rawDesc = nil
	file_backend_aio_proto_goTypes = nil
	file_backend_aio_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AioRemoteControllerServiceClient is the client API for AioRemoteControllerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AioRemoteControllerServiceClient interface {
	AioRemoteControllerCreate(ctx context.Context, in *AioRemoteControllerCreateRequest, opts ...grpc.CallOption) (*AioRemoteController, error)
	AioRemoteControllerDelete(ctx context.Context, in *AioRemoteControllerDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AioRemoteControllerGet(ctx context.Context, in *AioRemoteControllerGetRequest, opts ...grpc.CallOption) (*AioRemoteController, error)
	AioRemoteControllerGetList(ctx context.Context, in *AioRemoteControllerGetListRequest, opts ...grpc.CallOption) (*AioRemoteControllerList, error)
	AioRemoteControllerGetStats(ctx context.Context, in *AioRemoteControllerGetStatsRequest, opts ...grpc.CallOption) (*AioRemoteControllerStats, error)
	AioRemoteControllerUpdate(ctx context.Context, in *AioRemoteControllerUpdateRequest, opts ...grpc.CallOption) (*AioRemoteController, error)
}

type aioRemoteControllerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAioRemoteControllerServiceClient(cc grpc.ClientConnInterface) AioRemoteControllerServiceClient {
	return &aioRemoteControllerServiceClient{cc}
}

func (c *aioRemoteControllerServiceClient) AioRemoteControllerCreate(ctx context.Context, in *AioRemoteControllerCreateRequest, opts ...grpc.CallOption) (*AioRemoteController, error) {
	out := new(AioRemoteController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioRemoteControllerServiceClient) AioRemoteControllerDelete(ctx context.Context, in *AioRemoteControllerDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioRemoteControllerServiceClient) AioRemoteControllerGet(ctx context.Context, in *AioRemoteControllerGetRequest, opts ...grpc.CallOption) (*AioRemoteController, error) {
	out := new(AioRemoteController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioRemoteControllerServiceClient) AioRemoteControllerGetList(ctx context.Context, in *AioRemoteControllerGetListRequest, opts ...grpc.CallOption) (*AioRemoteControllerList, error) {
	out := new(AioRemoteControllerList)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerGetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioRemoteControllerServiceClient) AioRemoteControllerGetStats(ctx context.Context, in *AioRemoteControllerGetStatsRequest, opts ...grpc.CallOption) (*AioRemoteControllerStats, error) {
	out := new(AioRemoteControllerStats)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerGetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioRemoteControllerServiceClient) AioRemoteControllerUpdate(ctx context.Context, in *AioRemoteControllerUpdateRequest, opts ...grpc.CallOption) (*AioRemoteController, error) {
	out := new(AioRemoteController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AioRemoteControllerServiceServer is the server API for AioRemoteControllerService service.
type AioRemoteControllerServiceServer interface {
	AioRemoteControllerCreate(context.Context, *AioRemoteControllerCreateRequest) (*AioRemoteController, error)
	AioRemoteControllerDelete(context.Context, *AioRemoteControllerDeleteRequest) (*emptypb.Empty, error)
	AioRemoteControllerGet(context.Context, *AioRemoteControllerGetRequest) (*AioRemoteController, error)
	AioRemoteControllerGetList(context.Context, *AioRemoteControllerGetListRequest) (*AioRemoteControllerList, error)
	AioRemoteControllerGetStats(context.Context, *AioRemoteControllerGetStatsRequest) (*AioRemoteControllerStats, error)
	AioRemoteControllerUpdate(context.Context, *AioRemoteControllerUpdateRequest) (*AioRemoteController, error)
}

// UnimplementedAioRemoteControllerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAioRemoteControllerServiceServer struct {
}

func (*UnimplementedAioRemoteControllerServiceServer) AioRemoteControllerCreate(context.Context, *AioRemoteControllerCreateRequest) (*AioRemoteController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioRemoteControllerCreate not implemented")
}
func (*UnimplementedAioRemoteControllerServiceServer) AioRemoteControllerDelete(context.Context, *AioRemoteControllerDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioRemoteControllerDelete not implemented")
}
func (*UnimplementedAioRemoteControllerServiceServer) AioRemoteControllerGet(context.Context, *AioRemoteControllerGetRequest) (*AioRemoteController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioRemoteControllerGet not implemented")
}
func (*UnimplementedAioRemoteControllerServiceServer) AioRemoteControllerGetList(context.Context, *AioRemoteControllerGetListRequest) (*AioRemoteControllerList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioRemoteControllerGetList not implemented")
}
func (*UnimplementedAioRemoteControllerServiceServer) AioRemoteControllerGetStats(context.Context, *AioRemoteControllerGetStatsRequest) (*AioRemoteControllerStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioRemoteControllerGetStats not implemented")
}
func (*UnimplementedAioRemoteControllerServiceServer) AioRemoteControllerUpdate(context.Context, *AioRemoteControllerUpdateRequest) (*AioRemoteController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioRemoteControllerUpdate not implemented")
}

func RegisterAioRemoteControllerServiceServer(s *grpc.Server, srv AioRemoteControllerServiceServer) {
	s.RegisterService(&_AioRemoteControllerService_serviceDesc, srv)
}

func _AioRemoteControllerService_AioRemoteControllerCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioRemoteControllerCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerCreate(ctx, req.(*AioRemoteControllerCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioRemoteControllerService_AioRemoteControllerDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioRemoteControllerDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerDelete(ctx, req.(*AioRemoteControllerDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioRemoteControllerService_AioRemoteControllerGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioRemoteControllerGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerGet(ctx, req.(*AioRemoteControllerGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioRemoteControllerService_AioRemoteControllerGetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioRemoteControllerGetListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerGetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerGetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerGetList(ctx, req.(*AioRemoteControllerGetListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioRemoteControllerService_AioRemoteControllerGetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioRemoteControllerGetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerGetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerGetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerGetStats(ctx, req.(*AioRemoteControllerGetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioRemoteControllerService_AioRemoteControllerUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioRemoteControllerUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioRemoteControllerService/AioRemoteControllerUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioRemoteControllerServiceServer).AioRemoteControllerUpdate(ctx, req.(*AioRemoteControllerUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AioRemoteControllerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.storage.v1.AioRemoteControllerService",
	HandlerType: (*AioRemoteControllerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AioRemoteControllerCreate",
			Handler:    _AioRemoteControllerService_AioRemoteControllerCreate_Handler,
		},
		{
			MethodName: "AioRemoteControllerDelete",
			Handler:    _AioRemoteControllerService_AioRemoteControllerDelete_Handler,
		},
		{
			MethodName: "AioRemoteControllerGet",
			Handler:    _AioRemoteControllerService_AioRemoteControllerGet_Handler,
		},
		{
			MethodName: "AioRemoteControllerGetList",
			Handler:    _AioRemoteControllerService_AioRemoteControllerGetList_Handler,
		},
		{
			MethodName: "AioRemoteControllerGetStats",
			Handler:    _AioRemoteControllerService_AioRemoteControllerGetStats_Handler,
		},
		{
			MethodName: "AioRemoteControllerUpdate",
			Handler:    _AioRemoteControllerService_AioRemoteControllerUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend_aio.proto",
}
