// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: backend_aio.proto

package _go

import (
	context "context"
	_go "github.com/opiproject/opi-api/common/v1/gen/go"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AioController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// handle is an opaque object handle that is not user settable.
	// handle will be returned with created object
	Handle    *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Name      string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BlockSize int64          `protobuf:"varint,3,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	NumBlocks int64          `protobuf:"varint,4,opt,name=num_blocks,json=numBlocks,proto3" json:"num_blocks,omitempty"`
	Uuid      *_go.Uuid      `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Filename  string         `protobuf:"bytes,6,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *AioController) Reset() {
	*x = AioController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioController) ProtoMessage() {}

func (x *AioController) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioController.ProtoReflect.Descriptor instead.
func (*AioController) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{0}
}

func (x *AioController) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *AioController) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AioController) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *AioController) GetNumBlocks() int64 {
	if x != nil {
		return x.NumBlocks
	}
	return 0
}

func (x *AioController) GetUuid() *_go.Uuid {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *AioController) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type AioControllerCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *AioController `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *AioControllerCreateRequest) Reset() {
	*x = AioControllerCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerCreateRequest) ProtoMessage() {}

func (x *AioControllerCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerCreateRequest.ProtoReflect.Descriptor instead.
func (*AioControllerCreateRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{1}
}

func (x *AioControllerCreateRequest) GetDevice() *AioController {
	if x != nil {
		return x.Device
	}
	return nil
}

type AioControllerDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioControllerDeleteRequest) Reset() {
	*x = AioControllerDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerDeleteRequest) ProtoMessage() {}

func (x *AioControllerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerDeleteRequest.ProtoReflect.Descriptor instead.
func (*AioControllerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{2}
}

func (x *AioControllerDeleteRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioControllerUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *AioController `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *AioControllerUpdateRequest) Reset() {
	*x = AioControllerUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerUpdateRequest) ProtoMessage() {}

func (x *AioControllerUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerUpdateRequest.ProtoReflect.Descriptor instead.
func (*AioControllerUpdateRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{3}
}

func (x *AioControllerUpdateRequest) GetDevice() *AioController {
	if x != nil {
		return x.Device
	}
	return nil
}

type AioControllerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device []*AioController `protobuf:"bytes,1,rep,name=device,proto3" json:"device,omitempty"`
}

func (x *AioControllerList) Reset() {
	*x = AioControllerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerList) ProtoMessage() {}

func (x *AioControllerList) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerList.ProtoReflect.Descriptor instead.
func (*AioControllerList) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{4}
}

func (x *AioControllerList) GetDevice() []*AioController {
	if x != nil {
		return x.Device
	}
	return nil
}

type AioControllerGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioControllerGetRequest) Reset() {
	*x = AioControllerGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerGetRequest) ProtoMessage() {}

func (x *AioControllerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerGetRequest.ProtoReflect.Descriptor instead.
func (*AioControllerGetRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{5}
}

func (x *AioControllerGetRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioControllerGetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AioControllerGetListRequest) Reset() {
	*x = AioControllerGetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerGetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerGetListRequest) ProtoMessage() {}

func (x *AioControllerGetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerGetListRequest.ProtoReflect.Descriptor instead.
func (*AioControllerGetListRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{6}
}

type AioControllerGetStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioControllerGetStatsRequest) Reset() {
	*x = AioControllerGetStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerGetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerGetStatsRequest) ProtoMessage() {}

func (x *AioControllerGetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerGetStatsRequest.ProtoReflect.Descriptor instead.
func (*AioControllerGetStatsRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{7}
}

func (x *AioControllerGetStatsRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioControllerStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *AioControllerStatsRequest) Reset() {
	*x = AioControllerStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerStatsRequest) ProtoMessage() {}

func (x *AioControllerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerStatsRequest.ProtoReflect.Descriptor instead.
func (*AioControllerStatsRequest) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{8}
}

func (x *AioControllerStatsRequest) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

type AioControllerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *_go.ObjectKey `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Stats  string         `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *AioControllerStats) Reset() {
	*x = AioControllerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_aio_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AioControllerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AioControllerStats) ProtoMessage() {}

func (x *AioControllerStats) ProtoReflect() protoreflect.Message {
	mi := &file_backend_aio_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AioControllerStats.ProtoReflect.Descriptor instead.
func (*AioControllerStats) Descriptor() ([]byte, []int) {
	return file_backend_aio_proto_rawDescGZIP(), []int{9}
}

func (x *AioControllerStats) GetHandle() *_go.ObjectKey {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *AioControllerStats) GetStats() string {
	if x != nil {
		return x.Stats
	}
	return ""
}

var File_backend_aio_proto protoreflect.FileDescriptor

var file_backend_aio_proto_rawDesc = []byte{
	0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x0d, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2b, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x75, 0x69, 0x64, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x1a, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x52,
	0x0a, 0x1a, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x22, 0x57, 0x0a, 0x1a, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x11, 0x41,
	0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x17, 0x41,
	0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x1d, 0x0a, 0x1b,
	0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x1c, 0x41,
	0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x22, 0x51, 0x0a, 0x19, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x12, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x32, 0x9c, 0x05, 0x0a, 0x14, 0x41, 0x69, 0x6f, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6a, 0x0a, 0x13, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x13, 0x41,
	0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x10,
	0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x22, 0x00, 0x12, 0x70, 0x0a, 0x14, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x15, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x30, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x41, 0x69, 0x6f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f,
	0x70, 0x69, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_aio_proto_rawDescOnce sync.Once
	file_backend_aio_proto_rawDescData = file_backend_aio_proto_rawDesc
)

func file_backend_aio_proto_rawDescGZIP() []byte {
	file_backend_aio_proto_rawDescOnce.Do(func() {
		file_backend_aio_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_aio_proto_rawDescData)
	})
	return file_backend_aio_proto_rawDescData
}

var file_backend_aio_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_backend_aio_proto_goTypes = []interface{}{
	(*AioController)(nil),                // 0: opi_api.storage.v1.AioController
	(*AioControllerCreateRequest)(nil),   // 1: opi_api.storage.v1.AioControllerCreateRequest
	(*AioControllerDeleteRequest)(nil),   // 2: opi_api.storage.v1.AioControllerDeleteRequest
	(*AioControllerUpdateRequest)(nil),   // 3: opi_api.storage.v1.AioControllerUpdateRequest
	(*AioControllerList)(nil),            // 4: opi_api.storage.v1.AioControllerList
	(*AioControllerGetRequest)(nil),      // 5: opi_api.storage.v1.AioControllerGetRequest
	(*AioControllerGetListRequest)(nil),  // 6: opi_api.storage.v1.AioControllerGetListRequest
	(*AioControllerGetStatsRequest)(nil), // 7: opi_api.storage.v1.AioControllerGetStatsRequest
	(*AioControllerStatsRequest)(nil),    // 8: opi_api.storage.v1.AioControllerStatsRequest
	(*AioControllerStats)(nil),           // 9: opi_api.storage.v1.AioControllerStats
	(*_go.ObjectKey)(nil),                // 10: opi_api.common.v1.ObjectKey
	(*_go.Uuid)(nil),                     // 11: opi_api.common.v1.Uuid
	(*emptypb.Empty)(nil),                // 12: google.protobuf.Empty
}
var file_backend_aio_proto_depIdxs = []int32{
	10, // 0: opi_api.storage.v1.AioController.handle:type_name -> opi_api.common.v1.ObjectKey
	11, // 1: opi_api.storage.v1.AioController.uuid:type_name -> opi_api.common.v1.Uuid
	0,  // 2: opi_api.storage.v1.AioControllerCreateRequest.device:type_name -> opi_api.storage.v1.AioController
	10, // 3: opi_api.storage.v1.AioControllerDeleteRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	0,  // 4: opi_api.storage.v1.AioControllerUpdateRequest.device:type_name -> opi_api.storage.v1.AioController
	0,  // 5: opi_api.storage.v1.AioControllerList.device:type_name -> opi_api.storage.v1.AioController
	10, // 6: opi_api.storage.v1.AioControllerGetRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	10, // 7: opi_api.storage.v1.AioControllerGetStatsRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	10, // 8: opi_api.storage.v1.AioControllerStatsRequest.handle:type_name -> opi_api.common.v1.ObjectKey
	10, // 9: opi_api.storage.v1.AioControllerStats.handle:type_name -> opi_api.common.v1.ObjectKey
	1,  // 10: opi_api.storage.v1.AioControllerService.AioControllerCreate:input_type -> opi_api.storage.v1.AioControllerCreateRequest
	2,  // 11: opi_api.storage.v1.AioControllerService.AioControllerDelete:input_type -> opi_api.storage.v1.AioControllerDeleteRequest
	5,  // 12: opi_api.storage.v1.AioControllerService.AioControllerGet:input_type -> opi_api.storage.v1.AioControllerGetRequest
	6,  // 13: opi_api.storage.v1.AioControllerService.AioControllerGetList:input_type -> opi_api.storage.v1.AioControllerGetListRequest
	7,  // 14: opi_api.storage.v1.AioControllerService.AioControllerGetStats:input_type -> opi_api.storage.v1.AioControllerGetStatsRequest
	3,  // 15: opi_api.storage.v1.AioControllerService.AioControllerUpdate:input_type -> opi_api.storage.v1.AioControllerUpdateRequest
	0,  // 16: opi_api.storage.v1.AioControllerService.AioControllerCreate:output_type -> opi_api.storage.v1.AioController
	12, // 17: opi_api.storage.v1.AioControllerService.AioControllerDelete:output_type -> google.protobuf.Empty
	0,  // 18: opi_api.storage.v1.AioControllerService.AioControllerGet:output_type -> opi_api.storage.v1.AioController
	4,  // 19: opi_api.storage.v1.AioControllerService.AioControllerGetList:output_type -> opi_api.storage.v1.AioControllerList
	9,  // 20: opi_api.storage.v1.AioControllerService.AioControllerGetStats:output_type -> opi_api.storage.v1.AioControllerStats
	0,  // 21: opi_api.storage.v1.AioControllerService.AioControllerUpdate:output_type -> opi_api.storage.v1.AioController
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_backend_aio_proto_init() }
func file_backend_aio_proto_init() {
	if File_backend_aio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_backend_aio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerGetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerGetStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_aio_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AioControllerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_aio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_aio_proto_goTypes,
		DependencyIndexes: file_backend_aio_proto_depIdxs,
		MessageInfos:      file_backend_aio_proto_msgTypes,
	}.Build()
	File_backend_aio_proto = out.File
	file_backend_aio_proto_rawDesc = nil
	file_backend_aio_proto_goTypes = nil
	file_backend_aio_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AioControllerServiceClient is the client API for AioControllerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AioControllerServiceClient interface {
	AioControllerCreate(ctx context.Context, in *AioControllerCreateRequest, opts ...grpc.CallOption) (*AioController, error)
	AioControllerDelete(ctx context.Context, in *AioControllerDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AioControllerGet(ctx context.Context, in *AioControllerGetRequest, opts ...grpc.CallOption) (*AioController, error)
	AioControllerGetList(ctx context.Context, in *AioControllerGetListRequest, opts ...grpc.CallOption) (*AioControllerList, error)
	AioControllerGetStats(ctx context.Context, in *AioControllerGetStatsRequest, opts ...grpc.CallOption) (*AioControllerStats, error)
	AioControllerUpdate(ctx context.Context, in *AioControllerUpdateRequest, opts ...grpc.CallOption) (*AioController, error)
}

type aioControllerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAioControllerServiceClient(cc grpc.ClientConnInterface) AioControllerServiceClient {
	return &aioControllerServiceClient{cc}
}

func (c *aioControllerServiceClient) AioControllerCreate(ctx context.Context, in *AioControllerCreateRequest, opts ...grpc.CallOption) (*AioController, error) {
	out := new(AioController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioControllerService/AioControllerCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioControllerServiceClient) AioControllerDelete(ctx context.Context, in *AioControllerDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioControllerService/AioControllerDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioControllerServiceClient) AioControllerGet(ctx context.Context, in *AioControllerGetRequest, opts ...grpc.CallOption) (*AioController, error) {
	out := new(AioController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioControllerService/AioControllerGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioControllerServiceClient) AioControllerGetList(ctx context.Context, in *AioControllerGetListRequest, opts ...grpc.CallOption) (*AioControllerList, error) {
	out := new(AioControllerList)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioControllerService/AioControllerGetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioControllerServiceClient) AioControllerGetStats(ctx context.Context, in *AioControllerGetStatsRequest, opts ...grpc.CallOption) (*AioControllerStats, error) {
	out := new(AioControllerStats)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioControllerService/AioControllerGetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aioControllerServiceClient) AioControllerUpdate(ctx context.Context, in *AioControllerUpdateRequest, opts ...grpc.CallOption) (*AioController, error) {
	out := new(AioController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.AioControllerService/AioControllerUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AioControllerServiceServer is the server API for AioControllerService service.
type AioControllerServiceServer interface {
	AioControllerCreate(context.Context, *AioControllerCreateRequest) (*AioController, error)
	AioControllerDelete(context.Context, *AioControllerDeleteRequest) (*emptypb.Empty, error)
	AioControllerGet(context.Context, *AioControllerGetRequest) (*AioController, error)
	AioControllerGetList(context.Context, *AioControllerGetListRequest) (*AioControllerList, error)
	AioControllerGetStats(context.Context, *AioControllerGetStatsRequest) (*AioControllerStats, error)
	AioControllerUpdate(context.Context, *AioControllerUpdateRequest) (*AioController, error)
}

// UnimplementedAioControllerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAioControllerServiceServer struct {
}

func (*UnimplementedAioControllerServiceServer) AioControllerCreate(context.Context, *AioControllerCreateRequest) (*AioController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioControllerCreate not implemented")
}
func (*UnimplementedAioControllerServiceServer) AioControllerDelete(context.Context, *AioControllerDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioControllerDelete not implemented")
}
func (*UnimplementedAioControllerServiceServer) AioControllerGet(context.Context, *AioControllerGetRequest) (*AioController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioControllerGet not implemented")
}
func (*UnimplementedAioControllerServiceServer) AioControllerGetList(context.Context, *AioControllerGetListRequest) (*AioControllerList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioControllerGetList not implemented")
}
func (*UnimplementedAioControllerServiceServer) AioControllerGetStats(context.Context, *AioControllerGetStatsRequest) (*AioControllerStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioControllerGetStats not implemented")
}
func (*UnimplementedAioControllerServiceServer) AioControllerUpdate(context.Context, *AioControllerUpdateRequest) (*AioController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AioControllerUpdate not implemented")
}

func RegisterAioControllerServiceServer(s *grpc.Server, srv AioControllerServiceServer) {
	s.RegisterService(&_AioControllerService_serviceDesc, srv)
}

func _AioControllerService_AioControllerCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioControllerCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioControllerServiceServer).AioControllerCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioControllerService/AioControllerCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioControllerServiceServer).AioControllerCreate(ctx, req.(*AioControllerCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioControllerService_AioControllerDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioControllerDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioControllerServiceServer).AioControllerDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioControllerService/AioControllerDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioControllerServiceServer).AioControllerDelete(ctx, req.(*AioControllerDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioControllerService_AioControllerGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioControllerGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioControllerServiceServer).AioControllerGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioControllerService/AioControllerGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioControllerServiceServer).AioControllerGet(ctx, req.(*AioControllerGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioControllerService_AioControllerGetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioControllerGetListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioControllerServiceServer).AioControllerGetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioControllerService/AioControllerGetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioControllerServiceServer).AioControllerGetList(ctx, req.(*AioControllerGetListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioControllerService_AioControllerGetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioControllerGetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioControllerServiceServer).AioControllerGetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioControllerService/AioControllerGetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioControllerServiceServer).AioControllerGetStats(ctx, req.(*AioControllerGetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AioControllerService_AioControllerUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AioControllerUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AioControllerServiceServer).AioControllerUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.AioControllerService/AioControllerUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AioControllerServiceServer).AioControllerUpdate(ctx, req.(*AioControllerUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AioControllerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.storage.v1.AioControllerService",
	HandlerType: (*AioControllerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AioControllerCreate",
			Handler:    _AioControllerService_AioControllerCreate_Handler,
		},
		{
			MethodName: "AioControllerDelete",
			Handler:    _AioControllerService_AioControllerDelete_Handler,
		},
		{
			MethodName: "AioControllerGet",
			Handler:    _AioControllerService_AioControllerGet_Handler,
		},
		{
			MethodName: "AioControllerGetList",
			Handler:    _AioControllerService_AioControllerGetList_Handler,
		},
		{
			MethodName: "AioControllerGetStats",
			Handler:    _AioControllerService_AioControllerGetStats_Handler,
		},
		{
			MethodName: "AioControllerUpdate",
			Handler:    _AioControllerService_AioControllerUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend_aio.proto",
}
