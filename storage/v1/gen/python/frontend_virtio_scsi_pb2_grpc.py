# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import frontend_virtio_scsi_pb2 as frontend__virtio__scsi__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class VirtioScsiControllerServiceStub(object):
    """Front End (host-facing) APIs.

    Virtio-scsi emulation

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VirtioScsiControllerCreate = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerCreate',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerCreateRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
                )
        self.VirtioScsiControllerDelete = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerDelete',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerDeleteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.VirtioScsiControllerUpdate = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerUpdate',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerUpdateRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
                )
        self.VirtioScsiControllerList = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerList',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerListRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerListResponse.FromString,
                )
        self.VirtioScsiControllerGet = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerGet',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerGetRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
                )
        self.VirtioScsiControllerStats = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerStats',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerStatsRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerStatsResponse.FromString,
                )


class VirtioScsiControllerServiceServicer(object):
    """Front End (host-facing) APIs.

    Virtio-scsi emulation

    """

    def VirtioScsiControllerCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiControllerDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiControllerUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiControllerList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiControllerGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiControllerStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VirtioScsiControllerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VirtioScsiControllerCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiControllerCreate,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerCreateRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiController.SerializeToString,
            ),
            'VirtioScsiControllerDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiControllerDelete,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerDeleteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'VirtioScsiControllerUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiControllerUpdate,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerUpdateRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiController.SerializeToString,
            ),
            'VirtioScsiControllerList': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiControllerList,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerListRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerListResponse.SerializeToString,
            ),
            'VirtioScsiControllerGet': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiControllerGet,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerGetRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiController.SerializeToString,
            ),
            'VirtioScsiControllerStats': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiControllerStats,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiControllerStatsRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiControllerStatsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'opi_api.storage.v1.VirtioScsiControllerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VirtioScsiControllerService(object):
    """Front End (host-facing) APIs.

    Virtio-scsi emulation

    """

    @staticmethod
    def VirtioScsiControllerCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerCreate',
            frontend__virtio__scsi__pb2.VirtioScsiControllerCreateRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiControllerDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerDelete',
            frontend__virtio__scsi__pb2.VirtioScsiControllerDeleteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiControllerUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerUpdate',
            frontend__virtio__scsi__pb2.VirtioScsiControllerUpdateRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiControllerList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerList',
            frontend__virtio__scsi__pb2.VirtioScsiControllerListRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiControllerListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiControllerGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerGet',
            frontend__virtio__scsi__pb2.VirtioScsiControllerGetRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiControllerStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiControllerService/VirtioScsiControllerStats',
            frontend__virtio__scsi__pb2.VirtioScsiControllerStatsRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiControllerStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VirtioScsiLunServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VirtioScsiLunCreate = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunCreate',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunCreateRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
                )
        self.VirtioScsiLunDelete = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunDelete',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunDeleteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.VirtioScsiLunUpdate = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunUpdate',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunUpdateRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
                )
        self.VirtioScsiLunList = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunList',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunListRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunListResponse.FromString,
                )
        self.VirtioScsiLunGet = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunGet',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunGetRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
                )
        self.VirtioScsiLunStats = channel.unary_unary(
                '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunStats',
                request_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunStatsRequest.SerializeToString,
                response_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunStatsResponse.FromString,
                )


class VirtioScsiLunServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def VirtioScsiLunCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiLunDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiLunUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiLunList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiLunGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VirtioScsiLunStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VirtioScsiLunServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VirtioScsiLunCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiLunCreate,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunCreateRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiLun.SerializeToString,
            ),
            'VirtioScsiLunDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiLunDelete,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunDeleteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'VirtioScsiLunUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiLunUpdate,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunUpdateRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiLun.SerializeToString,
            ),
            'VirtioScsiLunList': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiLunList,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunListRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunListResponse.SerializeToString,
            ),
            'VirtioScsiLunGet': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiLunGet,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunGetRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiLun.SerializeToString,
            ),
            'VirtioScsiLunStats': grpc.unary_unary_rpc_method_handler(
                    servicer.VirtioScsiLunStats,
                    request_deserializer=frontend__virtio__scsi__pb2.VirtioScsiLunStatsRequest.FromString,
                    response_serializer=frontend__virtio__scsi__pb2.VirtioScsiLunStatsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'opi_api.storage.v1.VirtioScsiLunService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VirtioScsiLunService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def VirtioScsiLunCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunCreate',
            frontend__virtio__scsi__pb2.VirtioScsiLunCreateRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiLunDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunDelete',
            frontend__virtio__scsi__pb2.VirtioScsiLunDeleteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiLunUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunUpdate',
            frontend__virtio__scsi__pb2.VirtioScsiLunUpdateRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiLunList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunList',
            frontend__virtio__scsi__pb2.VirtioScsiLunListRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiLunListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiLunGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunGet',
            frontend__virtio__scsi__pb2.VirtioScsiLunGetRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VirtioScsiLunStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opi_api.storage.v1.VirtioScsiLunService/VirtioScsiLunStats',
            frontend__virtio__scsi__pb2.VirtioScsiLunStatsRequest.SerializeToString,
            frontend__virtio__scsi__pb2.VirtioScsiLunStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
