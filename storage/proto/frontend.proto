syntax = "proto3";
package opi.storage.v1;
option go_package = "github.com/opiproject/opi-api/storage/proto";

// Front End (host-facing) APIs.

// NVMe/PCIe emulation

service NVMeSubsystemService {
    rpc NVMeSubsystemCreate (NVMeSubsystemCreateRequest) returns (NVMeSubsystemCreateResponse) {}
    rpc NVMeSubsystemDelete (NVMeSubsystemDeleteRequest) returns (NVMeSubsystemDeleteResponse) {}
    rpc NVMeSubsystemUpdate (NVMeSubsystemUpdateRequest) returns (NVMeSubsystemUpdateResponse) {}
    rpc NVMeSubsystemList   (NVMeSubsystemListRequest)   returns (NVMeSubsystemListResponse)   {}
    rpc NVMeSubsystemGet    (NVMeSubsystemGetRequest)    returns (NVMeSubsystemGetResponse)    {}
    rpc NVMeSubsystemStats  (NVMeSubsystemStatsRequest)  returns (NVMeSubsystemStatsResponse)  {}
}

service NVMeControllerService {
    rpc NVMeControllerCreate (NVMeControllerCreateRequest) returns (NVMeControllerCreateResponse) {}
    rpc NVMeControllerDelete (NVMeControllerDeleteRequest) returns (NVMeControllerDeleteResponse) {}
    rpc NVMeControllerUpdate (NVMeControllerUpdateRequest) returns (NVMeControllerUpdateResponse) {}
    rpc NVMeControllerList   (NVMeControllerListRequest)   returns (NVMeControllerListResponse)   {}
    rpc NVMeControllerGet    (NVMeControllerGetRequest)    returns (NVMeControllerGetResponse)    {}
    rpc NVMeControllerStats  (NVMeControllerStatsRequest)  returns (NVMeControllerStatsResponse)  {}
}

service NVMeNamespaceService {
    rpc NVMeNamespaceCreate (NVMeNamespaceCreateRequest) returns (NVMeNamespaceCreateResponse) {}
    rpc NVMeNamespaceDelete (NVMeNamespaceDeleteRequest) returns (NVMeNamespaceDeleteResponse) {}
    rpc NVMeNamespaceUpdate (NVMeNamespaceUpdateRequest) returns (NVMeNamespaceUpdateResponse) {}
    rpc NVMeNamespaceList   (NVMeNamespaceListRequest)   returns (NVMeNamespaceListResponse)   {}
    rpc NVMeNamespaceGet    (NVMeNamespaceGetRequest)    returns (NVMeNamespaceGetResponse)    {}
    rpc NVMeNamespaceStats  (NVMeNamespaceStatsRequest)  returns (NVMeNamespaceStatsResponse)  {}
}

// TODO: Virtio-blk
service VirtioBlkService {
    rpc VirtioBlkCreate (VirtioBlkCreateRequest) returns (VirtioBlkCreateResponse) {}
    rpc VirtioBlkDelete (VirtioBlkDeleteRequest) returns (VirtioBlkDeleteResponse) {}
    rpc VirtioBlkUpdate (VirtioBlkUpdateRequest) returns (VirtioBlkUpdateResponse) {}
    rpc VirtioBlkList   (VirtioBlkListRequest)   returns (VirtioBlkListResponse)   {}
    rpc VirtioBlkGet    (VirtioBlkGetRequest)    returns (VirtioBlkGetResponse)    {}
    rpc VirtioBlkStats  (VirtioBlkStatsRequest)  returns (VirtioBlkStatsResponse)  {}
}

// TODO: Virtio-scsi

// TODO: Virtio-fs

message NVMeSubsystem {
    int64 id = 1;
    string nqn = 3;
    string serial_number = 4;
    string model_number = 5;
    int64 max_ns = 6;
}

message NVMeController {
    int64 id = 1;
    string name = 2;
    string subsystem_id = 3;
    string pcie_id = 4;
    int64 max_io_qps = 5;
    int64 max_ns = 6;
}

message NVMeNamespace {
    int64 id = 1;
    string name = 2;
    string subsystem_id = 3;
    int64 controller_id = 4;
    int64 nsid = 5;
    string bdev = 6;
    int64 block_size = 7;
    int64 num_blocks = 8;
    string nguid = 9;
    string eui64 = 10;
    string uuid = 11;
    string multipath = 12;
    string authentication = 13;
}

message VirtioBlk {
    int64 id = 1;
    string name = 2;
    string pcie_id = 3;
    string bdev = 4;
    int64 max_io_qps = 5;
    string serial_number = 6;
}

message NVMeSubsystemCreateRequest {
    NVMeSubsystem subsystem = 1;
}

message NVMeSubsystemCreateResponse {
    // Intentionally empty.
}

message NVMeSubsystemDeleteRequest {
    int64 id = 1;
}

message NVMeSubsystemDeleteResponse {
    // Intentionally empty.
}

message NVMeSubsystemUpdateRequest {
    NVMeSubsystem subsystem = 1;
}

message NVMeSubsystemUpdateResponse {
    // Intentionally empty.
}

message NVMeSubsystemListRequest {
    // Intentionally empty.
}

message NVMeSubsystemListResponse {
    repeated NVMeSubsystem subsystem = 1;
}

message NVMeSubsystemGetRequest {
    int64 id = 1;
}

message NVMeSubsystemGetResponse {
    NVMeSubsystem subsystem = 1;
}

message NVMeSubsystemStatsRequest {
    int64 id = 1;
}

message NVMeSubsystemStatsResponse {
    int64 id = 1;
    string stats = 2;
}

message NVMeControllerCreateRequest {
    NVMeController controller = 1;
}

message NVMeControllerCreateResponse {
    // Intentionally empty.
}

message NVMeControllerDeleteRequest {
    int64 subsystem_id = 1;
    int64 controller_id = 2;
}

message NVMeControllerDeleteResponse {
    // Intentionally empty.
}

message NVMeControllerUpdateRequest {
    NVMeController controller = 1;
}

message NVMeControllerUpdateResponse {
    // Intentionally empty.
}

message NVMeControllerListRequest {
    int64 subsystem_id = 1;
}

message NVMeControllerListResponse {
    repeated NVMeController controller = 1;
}

message NVMeControllerGetRequest {
    int64 subsystem_id = 1;
    int64 controller_id = 2;
}

message NVMeControllerGetResponse {
    NVMeController controller = 1;
}

message NVMeControllerStatsRequest {
    int64 subsystem_id = 1;
    int64 controller_id = 2;
}

message NVMeControllerStatsResponse {
    int64 id = 1;
    string stats = 2;
}

message NVMeNamespaceCreateRequest {
    NVMeNamespace namespace = 1;
}

message NVMeNamespaceCreateResponse {
    // Intentionally empty.
}

message NVMeNamespaceDeleteRequest {
    int64 subsystem_id = 1;
    int64 controller_id = 2;
    int64 namespace_id = 3;
}

message NVMeNamespaceDeleteResponse {
    // Intentionally empty.
}

message NVMeNamespaceUpdateRequest {
    NVMeNamespace namespace = 1;
}

message NVMeNamespaceUpdateResponse {
    // Intentionally empty.
}

message NVMeNamespaceListRequest {
    int64 subsystem_id = 1;
    int64 controller_id = 2;
}

message NVMeNamespaceListResponse {
    repeated NVMeNamespace namespace = 1;
}

message NVMeNamespaceGetRequest {
    int64 subsystem_id = 1;
    int64 controller_id = 2;
    int64 namespace_id = 3;
}

message NVMeNamespaceGetResponse {
    NVMeNamespace namespace = 1;
}

message NVMeNamespaceStatsRequest {
    int64 subsystem_id = 1;
    int64 controller_id = 2;
    int64 namespace_id = 3;
}

message NVMeNamespaceStatsResponse {
    int64 id = 1;
    string stats = 2;
}

message VirtioBlkCreateRequest {
    VirtioBlk controller = 1;
}

message VirtioBlkCreateResponse {
    // Intentionally empty.
}

message VirtioBlkDeleteRequest {
    int64 controller_id = 1;
}

message VirtioBlkDeleteResponse {
    // Intentionally empty.
}

message VirtioBlkUpdateRequest {
    VirtioBlk controller = 1;
}

message VirtioBlkUpdateResponse {
    // Intentionally empty.
}

message VirtioBlkListRequest {
    int64 subsystem_id = 1;
}

message VirtioBlkListResponse {
    repeated VirtioBlk controller = 1;
}

message VirtioBlkGetRequest {
    int64 controller_id = 1;
}

message VirtioBlkGetResponse {
    VirtioBlk controller = 1;
}

message VirtioBlkStatsRequest {
    int64 controller_id = 1;
}

message VirtioBlkStatsResponse {
    int64 id = 1;
    string stats = 2;
}
