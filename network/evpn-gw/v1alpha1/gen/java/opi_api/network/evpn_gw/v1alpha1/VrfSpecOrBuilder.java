// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: l3_xpu_infra_mgr.proto

package opi_api.network.evpn_gw.v1alpha1;

public interface VrfSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.evpn_gw.v1alpha1.VrfSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * VXLAN VNI for L3 EVPN. Also used as EVPN route target
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: vni cannot be negative number. --)
   * </pre>
   *
   * <code>uint32 vni = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The vni.
   */
  int getVni();

  /**
   * <pre>
   * IPv4 or IPv6 loopback address prefix. Also serves as basis for RD in FRR
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPPrefix loopback_ip_prefix = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the loopbackIpPrefix field is set.
   */
  boolean hasLoopbackIpPrefix();
  /**
   * <pre>
   * IPv4 or IPv6 loopback address prefix. Also serves as basis for RD in FRR
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPPrefix loopback_ip_prefix = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The loopbackIpPrefix.
   */
  opi_api.network.opinetcommon.v1alpha1.IPPrefix getLoopbackIpPrefix();
  /**
   * <pre>
   * IPv4 or IPv6 loopback address prefix. Also serves as basis for RD in FRR
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPPrefix loopback_ip_prefix = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  opi_api.network.opinetcommon.v1alpha1.IPPrefixOrBuilder getLoopbackIpPrefixOrBuilder();

  /**
   * <pre>
   * IPv4 or IPv6 IP address prefix for the VXLAN TEP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPPrefix vtep_ip_prefix = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return Whether the vtepIpPrefix field is set.
   */
  boolean hasVtepIpPrefix();
  /**
   * <pre>
   * IPv4 or IPv6 IP address prefix for the VXLAN TEP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPPrefix vtep_ip_prefix = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The vtepIpPrefix.
   */
  opi_api.network.opinetcommon.v1alpha1.IPPrefix getVtepIpPrefix();
  /**
   * <pre>
   * IPv4 or IPv6 IP address prefix for the VXLAN TEP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPPrefix vtep_ip_prefix = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  opi_api.network.opinetcommon.v1alpha1.IPPrefixOrBuilder getVtepIpPrefixOrBuilder();
}
