// Copyright (c) 2023 Pensando, AMD Inc, or its subsidiaries.
// protobuf specification for underlay (i.e. control plane) route table
// Underlayroute object differ from overlay/tenant Route  object because 
// next hop is very different, doesn't require priority, classification, metering, etc.

syntax = "proto3";
package opi_api.network.cloud.v1alpha1;

option java_package = "opi_api.network.cloud.v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "UnderlayRouteProto";

option go_package = "github.com/opiproject/opi-api/network/cloud/v1alpha1/gen/go";

import "networktypes.proto";
import "google/api/resource.proto";

// Underlay Route can be static or dynamic underlay route
message UnderlayRoute {
  option (google.api.resource) = {
    type: "opi_api.network.cloud.v1alpha1/underlayroute"
    pattern: "underlayroutes/{underlayroute}"
  };
  // route's unique id
  string name = 1;
  // Underlayroute configuration (can specify fields to query route for get operations)
  UnderlayRouteSpec spec = 2;
  // UnderlayRoute status
  UnderlayRouteStatus status = 3;
}

// control plane static route configuration
message UnderlayRouteSpec {
  // route table id this route belongs to
  string route_table_name_ref = 2;
  // destination address
  network.opinetcommon.v1alpha1.IPPrefix dest_prefix = 3;
  // next-hop address
  network.opinetcommon.v1alpha1.IPAddress next_hop_address = 4;
  // route is enabled or not
  network.opinetcommon.v1alpha1.AdminState state = 5;
  // enable/disable admin distance
  bool enable_admin_distance = 6;
  // admin distance set for a static route vs. what a routing
  // protocol computes it for the dynamic route.
  int32 admin_dist = 7;
  // interface ID, if this route is configured on RR
  string interface_name_ref = 8;
}

// Underlay Route status for a control plane static or dynamic route
message UnderlayRouteStatus {
  // route table id this route belongs to
  int32 route_table_name_ref  = 1;
  // destination address
  network.opinetcommon.v1alpha1.IPPrefix dest_prefix = 2;
  // next-hop address
  network.opinetcommon.v1alpha1.IPAddress next_hop_address = 3;
  // interface index, if the next-hop is an interface
  int32 if_index = 5;
  // type of route
  network.opinetcommon.v1alpha1.RouteType type = 6;
  // protocol via which the route is learned
  network.opinetcommon.v1alpha1.RouteProtocol proto = 7;
  // The number of seconds since this route was last updated or otherwise determined to be correct.
  int32 age = 8;
  // The primary routing metric for this route
  int32 metric = 9;
  // Is this route programmed either to a forwarding table, or to a partner that queries route information
  bool fib_route = 10;
  // Indicates whether the route destination is directly connected
  bool connected = 11;
  // Administrative distance for this route
  int32 admin_distance = 12;
}

// UnderlayRouteLookupKey can be used to query one or more routes based on various fields
message UnderlayRouteLookupKey {
  // route table id this route belongs to
  string route_table_name_ref = 1;
  // destination address
  network.opinetcommon.v1alpha1.IPPrefix dest_prefix = 2;
  // next-hop address
  network.opinetcommon.v1alpha1.IPAddress next_hop_address = 3;
  // interface index, if the next-hop is an interface
  int32 ifid = 4;
  // protocol via which the route is learned
  network.opinetcommon.v1alpha1.RouteProtocol proto = 6;
}
