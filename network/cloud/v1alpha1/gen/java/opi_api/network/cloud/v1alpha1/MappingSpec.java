// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mapping.proto

package opi_api.network.cloud.v1alpha1;

/**
 * <pre>
 * MappingSpec captures configuration of each mapping
 * NOTE: Mapping is either on the local host/TEP or remote TEP
 * </pre>
 *
 * Protobuf type {@code opi_api.network.cloud.v1alpha1.MappingSpec}
 */
public final class MappingSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.cloud.v1alpha1.MappingSpec)
    MappingSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MappingSpec.newBuilder() to construct.
  private MappingSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MappingSpec() {
    subnetNameRef_ = "";
    macAddr_ = com.google.protobuf.ByteString.EMPTY;
    tags_ = emptyIntList();
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MappingSpec();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MappingSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            opi_api.network.cloud.v1alpha1.L3MappingKey.Builder subBuilder = null;
            if (macOrIpCase_ == 1) {
              subBuilder = ((opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_).toBuilder();
            }
            macOrIp_ =
                input.readMessage(opi_api.network.cloud.v1alpha1.L3MappingKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_);
              macOrIp_ = subBuilder.buildPartial();
            }
            macOrIpCase_ = 1;
            break;
          }
          case 18: {
            opi_api.network.cloud.v1alpha1.L2MappingKey.Builder subBuilder = null;
            if (macOrIpCase_ == 2) {
              subBuilder = ((opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_).toBuilder();
            }
            macOrIp_ =
                input.readMessage(opi_api.network.cloud.v1alpha1.L2MappingKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_);
              macOrIp_ = subBuilder.buildPartial();
            }
            macOrIpCase_ = 2;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            subnetNameRef_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            dstinfoCase_ = 4;
            dstinfo_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            dstinfoCase_ = 5;
            dstinfo_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();
            dstinfoCase_ = 6;
            dstinfo_ = s;
            break;
          }
          case 58: {

            macAddr_ = input.readBytes();
            break;
          }
          case 66: {
            opi_api.network.opinetcommon.v1alpha1.Encap.Builder subBuilder = null;
            if (encap_ != null) {
              subBuilder = encap_.toBuilder();
            }
            encap_ = input.readMessage(opi_api.network.opinetcommon.v1alpha1.Encap.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(encap_);
              encap_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder subBuilder = null;
            if (publicIp_ != null) {
              subBuilder = publicIp_.toBuilder();
            }
            publicIp_ = input.readMessage(opi_api.network.opinetcommon.v1alpha1.IPAddress.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(publicIp_);
              publicIp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 80: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              tags_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            tags_.addInt(input.readUInt32());
            break;
          }
          case 82: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              tags_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              tags_.addInt(input.readUInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 88: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        tags_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.cloud.v1alpha1.MappingProto.internal_static_opi_api_network_cloud_v1alpha1_MappingSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.cloud.v1alpha1.MappingProto.internal_static_opi_api_network_cloud_v1alpha1_MappingSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.cloud.v1alpha1.MappingSpec.class, opi_api.network.cloud.v1alpha1.MappingSpec.Builder.class);
  }

  private int macOrIpCase_ = 0;
  private java.lang.Object macOrIp_;
  public enum MacOrIpCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    IP_KEY(1),
    MAC_KEY(2),
    MACORIP_NOT_SET(0);
    private final int value;
    private MacOrIpCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MacOrIpCase valueOf(int value) {
      return forNumber(value);
    }

    public static MacOrIpCase forNumber(int value) {
      switch (value) {
        case 1: return IP_KEY;
        case 2: return MAC_KEY;
        case 0: return MACORIP_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MacOrIpCase
  getMacOrIpCase() {
    return MacOrIpCase.forNumber(
        macOrIpCase_);
  }

  private int dstinfoCase_ = 0;
  private java.lang.Object dstinfo_;
  public enum DstinfoCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    VNIC_NAME_REF(4),
    TUNNEL_NAME_REF(5),
    NH_GROUP_NAME_REF(6),
    DSTINFO_NOT_SET(0);
    private final int value;
    private DstinfoCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DstinfoCase valueOf(int value) {
      return forNumber(value);
    }

    public static DstinfoCase forNumber(int value) {
      switch (value) {
        case 4: return VNIC_NAME_REF;
        case 5: return TUNNEL_NAME_REF;
        case 6: return NH_GROUP_NAME_REF;
        case 0: return DSTINFO_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DstinfoCase
  getDstinfoCase() {
    return DstinfoCase.forNumber(
        dstinfoCase_);
  }

  public static final int IP_KEY_FIELD_NUMBER = 1;
  /**
   * <pre>
   * IP mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
   * @return Whether the ipKey field is set.
   */
  @java.lang.Override
  public boolean hasIpKey() {
    return macOrIpCase_ == 1;
  }
  /**
   * <pre>
   * IP mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
   * @return The ipKey.
   */
  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.L3MappingKey getIpKey() {
    if (macOrIpCase_ == 1) {
       return (opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_;
    }
    return opi_api.network.cloud.v1alpha1.L3MappingKey.getDefaultInstance();
  }
  /**
   * <pre>
   * IP mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
   */
  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.L3MappingKeyOrBuilder getIpKeyOrBuilder() {
    if (macOrIpCase_ == 1) {
       return (opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_;
    }
    return opi_api.network.cloud.v1alpha1.L3MappingKey.getDefaultInstance();
  }

  public static final int MAC_KEY_FIELD_NUMBER = 2;
  /**
   * <pre>
   * MAC mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
   * @return Whether the macKey field is set.
   */
  @java.lang.Override
  public boolean hasMacKey() {
    return macOrIpCase_ == 2;
  }
  /**
   * <pre>
   * MAC mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
   * @return The macKey.
   */
  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.L2MappingKey getMacKey() {
    if (macOrIpCase_ == 2) {
       return (opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_;
    }
    return opi_api.network.cloud.v1alpha1.L2MappingKey.getDefaultInstance();
  }
  /**
   * <pre>
   * MAC mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
   */
  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.L2MappingKeyOrBuilder getMacKeyOrBuilder() {
    if (macOrIpCase_ == 2) {
       return (opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_;
    }
    return opi_api.network.cloud.v1alpha1.L2MappingKey.getDefaultInstance();
  }

  public static final int SUBNET_NAME_REF_FIELD_NUMBER = 3;
  private volatile java.lang.Object subnetNameRef_;
  /**
   * <pre>
   * subnet this mapping is in
   * </pre>
   *
   * <code>string subnet_name_ref = 3;</code>
   * @return The subnetNameRef.
   */
  @java.lang.Override
  public java.lang.String getSubnetNameRef() {
    java.lang.Object ref = subnetNameRef_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subnetNameRef_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * subnet this mapping is in
   * </pre>
   *
   * <code>string subnet_name_ref = 3;</code>
   * @return The bytes for subnetNameRef.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSubnetNameRefBytes() {
    java.lang.Object ref = subnetNameRef_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subnetNameRef_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VNIC_NAME_REF_FIELD_NUMBER = 4;
  /**
   * <pre>
   * if IP is that of local vnic, corresponding vnic id
   * this is mandatory attribute for local IP mappings
   * </pre>
   *
   * <code>string vnic_name_ref = 4;</code>
   * @return Whether the vnicNameRef field is set.
   */
  public boolean hasVnicNameRef() {
    return dstinfoCase_ == 4;
  }
  /**
   * <pre>
   * if IP is that of local vnic, corresponding vnic id
   * this is mandatory attribute for local IP mappings
   * </pre>
   *
   * <code>string vnic_name_ref = 4;</code>
   * @return The vnicNameRef.
   */
  public java.lang.String getVnicNameRef() {
    java.lang.Object ref = "";
    if (dstinfoCase_ == 4) {
      ref = dstinfo_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (dstinfoCase_ == 4) {
        dstinfo_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * if IP is that of local vnic, corresponding vnic id
   * this is mandatory attribute for local IP mappings
   * </pre>
   *
   * <code>string vnic_name_ref = 4;</code>
   * @return The bytes for vnicNameRef.
   */
  public com.google.protobuf.ByteString
      getVnicNameRefBytes() {
    java.lang.Object ref = "";
    if (dstinfoCase_ == 4) {
      ref = dstinfo_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (dstinfoCase_ == 4) {
        dstinfo_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TUNNEL_NAME_REF_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Tunnel ID of the remote TEP for remote mapping
   * this is mandatory attribute for remote MAC/IP mappings for
   * non-ECMP cases
   * </pre>
   *
   * <code>string tunnel_name_ref = 5;</code>
   * @return Whether the tunnelNameRef field is set.
   */
  public boolean hasTunnelNameRef() {
    return dstinfoCase_ == 5;
  }
  /**
   * <pre>
   * Tunnel ID of the remote TEP for remote mapping
   * this is mandatory attribute for remote MAC/IP mappings for
   * non-ECMP cases
   * </pre>
   *
   * <code>string tunnel_name_ref = 5;</code>
   * @return The tunnelNameRef.
   */
  public java.lang.String getTunnelNameRef() {
    java.lang.Object ref = "";
    if (dstinfoCase_ == 5) {
      ref = dstinfo_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (dstinfoCase_ == 5) {
        dstinfo_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Tunnel ID of the remote TEP for remote mapping
   * this is mandatory attribute for remote MAC/IP mappings for
   * non-ECMP cases
   * </pre>
   *
   * <code>string tunnel_name_ref = 5;</code>
   * @return The bytes for tunnelNameRef.
   */
  public com.google.protobuf.ByteString
      getTunnelNameRefBytes() {
    java.lang.Object ref = "";
    if (dstinfoCase_ == 5) {
      ref = dstinfo_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (dstinfoCase_ == 5) {
        dstinfo_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NH_GROUP_NAME_REF_FIELD_NUMBER = 6;
  /**
   * <pre>
   * overlay nexthop/TEP group for remote mappings
   * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
   * </pre>
   *
   * <code>string nh_group_name_ref = 6;</code>
   * @return Whether the nhGroupNameRef field is set.
   */
  public boolean hasNhGroupNameRef() {
    return dstinfoCase_ == 6;
  }
  /**
   * <pre>
   * overlay nexthop/TEP group for remote mappings
   * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
   * </pre>
   *
   * <code>string nh_group_name_ref = 6;</code>
   * @return The nhGroupNameRef.
   */
  public java.lang.String getNhGroupNameRef() {
    java.lang.Object ref = "";
    if (dstinfoCase_ == 6) {
      ref = dstinfo_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (dstinfoCase_ == 6) {
        dstinfo_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * overlay nexthop/TEP group for remote mappings
   * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
   * </pre>
   *
   * <code>string nh_group_name_ref = 6;</code>
   * @return The bytes for nhGroupNameRef.
   */
  public com.google.protobuf.ByteString
      getNhGroupNameRefBytes() {
    java.lang.Object ref = "";
    if (dstinfoCase_ == 6) {
      ref = dstinfo_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (dstinfoCase_ == 6) {
        dstinfo_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAC_ADDR_FIELD_NUMBER = 7;
  private com.google.protobuf.ByteString macAddr_;
  /**
   * <pre>
   * overlay MAC address of this mapping
   * </pre>
   *
   * <code>bytes mac_addr = 7;</code>
   * @return The macAddr.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMacAddr() {
    return macAddr_;
  }

  public static final int ENCAP_FIELD_NUMBER = 8;
  private opi_api.network.opinetcommon.v1alpha1.Encap encap_;
  /**
   * <pre>
   * fabric encap information specific to this mapping, if any
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
   * @return Whether the encap field is set.
   */
  @java.lang.Override
  public boolean hasEncap() {
    return encap_ != null;
  }
  /**
   * <pre>
   * fabric encap information specific to this mapping, if any
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
   * @return The encap.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.Encap getEncap() {
    return encap_ == null ? opi_api.network.opinetcommon.v1alpha1.Encap.getDefaultInstance() : encap_;
  }
  /**
   * <pre>
   * fabric encap information specific to this mapping, if any
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder getEncapOrBuilder() {
    return getEncap();
  }

  public static final int PUBLIC_IP_FIELD_NUMBER = 9;
  private opi_api.network.opinetcommon.v1alpha1.IPAddress publicIp_;
  /**
   * <pre>
   * public IP, if overlay IP has corresponding public IP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
   * @return Whether the publicIp field is set.
   */
  @java.lang.Override
  public boolean hasPublicIp() {
    return publicIp_ != null;
  }
  /**
   * <pre>
   * public IP, if overlay IP has corresponding public IP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
   * @return The publicIp.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddress getPublicIp() {
    return publicIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : publicIp_;
  }
  /**
   * <pre>
   * public IP, if overlay IP has corresponding public IP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getPublicIpOrBuilder() {
    return getPublicIp();
  }

  public static final int TAGS_FIELD_NUMBER = 10;
  private com.google.protobuf.Internal.IntList tags_;
  /**
   * <pre>
   * tag/label/security group of this IP mapping, these tags/labels/SGs can be
   * used in defining security policy rules
   * range: 1 - 4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
   * </pre>
   *
   * <code>repeated uint32 tags = 10;</code>
   * @return A list containing the tags.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getTagsList() {
    return tags_;
  }
  /**
   * <pre>
   * tag/label/security group of this IP mapping, these tags/labels/SGs can be
   * used in defining security policy rules
   * range: 1 - 4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
   * </pre>
   *
   * <code>repeated uint32 tags = 10;</code>
   * @return The count of tags.
   */
  public int getTagsCount() {
    return tags_.size();
  }
  /**
   * <pre>
   * tag/label/security group of this IP mapping, these tags/labels/SGs can be
   * used in defining security policy rules
   * range: 1 - 4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
   * </pre>
   *
   * <code>repeated uint32 tags = 10;</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  public int getTags(int index) {
    return tags_.getInt(index);
  }
  private int tagsMemoizedSerializedSize = -1;

  public static final int TYPE_FIELD_NUMBER = 11;
  private int type_;
  /**
   * <pre>
   * type of the IP mapping endpoint, default is vpc mapping
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 11;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * type of the IP mapping endpoint, default is vpc mapping
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 11;</code>
   * @return The type.
   */
  @java.lang.Override public opi_api.network.cloud.v1alpha1.MappingType getType() {
    @SuppressWarnings("deprecation")
    opi_api.network.cloud.v1alpha1.MappingType result = opi_api.network.cloud.v1alpha1.MappingType.valueOf(type_);
    return result == null ? opi_api.network.cloud.v1alpha1.MappingType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (macOrIpCase_ == 1) {
      output.writeMessage(1, (opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_);
    }
    if (macOrIpCase_ == 2) {
      output.writeMessage(2, (opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetNameRef_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, subnetNameRef_);
    }
    if (dstinfoCase_ == 4) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, dstinfo_);
    }
    if (dstinfoCase_ == 5) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, dstinfo_);
    }
    if (dstinfoCase_ == 6) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, dstinfo_);
    }
    if (!macAddr_.isEmpty()) {
      output.writeBytes(7, macAddr_);
    }
    if (encap_ != null) {
      output.writeMessage(8, getEncap());
    }
    if (publicIp_ != null) {
      output.writeMessage(9, getPublicIp());
    }
    if (getTagsList().size() > 0) {
      output.writeUInt32NoTag(82);
      output.writeUInt32NoTag(tagsMemoizedSerializedSize);
    }
    for (int i = 0; i < tags_.size(); i++) {
      output.writeUInt32NoTag(tags_.getInt(i));
    }
    if (type_ != opi_api.network.cloud.v1alpha1.MappingType.MAPPING_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(11, type_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (macOrIpCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_);
    }
    if (macOrIpCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetNameRef_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, subnetNameRef_);
    }
    if (dstinfoCase_ == 4) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, dstinfo_);
    }
    if (dstinfoCase_ == 5) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, dstinfo_);
    }
    if (dstinfoCase_ == 6) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, dstinfo_);
    }
    if (!macAddr_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(7, macAddr_);
    }
    if (encap_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getEncap());
    }
    if (publicIp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getPublicIp());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tags_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(tags_.getInt(i));
      }
      size += dataSize;
      if (!getTagsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      tagsMemoizedSerializedSize = dataSize;
    }
    if (type_ != opi_api.network.cloud.v1alpha1.MappingType.MAPPING_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.cloud.v1alpha1.MappingSpec)) {
      return super.equals(obj);
    }
    opi_api.network.cloud.v1alpha1.MappingSpec other = (opi_api.network.cloud.v1alpha1.MappingSpec) obj;

    if (!getSubnetNameRef()
        .equals(other.getSubnetNameRef())) return false;
    if (!getMacAddr()
        .equals(other.getMacAddr())) return false;
    if (hasEncap() != other.hasEncap()) return false;
    if (hasEncap()) {
      if (!getEncap()
          .equals(other.getEncap())) return false;
    }
    if (hasPublicIp() != other.hasPublicIp()) return false;
    if (hasPublicIp()) {
      if (!getPublicIp()
          .equals(other.getPublicIp())) return false;
    }
    if (!getTagsList()
        .equals(other.getTagsList())) return false;
    if (type_ != other.type_) return false;
    if (!getMacOrIpCase().equals(other.getMacOrIpCase())) return false;
    switch (macOrIpCase_) {
      case 1:
        if (!getIpKey()
            .equals(other.getIpKey())) return false;
        break;
      case 2:
        if (!getMacKey()
            .equals(other.getMacKey())) return false;
        break;
      case 0:
      default:
    }
    if (!getDstinfoCase().equals(other.getDstinfoCase())) return false;
    switch (dstinfoCase_) {
      case 4:
        if (!getVnicNameRef()
            .equals(other.getVnicNameRef())) return false;
        break;
      case 5:
        if (!getTunnelNameRef()
            .equals(other.getTunnelNameRef())) return false;
        break;
      case 6:
        if (!getNhGroupNameRef()
            .equals(other.getNhGroupNameRef())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SUBNET_NAME_REF_FIELD_NUMBER;
    hash = (53 * hash) + getSubnetNameRef().hashCode();
    hash = (37 * hash) + MAC_ADDR_FIELD_NUMBER;
    hash = (53 * hash) + getMacAddr().hashCode();
    if (hasEncap()) {
      hash = (37 * hash) + ENCAP_FIELD_NUMBER;
      hash = (53 * hash) + getEncap().hashCode();
    }
    if (hasPublicIp()) {
      hash = (37 * hash) + PUBLIC_IP_FIELD_NUMBER;
      hash = (53 * hash) + getPublicIp().hashCode();
    }
    if (getTagsCount() > 0) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTagsList().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    switch (macOrIpCase_) {
      case 1:
        hash = (37 * hash) + IP_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getIpKey().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MAC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getMacKey().hashCode();
        break;
      case 0:
      default:
    }
    switch (dstinfoCase_) {
      case 4:
        hash = (37 * hash) + VNIC_NAME_REF_FIELD_NUMBER;
        hash = (53 * hash) + getVnicNameRef().hashCode();
        break;
      case 5:
        hash = (37 * hash) + TUNNEL_NAME_REF_FIELD_NUMBER;
        hash = (53 * hash) + getTunnelNameRef().hashCode();
        break;
      case 6:
        hash = (37 * hash) + NH_GROUP_NAME_REF_FIELD_NUMBER;
        hash = (53 * hash) + getNhGroupNameRef().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.MappingSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.cloud.v1alpha1.MappingSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MappingSpec captures configuration of each mapping
   * NOTE: Mapping is either on the local host/TEP or remote TEP
   * </pre>
   *
   * Protobuf type {@code opi_api.network.cloud.v1alpha1.MappingSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.cloud.v1alpha1.MappingSpec)
      opi_api.network.cloud.v1alpha1.MappingSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.cloud.v1alpha1.MappingProto.internal_static_opi_api_network_cloud_v1alpha1_MappingSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.cloud.v1alpha1.MappingProto.internal_static_opi_api_network_cloud_v1alpha1_MappingSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.cloud.v1alpha1.MappingSpec.class, opi_api.network.cloud.v1alpha1.MappingSpec.Builder.class);
    }

    // Construct using opi_api.network.cloud.v1alpha1.MappingSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      subnetNameRef_ = "";

      macAddr_ = com.google.protobuf.ByteString.EMPTY;

      if (encapBuilder_ == null) {
        encap_ = null;
      } else {
        encap_ = null;
        encapBuilder_ = null;
      }
      if (publicIpBuilder_ == null) {
        publicIp_ = null;
      } else {
        publicIp_ = null;
        publicIpBuilder_ = null;
      }
      tags_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;

      macOrIpCase_ = 0;
      macOrIp_ = null;
      dstinfoCase_ = 0;
      dstinfo_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.cloud.v1alpha1.MappingProto.internal_static_opi_api_network_cloud_v1alpha1_MappingSpec_descriptor;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.MappingSpec getDefaultInstanceForType() {
      return opi_api.network.cloud.v1alpha1.MappingSpec.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.MappingSpec build() {
      opi_api.network.cloud.v1alpha1.MappingSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.MappingSpec buildPartial() {
      opi_api.network.cloud.v1alpha1.MappingSpec result = new opi_api.network.cloud.v1alpha1.MappingSpec(this);
      int from_bitField0_ = bitField0_;
      if (macOrIpCase_ == 1) {
        if (ipKeyBuilder_ == null) {
          result.macOrIp_ = macOrIp_;
        } else {
          result.macOrIp_ = ipKeyBuilder_.build();
        }
      }
      if (macOrIpCase_ == 2) {
        if (macKeyBuilder_ == null) {
          result.macOrIp_ = macOrIp_;
        } else {
          result.macOrIp_ = macKeyBuilder_.build();
        }
      }
      result.subnetNameRef_ = subnetNameRef_;
      if (dstinfoCase_ == 4) {
        result.dstinfo_ = dstinfo_;
      }
      if (dstinfoCase_ == 5) {
        result.dstinfo_ = dstinfo_;
      }
      if (dstinfoCase_ == 6) {
        result.dstinfo_ = dstinfo_;
      }
      result.macAddr_ = macAddr_;
      if (encapBuilder_ == null) {
        result.encap_ = encap_;
      } else {
        result.encap_ = encapBuilder_.build();
      }
      if (publicIpBuilder_ == null) {
        result.publicIp_ = publicIp_;
      } else {
        result.publicIp_ = publicIpBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        tags_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.tags_ = tags_;
      result.type_ = type_;
      result.macOrIpCase_ = macOrIpCase_;
      result.dstinfoCase_ = dstinfoCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.cloud.v1alpha1.MappingSpec) {
        return mergeFrom((opi_api.network.cloud.v1alpha1.MappingSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.cloud.v1alpha1.MappingSpec other) {
      if (other == opi_api.network.cloud.v1alpha1.MappingSpec.getDefaultInstance()) return this;
      if (!other.getSubnetNameRef().isEmpty()) {
        subnetNameRef_ = other.subnetNameRef_;
        onChanged();
      }
      if (other.getMacAddr() != com.google.protobuf.ByteString.EMPTY) {
        setMacAddr(other.getMacAddr());
      }
      if (other.hasEncap()) {
        mergeEncap(other.getEncap());
      }
      if (other.hasPublicIp()) {
        mergePublicIp(other.getPublicIp());
      }
      if (!other.tags_.isEmpty()) {
        if (tags_.isEmpty()) {
          tags_ = other.tags_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureTagsIsMutable();
          tags_.addAll(other.tags_);
        }
        onChanged();
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      switch (other.getMacOrIpCase()) {
        case IP_KEY: {
          mergeIpKey(other.getIpKey());
          break;
        }
        case MAC_KEY: {
          mergeMacKey(other.getMacKey());
          break;
        }
        case MACORIP_NOT_SET: {
          break;
        }
      }
      switch (other.getDstinfoCase()) {
        case VNIC_NAME_REF: {
          dstinfoCase_ = 4;
          dstinfo_ = other.dstinfo_;
          onChanged();
          break;
        }
        case TUNNEL_NAME_REF: {
          dstinfoCase_ = 5;
          dstinfo_ = other.dstinfo_;
          onChanged();
          break;
        }
        case NH_GROUP_NAME_REF: {
          dstinfoCase_ = 6;
          dstinfo_ = other.dstinfo_;
          onChanged();
          break;
        }
        case DSTINFO_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.cloud.v1alpha1.MappingSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.cloud.v1alpha1.MappingSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int macOrIpCase_ = 0;
    private java.lang.Object macOrIp_;
    public MacOrIpCase
        getMacOrIpCase() {
      return MacOrIpCase.forNumber(
          macOrIpCase_);
    }

    public Builder clearMacOrIp() {
      macOrIpCase_ = 0;
      macOrIp_ = null;
      onChanged();
      return this;
    }

    private int dstinfoCase_ = 0;
    private java.lang.Object dstinfo_;
    public DstinfoCase
        getDstinfoCase() {
      return DstinfoCase.forNumber(
          dstinfoCase_);
    }

    public Builder clearDstinfo() {
      dstinfoCase_ = 0;
      dstinfo_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.cloud.v1alpha1.L3MappingKey, opi_api.network.cloud.v1alpha1.L3MappingKey.Builder, opi_api.network.cloud.v1alpha1.L3MappingKeyOrBuilder> ipKeyBuilder_;
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     * @return Whether the ipKey field is set.
     */
    @java.lang.Override
    public boolean hasIpKey() {
      return macOrIpCase_ == 1;
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     * @return The ipKey.
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.L3MappingKey getIpKey() {
      if (ipKeyBuilder_ == null) {
        if (macOrIpCase_ == 1) {
          return (opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_;
        }
        return opi_api.network.cloud.v1alpha1.L3MappingKey.getDefaultInstance();
      } else {
        if (macOrIpCase_ == 1) {
          return ipKeyBuilder_.getMessage();
        }
        return opi_api.network.cloud.v1alpha1.L3MappingKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     */
    public Builder setIpKey(opi_api.network.cloud.v1alpha1.L3MappingKey value) {
      if (ipKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        macOrIp_ = value;
        onChanged();
      } else {
        ipKeyBuilder_.setMessage(value);
      }
      macOrIpCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     */
    public Builder setIpKey(
        opi_api.network.cloud.v1alpha1.L3MappingKey.Builder builderForValue) {
      if (ipKeyBuilder_ == null) {
        macOrIp_ = builderForValue.build();
        onChanged();
      } else {
        ipKeyBuilder_.setMessage(builderForValue.build());
      }
      macOrIpCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     */
    public Builder mergeIpKey(opi_api.network.cloud.v1alpha1.L3MappingKey value) {
      if (ipKeyBuilder_ == null) {
        if (macOrIpCase_ == 1 &&
            macOrIp_ != opi_api.network.cloud.v1alpha1.L3MappingKey.getDefaultInstance()) {
          macOrIp_ = opi_api.network.cloud.v1alpha1.L3MappingKey.newBuilder((opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_)
              .mergeFrom(value).buildPartial();
        } else {
          macOrIp_ = value;
        }
        onChanged();
      } else {
        if (macOrIpCase_ == 1) {
          ipKeyBuilder_.mergeFrom(value);
        }
        ipKeyBuilder_.setMessage(value);
      }
      macOrIpCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     */
    public Builder clearIpKey() {
      if (ipKeyBuilder_ == null) {
        if (macOrIpCase_ == 1) {
          macOrIpCase_ = 0;
          macOrIp_ = null;
          onChanged();
        }
      } else {
        if (macOrIpCase_ == 1) {
          macOrIpCase_ = 0;
          macOrIp_ = null;
        }
        ipKeyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     */
    public opi_api.network.cloud.v1alpha1.L3MappingKey.Builder getIpKeyBuilder() {
      return getIpKeyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.L3MappingKeyOrBuilder getIpKeyOrBuilder() {
      if ((macOrIpCase_ == 1) && (ipKeyBuilder_ != null)) {
        return ipKeyBuilder_.getMessageOrBuilder();
      } else {
        if (macOrIpCase_ == 1) {
          return (opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_;
        }
        return opi_api.network.cloud.v1alpha1.L3MappingKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * IP mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.cloud.v1alpha1.L3MappingKey, opi_api.network.cloud.v1alpha1.L3MappingKey.Builder, opi_api.network.cloud.v1alpha1.L3MappingKeyOrBuilder> 
        getIpKeyFieldBuilder() {
      if (ipKeyBuilder_ == null) {
        if (!(macOrIpCase_ == 1)) {
          macOrIp_ = opi_api.network.cloud.v1alpha1.L3MappingKey.getDefaultInstance();
        }
        ipKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.cloud.v1alpha1.L3MappingKey, opi_api.network.cloud.v1alpha1.L3MappingKey.Builder, opi_api.network.cloud.v1alpha1.L3MappingKeyOrBuilder>(
                (opi_api.network.cloud.v1alpha1.L3MappingKey) macOrIp_,
                getParentForChildren(),
                isClean());
        macOrIp_ = null;
      }
      macOrIpCase_ = 1;
      onChanged();;
      return ipKeyBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.cloud.v1alpha1.L2MappingKey, opi_api.network.cloud.v1alpha1.L2MappingKey.Builder, opi_api.network.cloud.v1alpha1.L2MappingKeyOrBuilder> macKeyBuilder_;
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     * @return Whether the macKey field is set.
     */
    @java.lang.Override
    public boolean hasMacKey() {
      return macOrIpCase_ == 2;
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     * @return The macKey.
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.L2MappingKey getMacKey() {
      if (macKeyBuilder_ == null) {
        if (macOrIpCase_ == 2) {
          return (opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_;
        }
        return opi_api.network.cloud.v1alpha1.L2MappingKey.getDefaultInstance();
      } else {
        if (macOrIpCase_ == 2) {
          return macKeyBuilder_.getMessage();
        }
        return opi_api.network.cloud.v1alpha1.L2MappingKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     */
    public Builder setMacKey(opi_api.network.cloud.v1alpha1.L2MappingKey value) {
      if (macKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        macOrIp_ = value;
        onChanged();
      } else {
        macKeyBuilder_.setMessage(value);
      }
      macOrIpCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     */
    public Builder setMacKey(
        opi_api.network.cloud.v1alpha1.L2MappingKey.Builder builderForValue) {
      if (macKeyBuilder_ == null) {
        macOrIp_ = builderForValue.build();
        onChanged();
      } else {
        macKeyBuilder_.setMessage(builderForValue.build());
      }
      macOrIpCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     */
    public Builder mergeMacKey(opi_api.network.cloud.v1alpha1.L2MappingKey value) {
      if (macKeyBuilder_ == null) {
        if (macOrIpCase_ == 2 &&
            macOrIp_ != opi_api.network.cloud.v1alpha1.L2MappingKey.getDefaultInstance()) {
          macOrIp_ = opi_api.network.cloud.v1alpha1.L2MappingKey.newBuilder((opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_)
              .mergeFrom(value).buildPartial();
        } else {
          macOrIp_ = value;
        }
        onChanged();
      } else {
        if (macOrIpCase_ == 2) {
          macKeyBuilder_.mergeFrom(value);
        }
        macKeyBuilder_.setMessage(value);
      }
      macOrIpCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     */
    public Builder clearMacKey() {
      if (macKeyBuilder_ == null) {
        if (macOrIpCase_ == 2) {
          macOrIpCase_ = 0;
          macOrIp_ = null;
          onChanged();
        }
      } else {
        if (macOrIpCase_ == 2) {
          macOrIpCase_ = 0;
          macOrIp_ = null;
        }
        macKeyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     */
    public opi_api.network.cloud.v1alpha1.L2MappingKey.Builder getMacKeyBuilder() {
      return getMacKeyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.L2MappingKeyOrBuilder getMacKeyOrBuilder() {
      if ((macOrIpCase_ == 2) && (macKeyBuilder_ != null)) {
        return macKeyBuilder_.getMessageOrBuilder();
      } else {
        if (macOrIpCase_ == 2) {
          return (opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_;
        }
        return opi_api.network.cloud.v1alpha1.L2MappingKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * MAC mapping key
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.cloud.v1alpha1.L2MappingKey, opi_api.network.cloud.v1alpha1.L2MappingKey.Builder, opi_api.network.cloud.v1alpha1.L2MappingKeyOrBuilder> 
        getMacKeyFieldBuilder() {
      if (macKeyBuilder_ == null) {
        if (!(macOrIpCase_ == 2)) {
          macOrIp_ = opi_api.network.cloud.v1alpha1.L2MappingKey.getDefaultInstance();
        }
        macKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.cloud.v1alpha1.L2MappingKey, opi_api.network.cloud.v1alpha1.L2MappingKey.Builder, opi_api.network.cloud.v1alpha1.L2MappingKeyOrBuilder>(
                (opi_api.network.cloud.v1alpha1.L2MappingKey) macOrIp_,
                getParentForChildren(),
                isClean());
        macOrIp_ = null;
      }
      macOrIpCase_ = 2;
      onChanged();;
      return macKeyBuilder_;
    }

    private java.lang.Object subnetNameRef_ = "";
    /**
     * <pre>
     * subnet this mapping is in
     * </pre>
     *
     * <code>string subnet_name_ref = 3;</code>
     * @return The subnetNameRef.
     */
    public java.lang.String getSubnetNameRef() {
      java.lang.Object ref = subnetNameRef_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subnetNameRef_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * subnet this mapping is in
     * </pre>
     *
     * <code>string subnet_name_ref = 3;</code>
     * @return The bytes for subnetNameRef.
     */
    public com.google.protobuf.ByteString
        getSubnetNameRefBytes() {
      java.lang.Object ref = subnetNameRef_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subnetNameRef_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * subnet this mapping is in
     * </pre>
     *
     * <code>string subnet_name_ref = 3;</code>
     * @param value The subnetNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setSubnetNameRef(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subnetNameRef_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * subnet this mapping is in
     * </pre>
     *
     * <code>string subnet_name_ref = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSubnetNameRef() {
      
      subnetNameRef_ = getDefaultInstance().getSubnetNameRef();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * subnet this mapping is in
     * </pre>
     *
     * <code>string subnet_name_ref = 3;</code>
     * @param value The bytes for subnetNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setSubnetNameRefBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subnetNameRef_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * if IP is that of local vnic, corresponding vnic id
     * this is mandatory attribute for local IP mappings
     * </pre>
     *
     * <code>string vnic_name_ref = 4;</code>
     * @return Whether the vnicNameRef field is set.
     */
    @java.lang.Override
    public boolean hasVnicNameRef() {
      return dstinfoCase_ == 4;
    }
    /**
     * <pre>
     * if IP is that of local vnic, corresponding vnic id
     * this is mandatory attribute for local IP mappings
     * </pre>
     *
     * <code>string vnic_name_ref = 4;</code>
     * @return The vnicNameRef.
     */
    @java.lang.Override
    public java.lang.String getVnicNameRef() {
      java.lang.Object ref = "";
      if (dstinfoCase_ == 4) {
        ref = dstinfo_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (dstinfoCase_ == 4) {
          dstinfo_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * if IP is that of local vnic, corresponding vnic id
     * this is mandatory attribute for local IP mappings
     * </pre>
     *
     * <code>string vnic_name_ref = 4;</code>
     * @return The bytes for vnicNameRef.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVnicNameRefBytes() {
      java.lang.Object ref = "";
      if (dstinfoCase_ == 4) {
        ref = dstinfo_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (dstinfoCase_ == 4) {
          dstinfo_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * if IP is that of local vnic, corresponding vnic id
     * this is mandatory attribute for local IP mappings
     * </pre>
     *
     * <code>string vnic_name_ref = 4;</code>
     * @param value The vnicNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setVnicNameRef(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  dstinfoCase_ = 4;
      dstinfo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if IP is that of local vnic, corresponding vnic id
     * this is mandatory attribute for local IP mappings
     * </pre>
     *
     * <code>string vnic_name_ref = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearVnicNameRef() {
      if (dstinfoCase_ == 4) {
        dstinfoCase_ = 0;
        dstinfo_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * if IP is that of local vnic, corresponding vnic id
     * this is mandatory attribute for local IP mappings
     * </pre>
     *
     * <code>string vnic_name_ref = 4;</code>
     * @param value The bytes for vnicNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setVnicNameRefBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      dstinfoCase_ = 4;
      dstinfo_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Tunnel ID of the remote TEP for remote mapping
     * this is mandatory attribute for remote MAC/IP mappings for
     * non-ECMP cases
     * </pre>
     *
     * <code>string tunnel_name_ref = 5;</code>
     * @return Whether the tunnelNameRef field is set.
     */
    @java.lang.Override
    public boolean hasTunnelNameRef() {
      return dstinfoCase_ == 5;
    }
    /**
     * <pre>
     * Tunnel ID of the remote TEP for remote mapping
     * this is mandatory attribute for remote MAC/IP mappings for
     * non-ECMP cases
     * </pre>
     *
     * <code>string tunnel_name_ref = 5;</code>
     * @return The tunnelNameRef.
     */
    @java.lang.Override
    public java.lang.String getTunnelNameRef() {
      java.lang.Object ref = "";
      if (dstinfoCase_ == 5) {
        ref = dstinfo_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (dstinfoCase_ == 5) {
          dstinfo_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Tunnel ID of the remote TEP for remote mapping
     * this is mandatory attribute for remote MAC/IP mappings for
     * non-ECMP cases
     * </pre>
     *
     * <code>string tunnel_name_ref = 5;</code>
     * @return The bytes for tunnelNameRef.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTunnelNameRefBytes() {
      java.lang.Object ref = "";
      if (dstinfoCase_ == 5) {
        ref = dstinfo_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (dstinfoCase_ == 5) {
          dstinfo_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Tunnel ID of the remote TEP for remote mapping
     * this is mandatory attribute for remote MAC/IP mappings for
     * non-ECMP cases
     * </pre>
     *
     * <code>string tunnel_name_ref = 5;</code>
     * @param value The tunnelNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setTunnelNameRef(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  dstinfoCase_ = 5;
      dstinfo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tunnel ID of the remote TEP for remote mapping
     * this is mandatory attribute for remote MAC/IP mappings for
     * non-ECMP cases
     * </pre>
     *
     * <code>string tunnel_name_ref = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTunnelNameRef() {
      if (dstinfoCase_ == 5) {
        dstinfoCase_ = 0;
        dstinfo_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Tunnel ID of the remote TEP for remote mapping
     * this is mandatory attribute for remote MAC/IP mappings for
     * non-ECMP cases
     * </pre>
     *
     * <code>string tunnel_name_ref = 5;</code>
     * @param value The bytes for tunnelNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setTunnelNameRefBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      dstinfoCase_ = 5;
      dstinfo_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * overlay nexthop/TEP group for remote mappings
     * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
     * </pre>
     *
     * <code>string nh_group_name_ref = 6;</code>
     * @return Whether the nhGroupNameRef field is set.
     */
    @java.lang.Override
    public boolean hasNhGroupNameRef() {
      return dstinfoCase_ == 6;
    }
    /**
     * <pre>
     * overlay nexthop/TEP group for remote mappings
     * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
     * </pre>
     *
     * <code>string nh_group_name_ref = 6;</code>
     * @return The nhGroupNameRef.
     */
    @java.lang.Override
    public java.lang.String getNhGroupNameRef() {
      java.lang.Object ref = "";
      if (dstinfoCase_ == 6) {
        ref = dstinfo_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (dstinfoCase_ == 6) {
          dstinfo_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * overlay nexthop/TEP group for remote mappings
     * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
     * </pre>
     *
     * <code>string nh_group_name_ref = 6;</code>
     * @return The bytes for nhGroupNameRef.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNhGroupNameRefBytes() {
      java.lang.Object ref = "";
      if (dstinfoCase_ == 6) {
        ref = dstinfo_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (dstinfoCase_ == 6) {
          dstinfo_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * overlay nexthop/TEP group for remote mappings
     * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
     * </pre>
     *
     * <code>string nh_group_name_ref = 6;</code>
     * @param value The nhGroupNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setNhGroupNameRef(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  dstinfoCase_ = 6;
      dstinfo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * overlay nexthop/TEP group for remote mappings
     * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
     * </pre>
     *
     * <code>string nh_group_name_ref = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearNhGroupNameRef() {
      if (dstinfoCase_ == 6) {
        dstinfoCase_ = 0;
        dstinfo_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * overlay nexthop/TEP group for remote mappings
     * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
     * </pre>
     *
     * <code>string nh_group_name_ref = 6;</code>
     * @param value The bytes for nhGroupNameRef to set.
     * @return This builder for chaining.
     */
    public Builder setNhGroupNameRefBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      dstinfoCase_ = 6;
      dstinfo_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString macAddr_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * overlay MAC address of this mapping
     * </pre>
     *
     * <code>bytes mac_addr = 7;</code>
     * @return The macAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMacAddr() {
      return macAddr_;
    }
    /**
     * <pre>
     * overlay MAC address of this mapping
     * </pre>
     *
     * <code>bytes mac_addr = 7;</code>
     * @param value The macAddr to set.
     * @return This builder for chaining.
     */
    public Builder setMacAddr(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      macAddr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * overlay MAC address of this mapping
     * </pre>
     *
     * <code>bytes mac_addr = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMacAddr() {
      
      macAddr_ = getDefaultInstance().getMacAddr();
      onChanged();
      return this;
    }

    private opi_api.network.opinetcommon.v1alpha1.Encap encap_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.Encap, opi_api.network.opinetcommon.v1alpha1.Encap.Builder, opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder> encapBuilder_;
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     * @return Whether the encap field is set.
     */
    public boolean hasEncap() {
      return encapBuilder_ != null || encap_ != null;
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     * @return The encap.
     */
    public opi_api.network.opinetcommon.v1alpha1.Encap getEncap() {
      if (encapBuilder_ == null) {
        return encap_ == null ? opi_api.network.opinetcommon.v1alpha1.Encap.getDefaultInstance() : encap_;
      } else {
        return encapBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     */
    public Builder setEncap(opi_api.network.opinetcommon.v1alpha1.Encap value) {
      if (encapBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        encap_ = value;
        onChanged();
      } else {
        encapBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     */
    public Builder setEncap(
        opi_api.network.opinetcommon.v1alpha1.Encap.Builder builderForValue) {
      if (encapBuilder_ == null) {
        encap_ = builderForValue.build();
        onChanged();
      } else {
        encapBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     */
    public Builder mergeEncap(opi_api.network.opinetcommon.v1alpha1.Encap value) {
      if (encapBuilder_ == null) {
        if (encap_ != null) {
          encap_ =
            opi_api.network.opinetcommon.v1alpha1.Encap.newBuilder(encap_).mergeFrom(value).buildPartial();
        } else {
          encap_ = value;
        }
        onChanged();
      } else {
        encapBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     */
    public Builder clearEncap() {
      if (encapBuilder_ == null) {
        encap_ = null;
        onChanged();
      } else {
        encap_ = null;
        encapBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.Encap.Builder getEncapBuilder() {
      
      onChanged();
      return getEncapFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder getEncapOrBuilder() {
      if (encapBuilder_ != null) {
        return encapBuilder_.getMessageOrBuilder();
      } else {
        return encap_ == null ?
            opi_api.network.opinetcommon.v1alpha1.Encap.getDefaultInstance() : encap_;
      }
    }
    /**
     * <pre>
     * fabric encap information specific to this mapping, if any
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.Encap, opi_api.network.opinetcommon.v1alpha1.Encap.Builder, opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder> 
        getEncapFieldBuilder() {
      if (encapBuilder_ == null) {
        encapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.Encap, opi_api.network.opinetcommon.v1alpha1.Encap.Builder, opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder>(
                getEncap(),
                getParentForChildren(),
                isClean());
        encap_ = null;
      }
      return encapBuilder_;
    }

    private opi_api.network.opinetcommon.v1alpha1.IPAddress publicIp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> publicIpBuilder_;
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     * @return Whether the publicIp field is set.
     */
    public boolean hasPublicIp() {
      return publicIpBuilder_ != null || publicIp_ != null;
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     * @return The publicIp.
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress getPublicIp() {
      if (publicIpBuilder_ == null) {
        return publicIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : publicIp_;
      } else {
        return publicIpBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     */
    public Builder setPublicIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (publicIpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        publicIp_ = value;
        onChanged();
      } else {
        publicIpBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     */
    public Builder setPublicIp(
        opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder builderForValue) {
      if (publicIpBuilder_ == null) {
        publicIp_ = builderForValue.build();
        onChanged();
      } else {
        publicIpBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     */
    public Builder mergePublicIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (publicIpBuilder_ == null) {
        if (publicIp_ != null) {
          publicIp_ =
            opi_api.network.opinetcommon.v1alpha1.IPAddress.newBuilder(publicIp_).mergeFrom(value).buildPartial();
        } else {
          publicIp_ = value;
        }
        onChanged();
      } else {
        publicIpBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     */
    public Builder clearPublicIp() {
      if (publicIpBuilder_ == null) {
        publicIp_ = null;
        onChanged();
      } else {
        publicIp_ = null;
        publicIpBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder getPublicIpBuilder() {
      
      onChanged();
      return getPublicIpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getPublicIpOrBuilder() {
      if (publicIpBuilder_ != null) {
        return publicIpBuilder_.getMessageOrBuilder();
      } else {
        return publicIp_ == null ?
            opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : publicIp_;
      }
    }
    /**
     * <pre>
     * public IP, if overlay IP has corresponding public IP
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> 
        getPublicIpFieldBuilder() {
      if (publicIpBuilder_ == null) {
        publicIpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder>(
                getPublicIp(),
                getParentForChildren(),
                isClean());
        publicIp_ = null;
      }
      return publicIpBuilder_;
    }

    private com.google.protobuf.Internal.IntList tags_ = emptyIntList();
    private void ensureTagsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        tags_ = mutableCopy(tags_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * tag/label/security group of this IP mapping, these tags/labels/SGs can be
     * used in defining security policy rules
     * range: 1 - 4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
     * </pre>
     *
     * <code>repeated uint32 tags = 10;</code>
     * @return A list containing the tags.
     */
    public java.util.List<java.lang.Integer>
        getTagsList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(tags_) : tags_;
    }
    /**
     * <pre>
     * tag/label/security group of this IP mapping, these tags/labels/SGs can be
     * used in defining security policy rules
     * range: 1 - 4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
     * </pre>
     *
     * <code>repeated uint32 tags = 10;</code>
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * tag/label/security group of this IP mapping, these tags/labels/SGs can be
     * used in defining security policy rules
     * range: 1 - 4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
     * </pre>
     *
     * <code>repeated uint32 tags = 10;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public int getTags(int index) {
      return tags_.getInt(index);
    }
    /**
     * <pre>
     * tag/label/security group of this IP mapping, these tags/labels/SGs can be
     * used in defining security policy rules
     * range: 1 - 4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
     * </pre>
     *
     * <code>repeated uint32 tags = 10;</code>
     * @param index The index to set the value at.
     * @param value The tags to set.
     * @return This builder for chaining.
     */
    public Builder setTags(
        int index, int value) {
      ensureTagsIsMutable();
      tags_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tag/label/security group of this IP mapping, these tags/labels/SGs can be
     * used in defining security policy rules
     * range: 1 - 4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
     * </pre>
     *
     * <code>repeated uint32 tags = 10;</code>
     * @param value The tags to add.
     * @return This builder for chaining.
     */
    public Builder addTags(int value) {
      ensureTagsIsMutable();
      tags_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tag/label/security group of this IP mapping, these tags/labels/SGs can be
     * used in defining security policy rules
     * range: 1 - 4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
     * </pre>
     *
     * <code>repeated uint32 tags = 10;</code>
     * @param values The tags to add.
     * @return This builder for chaining.
     */
    public Builder addAllTags(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureTagsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, tags_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tag/label/security group of this IP mapping, these tags/labels/SGs can be
     * used in defining security policy rules
     * range: 1 - 4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
     * </pre>
     *
     * <code>repeated uint32 tags = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTags() {
      tags_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * type of the IP mapping endpoint, default is vpc mapping
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 11;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * type of the IP mapping endpoint, default is vpc mapping
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 11;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type of the IP mapping endpoint, default is vpc mapping
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 11;</code>
     * @return The type.
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.MappingType getType() {
      @SuppressWarnings("deprecation")
      opi_api.network.cloud.v1alpha1.MappingType result = opi_api.network.cloud.v1alpha1.MappingType.valueOf(type_);
      return result == null ? opi_api.network.cloud.v1alpha1.MappingType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * type of the IP mapping endpoint, default is vpc mapping
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 11;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(opi_api.network.cloud.v1alpha1.MappingType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type of the IP mapping endpoint, default is vpc mapping
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.cloud.v1alpha1.MappingSpec)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.MappingSpec)
  private static final opi_api.network.cloud.v1alpha1.MappingSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.cloud.v1alpha1.MappingSpec();
  }

  public static opi_api.network.cloud.v1alpha1.MappingSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MappingSpec>
      PARSER = new com.google.protobuf.AbstractParser<MappingSpec>() {
    @java.lang.Override
    public MappingSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MappingSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MappingSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MappingSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.MappingSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

