// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: device.proto
// Original file comments:
// Copyright (c) 2023 Pensando, AMD Inc, or its subsidiaries.
// device's network configuration
//
#ifndef GRPC_device_2eproto__INCLUDED
#define GRPC_device_2eproto__INCLUDED

#include "device.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace opi_api {
namespace network {
namespace cloud {
namespace v1alpha1 {

// Cloud Infra Service configure/operate objects to manage cloud infrastructure
// TB added:
//  Port APIs
//  rpc PortGet (PortGetRequest) returns (PortGetResponse) {}
//  rpc PortUpdate (PortUpdateRequest) returns (PortUpdateResponse) {}
//  rpc PortStatsReset (types.Id) returns (types.Empty) {}
//
//  Interface APIs
//  rpc InterfaceCreate (InterfaceRequest) returns (InterfaceResponse) {}
//  rpc InterfaceUpdate (InterfaceRequest) returns (InterfaceResponse) {}
//  rpc InterfaceDelete (InterfaceDeleteRequest) returns (InterfaceDeleteResponse) {}
//  rpc InterfaceGet (InterfaceGetRequest) returns (InterfaceGetResponse) {}
//
//  Route APIs
//  rpc RouteTableCreate (RouteTableRequest) returns (RouteTableResponse) {}
//  rpc RouteTableUpdate (RouteTableRequest) returns (RouteTableResponse) {}
//  rpc RouteTableGet (RouteTableGetRequest) returns (RouteTableGetResponse) {}
//  rpc RouteTableGetStreaming (RouteTableGetRequest) returns (stream RouteTableGetResponse) {}
//  rpc RouteTableDelete (RouteTableDeleteRequest) returns (RouteTableDeleteResponse) {}
//
//  rpc RouteCreate (RouteRequest) returns (RouteResponse) {}
//  rpc RouteUpdate (RouteRequest) returns (RouteResponse) {}
//  rpc RouteGet (RouteGetRequest) returns (RouteGetResponse) {}
//  rpc RouteDelete (RouteDeleteRequest) returns (RouteDeleteResponse) {}
//  rpc RouteLookup (RouteLookupRequest) returns (RouteLookupResponse) {}
//
//  rpc VnicCreate (VnicRequest) returns (VnicResponse) {}
//  rpc VnicUpdate (VnicRequest) returns (VnicResponse) {}
//  rpc VnicGet (VnicGetRequest) returns (VnicGetResponse) {}
//  rpc VnicDelete (VnicDeleteRequest) returns (VnicDeleteResponse) {}
//
//  rpc CPRouteCreate (CPRouteRequest) returns (CPRouteResponse) {}
//  rpc CPRouteUpdate(CPRouteRequest) returns (CPRouteResponse) {}
//  rpc CPRouteDelete (CPRouteDeleteRequest) returns (CPRouteDeleteResponse) {}
//  rpc CPRouteGet (CPRouteGetRequest) returns (CPRouteGetResponse) {}
//  rpc CPRouteLookup (CPRouteGetRequest) returns (CPRouteGetResponse) {}
//  rpc CPRouteRedistGet (CPRouteRedistGetRequest) returns (CPRouteRedistGetResponse) {}
//
//  rpc BGPCreate (BGPRequest) returns (BGPResponse) {}
//  rpc BGPUpdate (BGPRequest) returns (BGPResponse) {}
//  rpc BGPDelete (BGPDeleteRequest) returns (BGPDeleteResponse) {}
//  rpc BGPGet (BGPGetRequest) returns (BGPGetResponse) {}
//  rpc BGPPeerCreate (BGPPeerRequest) returns (BGPPeerResponse) {}
//  rpc BGPPeerUpdate (BGPPeerRequest) returns (BGPPeerResponse) {}
//  rpc BGPPeerDelete (BGPPeerDeleteRequest) returns (BGPPeerDeleteResponse) {}
//  rpc BGPPeerGet (BGPPeerGetRequest) returns (BGPPeerGetResponse) {}
//  rpc BGPPeerAfCreate (BGPPeerAfRequest) returns (BGPPeerAfResponse) {}
//  rpc BGPPeerAfUpdate (BGPPeerAfRequest) returns (BGPPeerAfResponse) {}
//  rpc BGPPeerAfDelete (BGPPeerAfDeleteRequest) returns (BGPPeerAfDeleteResponse) {}
//  rpc BGPPeerAfGet (BGPPeerAfGetRequest) returns (BGPPeerAfGetResponse) {}
//  rpc BGPClearRoute (BGPClearRouteRequest) returns (BGPClearRouteResponse) {}
//  rpc BGPNLRIPrefixGet (BGPNLRIPrefixGetRequest) returns (BGPNLRIPrefixGetResponse) {}
//  rpc BGPPrfxCntrsGet (BGPPrfxCntrsGetRequest) returns (BGPPrfxCntrsGetResponse) {}
//  rpc BGPAdjRibOutGet (BGPAdjRibOutGetRequest) returns (BGPAdjRibOutGetResponse) {}
//
//  rpc MappingCreate (MappingRequest) returns (MappingResponse) {}
//  rpc MappingUpdate (MappingRequest) returns (MappingResponse) {}
//  rpc MappingGet (MappingGetRequest) returns (MappingGetResponse) {}
//  rpc MappingGetStreaming (MappingGetRequest) returns (stream MappingGetResponse) {}
//  rpc MappingDelete (MappingDeleteRequest) returns (MappingDeleteResponse) {}
//
//  rpc NexthopCreate (NexthopRequest) returns (NexthopResponse) {}
//  rpc NexthopUpdate (NexthopRequest) returns (NexthopResponse) {}
//  rpc NexthopGet (NexthopGetRequest) returns (NexthopGetResponse) {}
//  rpc NexthopDelete (NexthopDeleteRequest) returns (NexthopDeleteResponse) {}
//  rpc NhGroupCreate (NhGroupRequest) returns (NhGroupResponse) {}
//  rpc NhGroupUpdate (NhGroupRequest) returns (NhGroupResponse) {}
//  rpc NhGroupGet (NhGroupGetRequest) returns (NhGroupGetResponse) {}
//  rpc NhGroupDelete (NhGroupDeleteRequest) returns (NhGroupDeleteResponse) {}
//
//  rpc SubnetCreate (SubnetRequest) returns (SubnetResponse) {}
//  rpc SubnetUpdate (SubnetRequest) returns (SubnetResponse) {}
//  rpc SubnetGet (SubnetGetRequest) returns (SubnetGetResponse) {}
//  rpc SubnetDelete (SubnetDeleteRequest) returns (SubnetDeleteResponse) {}
//
//  rpc TunnelCreate (TunnelRequest) returns (TunnelResponse) {}
//  rpc TunnelUpdate (TunnelRequest) returns (TunnelResponse) {}
//  rpc TunnelGet (TunnelGetRequest) returns (TunnelGetResponse) {}
//  rpc TunnelDelete (TunnelDeleteRequest) returns (TunnelDeleteResponse) {}
// 
//  rpc VPCCreate (VPCRequest) returns (VPCResponse) {}
//  rpc VPCUpdate (VPCRequest) returns (VPCResponse) {}
//  rpc VPCGet (VPCGetRequest) returns (VPCGetResponse) {}
//  rpc VPCDelete (VPCDeleteRequest) returns (VPCDeleteResponse) {}
//  rpc VPCPeerCreate (VPCPeerRequest) returns (VPCPeerResponse) {}
//  rpc VPCPeerUpdate (VPCPeerRequest) returns (VPCPeerResponse) {}
//  rpc VPCPeerGet (VPCPeerGetRequest) returns (VPCPeerGetResponse) {}
//  rpc VPCPeerDelete (VPCPeerDeleteRequest) returns (VPCPeerDeleteResponse) {}
//
//  rpc SecurityPolicyCreate (SecurityPolicyRequest) returns (SecurityPolicyResponse) {}
//  rpc SecurityPolicyUpdate (SecurityPolicyRequest) returns (SecurityPolicyResponse) {}
//  rpc SecurityPolicyGet (SecurityPolicyGetRequest) returns (SecurityPolicyGetResponse) {}
//  rpc SecurityPolicyGetStreaming (SecurityPolicyGetRequest) returns (stream SecurityPolicyGetResponse) {}
//  rpc SecurityPolicyDelete (SecurityPolicyDeleteRequest) returns (SecurityPolicyDeleteResponse) {}
//
//  rpc SecurityRuleCreate (SecurityRuleRequest) returns (SecurityRuleResponse) {}
//  rpc SecurityRuleUpdate (SecurityRuleRequest) returns (SecurityRuleResponse) {}
//  rpc SecurityRuleGet (SecurityRuleGetRequest) returns (SecurityRuleGetResponse) {}
//  rpc SecurityRuleDelete (SecurityRuleDeleteRequest) returns (SecurityRuleDeleteResponse) {}
//
//  rpc SecurityProfileCreate (SecurityProfileRequest) returns (SecurityProfileResponse) {}
//  rpc SecurityProfileUpdate (SecurityProfileRequest) returns (SecurityProfileResponse) {}
//  rpc SecurityProfileGet (SecurityProfileGetRequest) returns (SecurityProfileGetResponse) {}
//  rpc SecurityProfileDelete (SecurityProfileDeleteRequest) returns (SecurityProfileDeleteResponse) {}
//
//  rpc SecurityPolicyLookup (SecurityPolicyLookupRequest) returns (SecurityPolicyLookupResponse) {}
//
class CloudInfraService final {
 public:
  static constexpr char const* service_full_name() {
    return "opi_api.network.cloud.v1alpha1.CloudInfraService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // device create request
    virtual ::grpc::Status CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::opi_api::network::cloud::v1alpha1::Device* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::network::cloud::v1alpha1::Device>> AsyncCreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::network::cloud::v1alpha1::Device>>(AsyncCreateDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::network::cloud::v1alpha1::Device>> PrepareAsyncCreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::network::cloud::v1alpha1::Device>>(PrepareAsyncCreateDeviceRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // device create request
      virtual void CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::network::cloud::v1alpha1::Device>* AsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::network::cloud::v1alpha1::Device>* PrepareAsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::opi_api::network::cloud::v1alpha1::Device* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>> AsyncCreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>>(AsyncCreateDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>> PrepareAsyncCreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>>(PrepareAsyncCreateDeviceRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, std::function<void(::grpc::Status)>) override;
      void CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* AsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* PrepareAsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDevice_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // device create request
    virtual ::grpc::Status CreateDevice(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDevice() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* /*context*/, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* /*request*/, ::opi_api::network::cloud::v1alpha1::Device* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDevice(::grpc::ServerContext* context, ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::network::cloud::v1alpha1::Device>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateDevice<Service > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDevice() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response) { return this->CreateDevice(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDevice(
        ::grpc::MessageAllocator< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* /*context*/, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* /*request*/, ::opi_api::network::cloud::v1alpha1::Device* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* /*request*/, ::opi_api::network::cloud::v1alpha1::Device* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateDevice<Service > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDevice() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* /*context*/, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* /*request*/, ::opi_api::network::cloud::v1alpha1::Device* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDevice() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* /*context*/, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* /*request*/, ::opi_api::network::cloud::v1alpha1::Device* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDevice() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* /*context*/, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* /*request*/, ::opi_api::network::cloud::v1alpha1::Device* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDevice() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device>* streamer) {
                       return this->StreamedCreateDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* /*context*/, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* /*request*/, ::opi_api::network::cloud::v1alpha1::Device* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest,::opi_api::network::cloud::v1alpha1::Device>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateDevice<Service > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateDevice<Service > StreamedService;
};

}  // namespace v1alpha1
}  // namespace cloud
}  // namespace network
}  // namespace opi_api


#endif  // GRPC_device_2eproto__INCLUDED
