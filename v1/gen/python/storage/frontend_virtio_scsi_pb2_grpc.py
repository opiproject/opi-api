# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from storage import frontend_virtio_scsi_pb2 as storage_dot_frontend__virtio__scsi__pb2


class FrontendVirtioScsiServiceStub(object):
    """Front End (host-facing) APIs. Mostly used for Virtio-scsi emulation and host presentation as alternative to Virtio-blk.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateVirtioScsiTarget = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiTarget',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiTargetRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.FromString,
                _registered_method=True)
        self.DeleteVirtioScsiTarget = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiTarget',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiTargetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateVirtioScsiTarget = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiTarget',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiTargetRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.FromString,
                _registered_method=True)
        self.ListVirtioScsiTargets = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiTargets',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiTargetsRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiTargetsResponse.FromString,
                _registered_method=True)
        self.GetVirtioScsiTarget = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiTarget',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiTargetRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.FromString,
                _registered_method=True)
        self.StatsVirtioScsiTarget = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/StatsVirtioScsiTarget',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiTargetRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiTargetResponse.FromString,
                _registered_method=True)
        self.CreateVirtioScsiController = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiController',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiControllerRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
                _registered_method=True)
        self.DeleteVirtioScsiController = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiController',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiControllerRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateVirtioScsiController = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiController',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiControllerRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
                _registered_method=True)
        self.ListVirtioScsiControllers = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiControllers',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiControllersRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiControllersResponse.FromString,
                _registered_method=True)
        self.GetVirtioScsiController = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiController',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiControllerRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
                _registered_method=True)
        self.StatsVirtioScsiController = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/StatsVirtioScsiController',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiControllerRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiControllerResponse.FromString,
                _registered_method=True)
        self.CreateVirtioScsiLun = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiLun',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiLunRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
                _registered_method=True)
        self.DeleteVirtioScsiLun = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiLun',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiLunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateVirtioScsiLun = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiLun',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiLunRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
                _registered_method=True)
        self.ListVirtioScsiLuns = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiLuns',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiLunsRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiLunsResponse.FromString,
                _registered_method=True)
        self.GetVirtioScsiLun = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiLun',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiLunRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
                _registered_method=True)
        self.StatsVirtioScsiLun = channel.unary_unary(
                '/opi_api.storage.v1.FrontendVirtioScsiService/StatsVirtioScsiLun',
                request_serializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiLunRequest.SerializeToString,
                response_deserializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiLunResponse.FromString,
                _registered_method=True)


class FrontendVirtioScsiServiceServicer(object):
    """Front End (host-facing) APIs. Mostly used for Virtio-scsi emulation and host presentation as alternative to Virtio-blk.
    """

    def CreateVirtioScsiTarget(self, request, context):
        """Create an Virtio Scsi Target
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVirtioScsiTarget(self, request, context):
        """Delete an Virtio Scsi Target
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVirtioScsiTarget(self, request, context):
        """Update an Virtio Scsi Target
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVirtioScsiTargets(self, request, context):
        """List Virtio Scsi Targets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtioScsiTarget(self, request, context):
        """Get an Virtio Scsi Target
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatsVirtioScsiTarget(self, request, context):
        """Get an Virtio Scsi Target statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVirtioScsiController(self, request, context):
        """Create an Virtio Scsi Controller
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVirtioScsiController(self, request, context):
        """Delete an Virtio Scsi Controller
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVirtioScsiController(self, request, context):
        """Update an Virtio Scsi Controller
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVirtioScsiControllers(self, request, context):
        """List Virtio Scsi Controllers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtioScsiController(self, request, context):
        """Get an Virtio Scsi Controller
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatsVirtioScsiController(self, request, context):
        """Get an Virtio Scsi Controller statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVirtioScsiLun(self, request, context):
        """Create an Virtio Scsi Lun
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVirtioScsiLun(self, request, context):
        """Delete an Virtio Scsi Lun
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVirtioScsiLun(self, request, context):
        """Update an Virtio Scsi Lun
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVirtioScsiLuns(self, request, context):
        """List Virtio Scsi Luns
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtioScsiLun(self, request, context):
        """Get an Virtio Scsi Lun
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatsVirtioScsiLun(self, request, context):
        """Get an Virtio Scsi Lun statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FrontendVirtioScsiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateVirtioScsiTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVirtioScsiTarget,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiTargetRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.SerializeToString,
            ),
            'DeleteVirtioScsiTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVirtioScsiTarget,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiTargetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateVirtioScsiTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVirtioScsiTarget,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiTargetRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.SerializeToString,
            ),
            'ListVirtioScsiTargets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVirtioScsiTargets,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiTargetsRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiTargetsResponse.SerializeToString,
            ),
            'GetVirtioScsiTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtioScsiTarget,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiTargetRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.SerializeToString,
            ),
            'StatsVirtioScsiTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.StatsVirtioScsiTarget,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiTargetRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiTargetResponse.SerializeToString,
            ),
            'CreateVirtioScsiController': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVirtioScsiController,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiControllerRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.SerializeToString,
            ),
            'DeleteVirtioScsiController': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVirtioScsiController,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiControllerRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateVirtioScsiController': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVirtioScsiController,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiControllerRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.SerializeToString,
            ),
            'ListVirtioScsiControllers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVirtioScsiControllers,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiControllersRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiControllersResponse.SerializeToString,
            ),
            'GetVirtioScsiController': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtioScsiController,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiControllerRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.SerializeToString,
            ),
            'StatsVirtioScsiController': grpc.unary_unary_rpc_method_handler(
                    servicer.StatsVirtioScsiController,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiControllerRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiControllerResponse.SerializeToString,
            ),
            'CreateVirtioScsiLun': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVirtioScsiLun,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiLunRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.SerializeToString,
            ),
            'DeleteVirtioScsiLun': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVirtioScsiLun,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiLunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateVirtioScsiLun': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVirtioScsiLun,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiLunRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.SerializeToString,
            ),
            'ListVirtioScsiLuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVirtioScsiLuns,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiLunsRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiLunsResponse.SerializeToString,
            ),
            'GetVirtioScsiLun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtioScsiLun,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiLunRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.SerializeToString,
            ),
            'StatsVirtioScsiLun': grpc.unary_unary_rpc_method_handler(
                    servicer.StatsVirtioScsiLun,
                    request_deserializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiLunRequest.FromString,
                    response_serializer=storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiLunResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'opi_api.storage.v1.FrontendVirtioScsiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('opi_api.storage.v1.FrontendVirtioScsiService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FrontendVirtioScsiService(object):
    """Front End (host-facing) APIs. Mostly used for Virtio-scsi emulation and host presentation as alternative to Virtio-blk.
    """

    @staticmethod
    def CreateVirtioScsiTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiTarget',
            storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiTargetRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteVirtioScsiTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiTarget',
            storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiTargetRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateVirtioScsiTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiTarget',
            storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiTargetRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListVirtioScsiTargets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiTargets',
            storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiTargetsRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiTargetsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVirtioScsiTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiTarget',
            storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiTargetRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiTarget.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StatsVirtioScsiTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/StatsVirtioScsiTarget',
            storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiTargetRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiTargetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateVirtioScsiController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiController',
            storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiControllerRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteVirtioScsiController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiController',
            storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiControllerRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateVirtioScsiController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiController',
            storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiControllerRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListVirtioScsiControllers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiControllers',
            storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiControllersRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiControllersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVirtioScsiController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiController',
            storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiControllerRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiController.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StatsVirtioScsiController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/StatsVirtioScsiController',
            storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiControllerRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiControllerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateVirtioScsiLun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiLun',
            storage_dot_frontend__virtio__scsi__pb2.CreateVirtioScsiLunRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteVirtioScsiLun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiLun',
            storage_dot_frontend__virtio__scsi__pb2.DeleteVirtioScsiLunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateVirtioScsiLun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiLun',
            storage_dot_frontend__virtio__scsi__pb2.UpdateVirtioScsiLunRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListVirtioScsiLuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiLuns',
            storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiLunsRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.ListVirtioScsiLunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVirtioScsiLun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiLun',
            storage_dot_frontend__virtio__scsi__pb2.GetVirtioScsiLunRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.VirtioScsiLun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StatsVirtioScsiLun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/opi_api.storage.v1.FrontendVirtioScsiService/StatsVirtioScsiLun',
            storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiLunRequest.SerializeToString,
            storage_dot_frontend__virtio__scsi__pb2.StatsVirtioScsiLunResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
