// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: ipsec.proto
// Original file comments:
//
// Copyright (C) 2021 Intel Corporation
// Copyright (c) 2023 Dell Inc, or its subsidiaries.
// SPDX-License-Identifier: Apache-2.0
//
// Major pieces taken from:
// https://github.com/ligato/cn-infra/blob/master/examples/cryptodata-proto-plugin/ipsec/ipsec.proto
#ifndef GRPC_ipsec_2eproto__INCLUDED
#define GRPC_ipsec_2eproto__INCLUDED

#include "ipsec.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace opi_api {
namespace security {
namespace v1 {

// Service functions for IPSec Protocol 
class IPsecService final {
 public:
  static constexpr char const* service_full_name() {
    return "opi_api.security.v1.IPsecService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status IPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::opi_api::security::v1::IPsecVersionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecVersionResponse>> AsyncIPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecVersionResponse>>(AsyncIPsecVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecVersionResponse>> PrepareAsyncIPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecVersionResponse>>(PrepareAsyncIPsecVersionRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::opi_api::security::v1::IPsecStatsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecStatsResponse>> AsyncIPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecStatsResponse>>(AsyncIPsecStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecStatsResponse>> PrepareAsyncIPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecStatsResponse>>(PrepareAsyncIPsecStatsRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::opi_api::security::v1::IPsecInitiateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecInitiateResponse>> AsyncIPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecInitiateResponse>>(AsyncIPsecInitiateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecInitiateResponse>> PrepareAsyncIPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecInitiateResponse>>(PrepareAsyncIPsecInitiateRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::opi_api::security::v1::IPsecTerminateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecTerminateResponse>> AsyncIPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecTerminateResponse>>(AsyncIPsecTerminateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecTerminateResponse>> PrepareAsyncIPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecTerminateResponse>>(PrepareAsyncIPsecTerminateRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::opi_api::security::v1::IPsecRekeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecRekeyResponse>> AsyncIPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecRekeyResponse>>(AsyncIPsecRekeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecRekeyResponse>> PrepareAsyncIPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecRekeyResponse>>(PrepareAsyncIPsecRekeyRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::opi_api::security::v1::IPsecListSasResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListSasResponse>> AsyncIPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListSasResponse>>(AsyncIPsecListSasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListSasResponse>> PrepareAsyncIPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListSasResponse>>(PrepareAsyncIPsecListSasRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::opi_api::security::v1::IPsecListConnsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListConnsResponse>> AsyncIPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListConnsResponse>>(AsyncIPsecListConnsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListConnsResponse>> PrepareAsyncIPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListConnsResponse>>(PrepareAsyncIPsecListConnsRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::opi_api::security::v1::IPsecListCertsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListCertsResponse>> AsyncIPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListCertsResponse>>(AsyncIPsecListCertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListCertsResponse>> PrepareAsyncIPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListCertsResponse>>(PrepareAsyncIPsecListCertsRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::opi_api::security::v1::IPsecLoadConnResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecLoadConnResponse>> AsyncIPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecLoadConnResponse>>(AsyncIPsecLoadConnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecLoadConnResponse>> PrepareAsyncIPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecLoadConnResponse>>(PrepareAsyncIPsecLoadConnRaw(context, request, cq));
    }
    virtual ::grpc::Status IPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::opi_api::security::v1::IPsecUnloadConnResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecUnloadConnResponse>> AsyncIPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecUnloadConnResponse>>(AsyncIPsecUnloadConnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecUnloadConnResponse>> PrepareAsyncIPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecUnloadConnResponse>>(PrepareAsyncIPsecUnloadConnRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void IPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest* request, ::opi_api::security::v1::IPsecVersionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest* request, ::opi_api::security::v1::IPsecVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest* request, ::opi_api::security::v1::IPsecStatsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest* request, ::opi_api::security::v1::IPsecStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest* request, ::opi_api::security::v1::IPsecInitiateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest* request, ::opi_api::security::v1::IPsecInitiateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest* request, ::opi_api::security::v1::IPsecTerminateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest* request, ::opi_api::security::v1::IPsecTerminateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest* request, ::opi_api::security::v1::IPsecRekeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest* request, ::opi_api::security::v1::IPsecRekeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest* request, ::opi_api::security::v1::IPsecListSasResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest* request, ::opi_api::security::v1::IPsecListSasResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest* request, ::opi_api::security::v1::IPsecListConnsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest* request, ::opi_api::security::v1::IPsecListConnsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest* request, ::opi_api::security::v1::IPsecListCertsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest* request, ::opi_api::security::v1::IPsecListCertsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest* request, ::opi_api::security::v1::IPsecLoadConnResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest* request, ::opi_api::security::v1::IPsecLoadConnResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest* request, ::opi_api::security::v1::IPsecUnloadConnResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest* request, ::opi_api::security::v1::IPsecUnloadConnResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecVersionResponse>* AsyncIPsecVersionRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecVersionResponse>* PrepareAsyncIPsecVersionRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecStatsResponse>* AsyncIPsecStatsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecStatsResponse>* PrepareAsyncIPsecStatsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecInitiateResponse>* AsyncIPsecInitiateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecInitiateResponse>* PrepareAsyncIPsecInitiateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecTerminateResponse>* AsyncIPsecTerminateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecTerminateResponse>* PrepareAsyncIPsecTerminateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecRekeyResponse>* AsyncIPsecRekeyRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecRekeyResponse>* PrepareAsyncIPsecRekeyRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListSasResponse>* AsyncIPsecListSasRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListSasResponse>* PrepareAsyncIPsecListSasRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListConnsResponse>* AsyncIPsecListConnsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListConnsResponse>* PrepareAsyncIPsecListConnsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListCertsResponse>* AsyncIPsecListCertsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecListCertsResponse>* PrepareAsyncIPsecListCertsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecLoadConnResponse>* AsyncIPsecLoadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecLoadConnResponse>* PrepareAsyncIPsecLoadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecUnloadConnResponse>* AsyncIPsecUnloadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::security::v1::IPsecUnloadConnResponse>* PrepareAsyncIPsecUnloadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status IPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::opi_api::security::v1::IPsecVersionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecVersionResponse>> AsyncIPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecVersionResponse>>(AsyncIPsecVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecVersionResponse>> PrepareAsyncIPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecVersionResponse>>(PrepareAsyncIPsecVersionRaw(context, request, cq));
    }
    ::grpc::Status IPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::opi_api::security::v1::IPsecStatsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecStatsResponse>> AsyncIPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecStatsResponse>>(AsyncIPsecStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecStatsResponse>> PrepareAsyncIPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecStatsResponse>>(PrepareAsyncIPsecStatsRaw(context, request, cq));
    }
    ::grpc::Status IPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::opi_api::security::v1::IPsecInitiateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecInitiateResponse>> AsyncIPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecInitiateResponse>>(AsyncIPsecInitiateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecInitiateResponse>> PrepareAsyncIPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecInitiateResponse>>(PrepareAsyncIPsecInitiateRaw(context, request, cq));
    }
    ::grpc::Status IPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::opi_api::security::v1::IPsecTerminateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecTerminateResponse>> AsyncIPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecTerminateResponse>>(AsyncIPsecTerminateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecTerminateResponse>> PrepareAsyncIPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecTerminateResponse>>(PrepareAsyncIPsecTerminateRaw(context, request, cq));
    }
    ::grpc::Status IPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::opi_api::security::v1::IPsecRekeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecRekeyResponse>> AsyncIPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecRekeyResponse>>(AsyncIPsecRekeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecRekeyResponse>> PrepareAsyncIPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecRekeyResponse>>(PrepareAsyncIPsecRekeyRaw(context, request, cq));
    }
    ::grpc::Status IPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::opi_api::security::v1::IPsecListSasResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListSasResponse>> AsyncIPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListSasResponse>>(AsyncIPsecListSasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListSasResponse>> PrepareAsyncIPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListSasResponse>>(PrepareAsyncIPsecListSasRaw(context, request, cq));
    }
    ::grpc::Status IPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::opi_api::security::v1::IPsecListConnsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListConnsResponse>> AsyncIPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListConnsResponse>>(AsyncIPsecListConnsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListConnsResponse>> PrepareAsyncIPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListConnsResponse>>(PrepareAsyncIPsecListConnsRaw(context, request, cq));
    }
    ::grpc::Status IPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::opi_api::security::v1::IPsecListCertsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListCertsResponse>> AsyncIPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListCertsResponse>>(AsyncIPsecListCertsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListCertsResponse>> PrepareAsyncIPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListCertsResponse>>(PrepareAsyncIPsecListCertsRaw(context, request, cq));
    }
    ::grpc::Status IPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::opi_api::security::v1::IPsecLoadConnResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecLoadConnResponse>> AsyncIPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecLoadConnResponse>>(AsyncIPsecLoadConnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecLoadConnResponse>> PrepareAsyncIPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecLoadConnResponse>>(PrepareAsyncIPsecLoadConnRaw(context, request, cq));
    }
    ::grpc::Status IPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::opi_api::security::v1::IPsecUnloadConnResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecUnloadConnResponse>> AsyncIPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecUnloadConnResponse>>(AsyncIPsecUnloadConnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecUnloadConnResponse>> PrepareAsyncIPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecUnloadConnResponse>>(PrepareAsyncIPsecUnloadConnRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void IPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest* request, ::opi_api::security::v1::IPsecVersionResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecVersion(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest* request, ::opi_api::security::v1::IPsecVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest* request, ::opi_api::security::v1::IPsecStatsResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecStats(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest* request, ::opi_api::security::v1::IPsecStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest* request, ::opi_api::security::v1::IPsecInitiateResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecInitiate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest* request, ::opi_api::security::v1::IPsecInitiateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest* request, ::opi_api::security::v1::IPsecTerminateResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecTerminate(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest* request, ::opi_api::security::v1::IPsecTerminateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest* request, ::opi_api::security::v1::IPsecRekeyResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecRekey(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest* request, ::opi_api::security::v1::IPsecRekeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest* request, ::opi_api::security::v1::IPsecListSasResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecListSas(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest* request, ::opi_api::security::v1::IPsecListSasResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest* request, ::opi_api::security::v1::IPsecListConnsResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecListConns(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest* request, ::opi_api::security::v1::IPsecListConnsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest* request, ::opi_api::security::v1::IPsecListCertsResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecListCerts(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest* request, ::opi_api::security::v1::IPsecListCertsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest* request, ::opi_api::security::v1::IPsecLoadConnResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecLoadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest* request, ::opi_api::security::v1::IPsecLoadConnResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest* request, ::opi_api::security::v1::IPsecUnloadConnResponse* response, std::function<void(::grpc::Status)>) override;
      void IPsecUnloadConn(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest* request, ::opi_api::security::v1::IPsecUnloadConnResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecVersionResponse>* AsyncIPsecVersionRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecVersionResponse>* PrepareAsyncIPsecVersionRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecStatsResponse>* AsyncIPsecStatsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecStatsResponse>* PrepareAsyncIPsecStatsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecInitiateResponse>* AsyncIPsecInitiateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecInitiateResponse>* PrepareAsyncIPsecInitiateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecInitiateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecTerminateResponse>* AsyncIPsecTerminateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecTerminateResponse>* PrepareAsyncIPsecTerminateRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecTerminateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecRekeyResponse>* AsyncIPsecRekeyRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecRekeyResponse>* PrepareAsyncIPsecRekeyRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecRekeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListSasResponse>* AsyncIPsecListSasRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListSasResponse>* PrepareAsyncIPsecListSasRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListSasRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListConnsResponse>* AsyncIPsecListConnsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListConnsResponse>* PrepareAsyncIPsecListConnsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListConnsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListCertsResponse>* AsyncIPsecListCertsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecListCertsResponse>* PrepareAsyncIPsecListCertsRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecListCertsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecLoadConnResponse>* AsyncIPsecLoadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecLoadConnResponse>* PrepareAsyncIPsecLoadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecUnloadConnResponse>* AsyncIPsecUnloadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::security::v1::IPsecUnloadConnResponse>* PrepareAsyncIPsecUnloadConnRaw(::grpc::ClientContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecVersion_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecStats_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecInitiate_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecTerminate_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecRekey_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecListSas_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecListConns_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecListCerts_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecLoadConn_;
    const ::grpc::internal::RpcMethod rpcmethod_IPsecUnloadConn_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status IPsecVersion(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecVersionRequest* request, ::opi_api::security::v1::IPsecVersionResponse* response);
    virtual ::grpc::Status IPsecStats(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecStatsRequest* request, ::opi_api::security::v1::IPsecStatsResponse* response);
    virtual ::grpc::Status IPsecInitiate(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecInitiateRequest* request, ::opi_api::security::v1::IPsecInitiateResponse* response);
    virtual ::grpc::Status IPsecTerminate(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecTerminateRequest* request, ::opi_api::security::v1::IPsecTerminateResponse* response);
    virtual ::grpc::Status IPsecRekey(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecRekeyRequest* request, ::opi_api::security::v1::IPsecRekeyResponse* response);
    virtual ::grpc::Status IPsecListSas(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecListSasRequest* request, ::opi_api::security::v1::IPsecListSasResponse* response);
    virtual ::grpc::Status IPsecListConns(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecListConnsRequest* request, ::opi_api::security::v1::IPsecListConnsResponse* response);
    virtual ::grpc::Status IPsecListCerts(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecListCertsRequest* request, ::opi_api::security::v1::IPsecListCertsResponse* response);
    virtual ::grpc::Status IPsecLoadConn(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest* request, ::opi_api::security::v1::IPsecLoadConnResponse* response);
    virtual ::grpc::Status IPsecUnloadConn(::grpc::ServerContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest* request, ::opi_api::security::v1::IPsecUnloadConnResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecVersion() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_IPsecVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecVersion(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecVersionRequest* /*request*/, ::opi_api::security::v1::IPsecVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecVersion(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecVersionRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecVersionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecStats() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_IPsecStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecStats(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecStatsRequest* /*request*/, ::opi_api::security::v1::IPsecStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecStats(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecStatsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecStatsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecInitiate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecInitiate() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_IPsecInitiate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecInitiate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecInitiateRequest* /*request*/, ::opi_api::security::v1::IPsecInitiateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecInitiate(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecInitiateRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecInitiateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecTerminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecTerminate() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_IPsecTerminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecTerminate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecTerminateRequest* /*request*/, ::opi_api::security::v1::IPsecTerminateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecTerminate(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecTerminateRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecTerminateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecRekey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecRekey() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_IPsecRekey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecRekey(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecRekeyRequest* /*request*/, ::opi_api::security::v1::IPsecRekeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecRekey(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecRekeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecRekeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecListSas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecListSas() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_IPsecListSas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListSas(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListSasRequest* /*request*/, ::opi_api::security::v1::IPsecListSasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecListSas(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecListSasRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecListSasResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecListConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecListConns() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_IPsecListConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListConns(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListConnsRequest* /*request*/, ::opi_api::security::v1::IPsecListConnsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecListConns(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecListConnsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecListConnsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecListCerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecListCerts() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_IPsecListCerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListCerts(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListCertsRequest* /*request*/, ::opi_api::security::v1::IPsecListCertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecListCerts(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecListCertsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecListCertsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecLoadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecLoadConn() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_IPsecLoadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecLoadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecLoadConnRequest* /*request*/, ::opi_api::security::v1::IPsecLoadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecLoadConn(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecLoadConnRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecLoadConnResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IPsecUnloadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IPsecUnloadConn() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_IPsecUnloadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecUnloadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecUnloadConnRequest* /*request*/, ::opi_api::security::v1::IPsecUnloadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecUnloadConn(::grpc::ServerContext* context, ::opi_api::security::v1::IPsecUnloadConnRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::security::v1::IPsecUnloadConnResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_IPsecVersion<WithAsyncMethod_IPsecStats<WithAsyncMethod_IPsecInitiate<WithAsyncMethod_IPsecTerminate<WithAsyncMethod_IPsecRekey<WithAsyncMethod_IPsecListSas<WithAsyncMethod_IPsecListConns<WithAsyncMethod_IPsecListCerts<WithAsyncMethod_IPsecLoadConn<WithAsyncMethod_IPsecUnloadConn<Service > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_IPsecVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecVersion() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecVersionRequest, ::opi_api::security::v1::IPsecVersionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecVersionRequest* request, ::opi_api::security::v1::IPsecVersionResponse* response) { return this->IPsecVersion(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecVersion(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecVersionRequest, ::opi_api::security::v1::IPsecVersionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecVersionRequest, ::opi_api::security::v1::IPsecVersionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecVersion(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecVersionRequest* /*request*/, ::opi_api::security::v1::IPsecVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecVersionRequest* /*request*/, ::opi_api::security::v1::IPsecVersionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecStats() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecStatsRequest, ::opi_api::security::v1::IPsecStatsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecStatsRequest* request, ::opi_api::security::v1::IPsecStatsResponse* response) { return this->IPsecStats(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecStats(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecStatsRequest, ::opi_api::security::v1::IPsecStatsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecStatsRequest, ::opi_api::security::v1::IPsecStatsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecStats(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecStatsRequest* /*request*/, ::opi_api::security::v1::IPsecStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecStats(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecStatsRequest* /*request*/, ::opi_api::security::v1::IPsecStatsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecInitiate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecInitiate() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecInitiateRequest, ::opi_api::security::v1::IPsecInitiateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecInitiateRequest* request, ::opi_api::security::v1::IPsecInitiateResponse* response) { return this->IPsecInitiate(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecInitiate(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecInitiateRequest, ::opi_api::security::v1::IPsecInitiateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecInitiateRequest, ::opi_api::security::v1::IPsecInitiateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecInitiate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecInitiate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecInitiateRequest* /*request*/, ::opi_api::security::v1::IPsecInitiateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecInitiate(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecInitiateRequest* /*request*/, ::opi_api::security::v1::IPsecInitiateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecTerminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecTerminate() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecTerminateRequest, ::opi_api::security::v1::IPsecTerminateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecTerminateRequest* request, ::opi_api::security::v1::IPsecTerminateResponse* response) { return this->IPsecTerminate(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecTerminate(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecTerminateRequest, ::opi_api::security::v1::IPsecTerminateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecTerminateRequest, ::opi_api::security::v1::IPsecTerminateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecTerminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecTerminate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecTerminateRequest* /*request*/, ::opi_api::security::v1::IPsecTerminateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecTerminate(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecTerminateRequest* /*request*/, ::opi_api::security::v1::IPsecTerminateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecRekey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecRekey() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecRekeyRequest, ::opi_api::security::v1::IPsecRekeyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecRekeyRequest* request, ::opi_api::security::v1::IPsecRekeyResponse* response) { return this->IPsecRekey(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecRekey(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecRekeyRequest, ::opi_api::security::v1::IPsecRekeyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecRekeyRequest, ::opi_api::security::v1::IPsecRekeyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecRekey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecRekey(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecRekeyRequest* /*request*/, ::opi_api::security::v1::IPsecRekeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecRekey(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecRekeyRequest* /*request*/, ::opi_api::security::v1::IPsecRekeyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecListSas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecListSas() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecListSasRequest, ::opi_api::security::v1::IPsecListSasResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecListSasRequest* request, ::opi_api::security::v1::IPsecListSasResponse* response) { return this->IPsecListSas(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecListSas(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecListSasRequest, ::opi_api::security::v1::IPsecListSasResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecListSasRequest, ::opi_api::security::v1::IPsecListSasResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecListSas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListSas(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListSasRequest* /*request*/, ::opi_api::security::v1::IPsecListSasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecListSas(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecListSasRequest* /*request*/, ::opi_api::security::v1::IPsecListSasResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecListConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecListConns() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecListConnsRequest, ::opi_api::security::v1::IPsecListConnsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecListConnsRequest* request, ::opi_api::security::v1::IPsecListConnsResponse* response) { return this->IPsecListConns(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecListConns(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecListConnsRequest, ::opi_api::security::v1::IPsecListConnsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecListConnsRequest, ::opi_api::security::v1::IPsecListConnsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecListConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListConns(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListConnsRequest* /*request*/, ::opi_api::security::v1::IPsecListConnsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecListConns(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecListConnsRequest* /*request*/, ::opi_api::security::v1::IPsecListConnsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecListCerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecListCerts() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecListCertsRequest, ::opi_api::security::v1::IPsecListCertsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecListCertsRequest* request, ::opi_api::security::v1::IPsecListCertsResponse* response) { return this->IPsecListCerts(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecListCerts(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecListCertsRequest, ::opi_api::security::v1::IPsecListCertsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecListCertsRequest, ::opi_api::security::v1::IPsecListCertsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecListCerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListCerts(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListCertsRequest* /*request*/, ::opi_api::security::v1::IPsecListCertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecListCerts(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecListCertsRequest* /*request*/, ::opi_api::security::v1::IPsecListCertsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecLoadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecLoadConn() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecLoadConnRequest, ::opi_api::security::v1::IPsecLoadConnResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecLoadConnRequest* request, ::opi_api::security::v1::IPsecLoadConnResponse* response) { return this->IPsecLoadConn(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecLoadConn(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecLoadConnRequest, ::opi_api::security::v1::IPsecLoadConnResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecLoadConnRequest, ::opi_api::security::v1::IPsecLoadConnResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecLoadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecLoadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecLoadConnRequest* /*request*/, ::opi_api::security::v1::IPsecLoadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecLoadConn(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecLoadConnRequest* /*request*/, ::opi_api::security::v1::IPsecLoadConnResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IPsecUnloadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IPsecUnloadConn() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecUnloadConnRequest, ::opi_api::security::v1::IPsecUnloadConnResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::security::v1::IPsecUnloadConnRequest* request, ::opi_api::security::v1::IPsecUnloadConnResponse* response) { return this->IPsecUnloadConn(context, request, response); }));}
    void SetMessageAllocatorFor_IPsecUnloadConn(
        ::grpc::MessageAllocator< ::opi_api::security::v1::IPsecUnloadConnRequest, ::opi_api::security::v1::IPsecUnloadConnResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::security::v1::IPsecUnloadConnRequest, ::opi_api::security::v1::IPsecUnloadConnResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IPsecUnloadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecUnloadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecUnloadConnRequest* /*request*/, ::opi_api::security::v1::IPsecUnloadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecUnloadConn(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::security::v1::IPsecUnloadConnRequest* /*request*/, ::opi_api::security::v1::IPsecUnloadConnResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_IPsecVersion<WithCallbackMethod_IPsecStats<WithCallbackMethod_IPsecInitiate<WithCallbackMethod_IPsecTerminate<WithCallbackMethod_IPsecRekey<WithCallbackMethod_IPsecListSas<WithCallbackMethod_IPsecListConns<WithCallbackMethod_IPsecListCerts<WithCallbackMethod_IPsecLoadConn<WithCallbackMethod_IPsecUnloadConn<Service > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_IPsecVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecVersion() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_IPsecVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecVersion(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecVersionRequest* /*request*/, ::opi_api::security::v1::IPsecVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecStats() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_IPsecStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecStats(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecStatsRequest* /*request*/, ::opi_api::security::v1::IPsecStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecInitiate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecInitiate() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_IPsecInitiate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecInitiate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecInitiateRequest* /*request*/, ::opi_api::security::v1::IPsecInitiateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecTerminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecTerminate() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_IPsecTerminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecTerminate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecTerminateRequest* /*request*/, ::opi_api::security::v1::IPsecTerminateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecRekey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecRekey() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_IPsecRekey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecRekey(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecRekeyRequest* /*request*/, ::opi_api::security::v1::IPsecRekeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecListSas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecListSas() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_IPsecListSas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListSas(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListSasRequest* /*request*/, ::opi_api::security::v1::IPsecListSasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecListConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecListConns() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_IPsecListConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListConns(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListConnsRequest* /*request*/, ::opi_api::security::v1::IPsecListConnsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecListCerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecListCerts() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_IPsecListCerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListCerts(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListCertsRequest* /*request*/, ::opi_api::security::v1::IPsecListCertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecLoadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecLoadConn() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_IPsecLoadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecLoadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecLoadConnRequest* /*request*/, ::opi_api::security::v1::IPsecLoadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IPsecUnloadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IPsecUnloadConn() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_IPsecUnloadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecUnloadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecUnloadConnRequest* /*request*/, ::opi_api::security::v1::IPsecUnloadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecVersion() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_IPsecVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecVersion(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecVersionRequest* /*request*/, ::opi_api::security::v1::IPsecVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecStats() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_IPsecStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecStats(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecStatsRequest* /*request*/, ::opi_api::security::v1::IPsecStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecStats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecInitiate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecInitiate() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_IPsecInitiate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecInitiate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecInitiateRequest* /*request*/, ::opi_api::security::v1::IPsecInitiateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecInitiate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecTerminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecTerminate() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_IPsecTerminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecTerminate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecTerminateRequest* /*request*/, ::opi_api::security::v1::IPsecTerminateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecTerminate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecRekey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecRekey() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_IPsecRekey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecRekey(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecRekeyRequest* /*request*/, ::opi_api::security::v1::IPsecRekeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecRekey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecListSas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecListSas() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_IPsecListSas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListSas(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListSasRequest* /*request*/, ::opi_api::security::v1::IPsecListSasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecListSas(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecListConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecListConns() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_IPsecListConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListConns(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListConnsRequest* /*request*/, ::opi_api::security::v1::IPsecListConnsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecListConns(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecListCerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecListCerts() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_IPsecListCerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListCerts(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListCertsRequest* /*request*/, ::opi_api::security::v1::IPsecListCertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecListCerts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecLoadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecLoadConn() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_IPsecLoadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecLoadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecLoadConnRequest* /*request*/, ::opi_api::security::v1::IPsecLoadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecLoadConn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IPsecUnloadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IPsecUnloadConn() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_IPsecUnloadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecUnloadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecUnloadConnRequest* /*request*/, ::opi_api::security::v1::IPsecUnloadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIPsecUnloadConn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecVersion() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecVersion(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecVersion(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecVersionRequest* /*request*/, ::opi_api::security::v1::IPsecVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecStats() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecStats(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecStats(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecStatsRequest* /*request*/, ::opi_api::security::v1::IPsecStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecStats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecInitiate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecInitiate() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecInitiate(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecInitiate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecInitiate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecInitiateRequest* /*request*/, ::opi_api::security::v1::IPsecInitiateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecInitiate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecTerminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecTerminate() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecTerminate(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecTerminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecTerminate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecTerminateRequest* /*request*/, ::opi_api::security::v1::IPsecTerminateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecTerminate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecRekey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecRekey() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecRekey(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecRekey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecRekey(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecRekeyRequest* /*request*/, ::opi_api::security::v1::IPsecRekeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecRekey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecListSas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecListSas() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecListSas(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecListSas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListSas(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListSasRequest* /*request*/, ::opi_api::security::v1::IPsecListSasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecListSas(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecListConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecListConns() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecListConns(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecListConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListConns(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListConnsRequest* /*request*/, ::opi_api::security::v1::IPsecListConnsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecListConns(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecListCerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecListCerts() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecListCerts(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecListCerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecListCerts(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListCertsRequest* /*request*/, ::opi_api::security::v1::IPsecListCertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecListCerts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecLoadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecLoadConn() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecLoadConn(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecLoadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecLoadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecLoadConnRequest* /*request*/, ::opi_api::security::v1::IPsecLoadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecLoadConn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IPsecUnloadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IPsecUnloadConn() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IPsecUnloadConn(context, request, response); }));
    }
    ~WithRawCallbackMethod_IPsecUnloadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IPsecUnloadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecUnloadConnRequest* /*request*/, ::opi_api::security::v1::IPsecUnloadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IPsecUnloadConn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecVersion() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecVersionRequest, ::opi_api::security::v1::IPsecVersionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecVersionRequest, ::opi_api::security::v1::IPsecVersionResponse>* streamer) {
                       return this->StreamedIPsecVersion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecVersion(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecVersionRequest* /*request*/, ::opi_api::security::v1::IPsecVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecVersionRequest,::opi_api::security::v1::IPsecVersionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecStats() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecStatsRequest, ::opi_api::security::v1::IPsecStatsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecStatsRequest, ::opi_api::security::v1::IPsecStatsResponse>* streamer) {
                       return this->StreamedIPsecStats(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecStats(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecStatsRequest* /*request*/, ::opi_api::security::v1::IPsecStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecStats(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecStatsRequest,::opi_api::security::v1::IPsecStatsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecInitiate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecInitiate() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecInitiateRequest, ::opi_api::security::v1::IPsecInitiateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecInitiateRequest, ::opi_api::security::v1::IPsecInitiateResponse>* streamer) {
                       return this->StreamedIPsecInitiate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecInitiate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecInitiate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecInitiateRequest* /*request*/, ::opi_api::security::v1::IPsecInitiateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecInitiate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecInitiateRequest,::opi_api::security::v1::IPsecInitiateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecTerminate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecTerminate() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecTerminateRequest, ::opi_api::security::v1::IPsecTerminateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecTerminateRequest, ::opi_api::security::v1::IPsecTerminateResponse>* streamer) {
                       return this->StreamedIPsecTerminate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecTerminate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecTerminate(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecTerminateRequest* /*request*/, ::opi_api::security::v1::IPsecTerminateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecTerminate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecTerminateRequest,::opi_api::security::v1::IPsecTerminateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecRekey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecRekey() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecRekeyRequest, ::opi_api::security::v1::IPsecRekeyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecRekeyRequest, ::opi_api::security::v1::IPsecRekeyResponse>* streamer) {
                       return this->StreamedIPsecRekey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecRekey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecRekey(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecRekeyRequest* /*request*/, ::opi_api::security::v1::IPsecRekeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecRekey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecRekeyRequest,::opi_api::security::v1::IPsecRekeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecListSas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecListSas() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecListSasRequest, ::opi_api::security::v1::IPsecListSasResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecListSasRequest, ::opi_api::security::v1::IPsecListSasResponse>* streamer) {
                       return this->StreamedIPsecListSas(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecListSas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecListSas(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListSasRequest* /*request*/, ::opi_api::security::v1::IPsecListSasResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecListSas(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecListSasRequest,::opi_api::security::v1::IPsecListSasResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecListConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecListConns() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecListConnsRequest, ::opi_api::security::v1::IPsecListConnsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecListConnsRequest, ::opi_api::security::v1::IPsecListConnsResponse>* streamer) {
                       return this->StreamedIPsecListConns(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecListConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecListConns(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListConnsRequest* /*request*/, ::opi_api::security::v1::IPsecListConnsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecListConns(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecListConnsRequest,::opi_api::security::v1::IPsecListConnsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecListCerts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecListCerts() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecListCertsRequest, ::opi_api::security::v1::IPsecListCertsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecListCertsRequest, ::opi_api::security::v1::IPsecListCertsResponse>* streamer) {
                       return this->StreamedIPsecListCerts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecListCerts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecListCerts(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecListCertsRequest* /*request*/, ::opi_api::security::v1::IPsecListCertsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecListCerts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecListCertsRequest,::opi_api::security::v1::IPsecListCertsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecLoadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecLoadConn() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecLoadConnRequest, ::opi_api::security::v1::IPsecLoadConnResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecLoadConnRequest, ::opi_api::security::v1::IPsecLoadConnResponse>* streamer) {
                       return this->StreamedIPsecLoadConn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecLoadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecLoadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecLoadConnRequest* /*request*/, ::opi_api::security::v1::IPsecLoadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecLoadConn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecLoadConnRequest,::opi_api::security::v1::IPsecLoadConnResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IPsecUnloadConn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IPsecUnloadConn() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::security::v1::IPsecUnloadConnRequest, ::opi_api::security::v1::IPsecUnloadConnResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::security::v1::IPsecUnloadConnRequest, ::opi_api::security::v1::IPsecUnloadConnResponse>* streamer) {
                       return this->StreamedIPsecUnloadConn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IPsecUnloadConn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IPsecUnloadConn(::grpc::ServerContext* /*context*/, const ::opi_api::security::v1::IPsecUnloadConnRequest* /*request*/, ::opi_api::security::v1::IPsecUnloadConnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIPsecUnloadConn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::security::v1::IPsecUnloadConnRequest,::opi_api::security::v1::IPsecUnloadConnResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_IPsecVersion<WithStreamedUnaryMethod_IPsecStats<WithStreamedUnaryMethod_IPsecInitiate<WithStreamedUnaryMethod_IPsecTerminate<WithStreamedUnaryMethod_IPsecRekey<WithStreamedUnaryMethod_IPsecListSas<WithStreamedUnaryMethod_IPsecListConns<WithStreamedUnaryMethod_IPsecListCerts<WithStreamedUnaryMethod_IPsecLoadConn<WithStreamedUnaryMethod_IPsecUnloadConn<Service > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_IPsecVersion<WithStreamedUnaryMethod_IPsecStats<WithStreamedUnaryMethod_IPsecInitiate<WithStreamedUnaryMethod_IPsecTerminate<WithStreamedUnaryMethod_IPsecRekey<WithStreamedUnaryMethod_IPsecListSas<WithStreamedUnaryMethod_IPsecListConns<WithStreamedUnaryMethod_IPsecListCerts<WithStreamedUnaryMethod_IPsecLoadConn<WithStreamedUnaryMethod_IPsecUnloadConn<Service > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace security
}  // namespace opi_api


#endif  // GRPC_ipsec_2eproto__INCLUDED
